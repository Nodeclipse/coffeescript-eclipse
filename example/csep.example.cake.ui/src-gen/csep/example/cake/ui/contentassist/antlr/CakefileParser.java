/*
* generated by Xtext
*/
package csep.example.cake.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import csep.example.cake.services.CakefileGrammarAccess;

public class CakefileParser extends AbstractContentAssistParser {
	
	@Inject
	private CakefileGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected csep.example.cake.ui.contentassist.antlr.internal.InternalCakefileParser createParser() {
		csep.example.cake.ui.contentassist.antlr.internal.InternalCakefileParser result = new csep.example.cake.ui.contentassist.antlr.internal.InternalCakefileParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRootAccess().getAlternatives(), "rule__Root__Alternatives");
					put(grammarAccess.getLineAccess().getAlternatives(), "rule__Line__Alternatives");
					put(grammarAccess.getStmtAccess().getAlternatives(), "rule__Stmt__Alternatives");
					put(grammarAccess.getSuperClassAccess().getAlternatives(), "rule__SuperClass__Alternatives");
					put(grammarAccess.getClassDeclarationAccess().getAlternatives_2(), "rule__ClassDeclaration__Alternatives_2");
					put(grammarAccess.getClassDeclarationAccess().getNameAlternatives_2_2_0_0(), "rule__ClassDeclaration__NameAlternatives_2_2_0_0");
					put(grammarAccess.getAssignedClassDeclarationAccess().getAlternatives_2(), "rule__AssignedClassDeclaration__Alternatives_2");
					put(grammarAccess.getAssignedClassDeclarationAccess().getNameAlternatives_2_1_0_0(), "rule__AssignedClassDeclaration__NameAlternatives_2_1_0_0");
					put(grammarAccess.getPostfixAccess().getAlternatives_1(), "rule__Postfix__Alternatives_1");
					put(grammarAccess.getForSourceAccess().getAlternatives_1(), "rule__ForSource__Alternatives_1");
					put(grammarAccess.getForSourceAccess().getAlternatives_1_1_2(), "rule__ForSource__Alternatives_1_1_2");
					put(grammarAccess.getRangeAccess().getAlternatives_0_0_2(), "rule__Range__Alternatives_0_0_2");
					put(grammarAccess.getAssignmentAccess().getAlternatives(), "rule__Assignment__Alternatives");
					put(grammarAccess.getAssignmentAccess().getOperatorAlternatives_0_0_0_1_0(), "rule__Assignment__OperatorAlternatives_0_0_0_1_0");
					put(grammarAccess.getAssignedAccess().getAlternatives(), "rule__Assigned__Alternatives");
					put(grammarAccess.getAdditiveOpAccess().getOperatorAlternatives_1_0_0_1_0(), "rule__AdditiveOp__OperatorAlternatives_1_0_0_1_0");
					put(grammarAccess.getUnaryOpAccess().getAlternatives(), "rule__UnaryOp__Alternatives");
					put(grammarAccess.getUnaryOpAccess().getAlternatives_0_0(), "rule__UnaryOp__Alternatives_0_0");
					put(grammarAccess.getUnaryOpAccess().getAlternatives_1_0(), "rule__UnaryOp__Alternatives_1_0");
					put(grammarAccess.getApplicationAccess().getAlternatives(), "rule__Application__Alternatives");
					put(grammarAccess.getFeatureCallAccess().getAlternatives(), "rule__FeatureCall__Alternatives");
					put(grammarAccess.getPropertyAccessAccess().getAlternatives(), "rule__PropertyAccess__Alternatives");
					put(grammarAccess.getNamedPropertyAccessAccess().getAlternatives(), "rule__NamedPropertyAccess__Alternatives");
					put(grammarAccess.getNamedPropertyAccessAccess().getAccessorAlternatives_0_0_0(), "rule__NamedPropertyAccess__AccessorAlternatives_0_0_0");
					put(grammarAccess.getIndexAccess().getAlternatives(), "rule__Index__Alternatives");
					put(grammarAccess.getIndexAccess().getDotsAlternatives_0_0_0(), "rule__Index__DotsAlternatives_0_0_0");
					put(grammarAccess.getIndexAccess().getDotsAlternatives_1_0_0_1_0(), "rule__Index__DotsAlternatives_1_0_0_1_0");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives_13_1_2(), "rule__PrimaryExpression__Alternatives_13_1_2");
					put(grammarAccess.getPropertyAccess().getAlternatives(), "rule__Property__Alternatives");
					put(grammarAccess.getPropertyAccess().getAccessorAlternatives_0_0_0_1_0(), "rule__Property__AccessorAlternatives_0_0_0_1_0");
					put(grammarAccess.getVariableAccess().getAlternatives(), "rule__Variable__Alternatives");
					put(grammarAccess.getVariableAccess().getAlternatives_1_0(), "rule__Variable__Alternatives_1_0");
					put(grammarAccess.getAssignableAccess().getAlternatives(), "rule__Assignable__Alternatives");
					put(grammarAccess.getExplicitArgListAccess().getAlternatives_1(), "rule__ExplicitArgList__Alternatives_1");
					put(grammarAccess.getArgListAccess().getAlternatives_1(), "rule__ArgList__Alternatives_1");
					put(grammarAccess.getDictItemsAccess().getAlternatives_1(), "rule__DictItems__Alternatives_1");
					put(grammarAccess.getExplicitDictItemsAccess().getAlternatives_1(), "rule__ExplicitDictItems__Alternatives_1");
					put(grammarAccess.getDictItemAccess().getAlternatives_2_1(), "rule__DictItem__Alternatives_2_1");
					put(grammarAccess.getDictKeyAccess().getAlternatives(), "rule__DictKey__Alternatives");
					put(grammarAccess.getLambdaAccess().getAlternatives_1(), "rule__Lambda__Alternatives_1");
					put(grammarAccess.getParamAccess().getAlternatives_0(), "rule__Param__Alternatives_0");
					put(grammarAccess.getParamAccess().getAlternatives_1(), "rule__Param__Alternatives_1");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getParentheticalAccess().getAlternatives(), "rule__Parenthetical__Alternatives");
					put(grammarAccess.getTaskDeclarationAccess().getGroup(), "rule__TaskDeclaration__Group__0");
					put(grammarAccess.getTaskDeclarationAccess().getGroup_6(), "rule__TaskDeclaration__Group_6__0");
					put(grammarAccess.getRootAccess().getGroup_1(), "rule__Root__Group_1__0");
					put(grammarAccess.getBodyAccess().getGroup(), "rule__Body__Group__0");
					put(grammarAccess.getBodyAccess().getGroup_1(), "rule__Body__Group_1__0");
					put(grammarAccess.getRequireStmtAccess().getGroup(), "rule__RequireStmt__Group__0");
					put(grammarAccess.getRequireStmtAccess().getGroup_0(), "rule__RequireStmt__Group_0__0");
					put(grammarAccess.getRequireStmtAccess().getGroup_0_0(), "rule__RequireStmt__Group_0_0__0");
					put(grammarAccess.getReturnStmtAccess().getGroup(), "rule__ReturnStmt__Group__0");
					put(grammarAccess.getReturnStmtAccess().getGroup_3(), "rule__ReturnStmt__Group_3__0");
					put(grammarAccess.getThrowStmtAccess().getGroup(), "rule__ThrowStmt__Group__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup(), "rule__ClassDeclaration__Group__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup_2_1(), "rule__ClassDeclaration__Group_2_1__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup_2_2(), "rule__ClassDeclaration__Group_2_2__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup_2_2_1(), "rule__ClassDeclaration__Group_2_2_1__0");
					put(grammarAccess.getAssignedClassDeclarationAccess().getGroup(), "rule__AssignedClassDeclaration__Group__0");
					put(grammarAccess.getAssignedClassDeclarationAccess().getGroup_2_0(), "rule__AssignedClassDeclaration__Group_2_0__0");
					put(grammarAccess.getAssignedClassDeclarationAccess().getGroup_2_1(), "rule__AssignedClassDeclaration__Group_2_1__0");
					put(grammarAccess.getAssignedClassDeclarationAccess().getGroup_2_1_1(), "rule__AssignedClassDeclaration__Group_2_1_1__0");
					put(grammarAccess.getPostfixAccess().getGroup(), "rule__Postfix__Group__0");
					put(grammarAccess.getPostfixAccess().getGroup_1_0(), "rule__Postfix__Group_1_0__0");
					put(grammarAccess.getPostfixAccess().getGroup_1_1(), "rule__Postfix__Group_1_1__0");
					put(grammarAccess.getPostfixAccess().getGroup_1_2(), "rule__Postfix__Group_1_2__0");
					put(grammarAccess.getPostfixAccess().getGroup_1_2_3(), "rule__Postfix__Group_1_2_3__0");
					put(grammarAccess.getPostfixAccess().getGroup_1_3(), "rule__Postfix__Group_1_3__0");
					put(grammarAccess.getPostfixAccess().getGroup_1_3_3(), "rule__Postfix__Group_1_3_3__0");
					put(grammarAccess.getForBodyAccess().getGroup(), "rule__ForBody__Group__0");
					put(grammarAccess.getForBodyAccess().getGroup_2(), "rule__ForBody__Group_2__0");
					put(grammarAccess.getForSourceAccess().getGroup(), "rule__ForSource__Group__0");
					put(grammarAccess.getForSourceAccess().getGroup_1_0(), "rule__ForSource__Group_1_0__0");
					put(grammarAccess.getForSourceAccess().getGroup_1_0_2(), "rule__ForSource__Group_1_0_2__0");
					put(grammarAccess.getForSourceAccess().getGroup_1_1(), "rule__ForSource__Group_1_1__0");
					put(grammarAccess.getForSourceAccess().getGroup_1_1_2_0(), "rule__ForSource__Group_1_1_2_0__0");
					put(grammarAccess.getForSourceAccess().getGroup_1_1_2_0_2(), "rule__ForSource__Group_1_1_2_0_2__0");
					put(grammarAccess.getForSourceAccess().getGroup_1_1_2_1(), "rule__ForSource__Group_1_1_2_1__0");
					put(grammarAccess.getForSourceAccess().getGroup_1_1_2_1_2(), "rule__ForSource__Group_1_1_2_1_2__0");
					put(grammarAccess.getRangeAccess().getGroup(), "rule__Range__Group__0");
					put(grammarAccess.getRangeAccess().getGroup_0(), "rule__Range__Group_0__0");
					put(grammarAccess.getRangeAccess().getGroup_0_0(), "rule__Range__Group_0_0__0");
					put(grammarAccess.getAssignmentAccess().getGroup_0(), "rule__Assignment__Group_0__0");
					put(grammarAccess.getAssignmentAccess().getGroup_0_0(), "rule__Assignment__Group_0_0__0");
					put(grammarAccess.getAssignmentAccess().getGroup_0_0_0(), "rule__Assignment__Group_0_0_0__0");
					put(grammarAccess.getAssignedAccess().getGroup_1(), "rule__Assigned__Group_1__0");
					put(grammarAccess.getLogicOpAccess().getGroup(), "rule__LogicOp__Group__0");
					put(grammarAccess.getLogicOpAccess().getGroup_1(), "rule__LogicOp__Group_1__0");
					put(grammarAccess.getLogicOpAccess().getGroup_1_0(), "rule__LogicOp__Group_1_0__0");
					put(grammarAccess.getLogicOpAccess().getGroup_1_0_0(), "rule__LogicOp__Group_1_0_0__0");
					put(grammarAccess.getCompareOpAccess().getGroup(), "rule__CompareOp__Group__0");
					put(grammarAccess.getCompareOpAccess().getGroup_1(), "rule__CompareOp__Group_1__0");
					put(grammarAccess.getCompareOpAccess().getGroup_1_0(), "rule__CompareOp__Group_1_0__0");
					put(grammarAccess.getCompareOpAccess().getGroup_1_0_0(), "rule__CompareOp__Group_1_0_0__0");
					put(grammarAccess.getRelationOpAccess().getGroup(), "rule__RelationOp__Group__0");
					put(grammarAccess.getRelationOpAccess().getGroup_1(), "rule__RelationOp__Group_1__0");
					put(grammarAccess.getRelationOpAccess().getGroup_1_0(), "rule__RelationOp__Group_1_0__0");
					put(grammarAccess.getRelationOpAccess().getGroup_1_0_0(), "rule__RelationOp__Group_1_0_0__0");
					put(grammarAccess.getShiftOpAccess().getGroup(), "rule__ShiftOp__Group__0");
					put(grammarAccess.getShiftOpAccess().getGroup_1(), "rule__ShiftOp__Group_1__0");
					put(grammarAccess.getShiftOpAccess().getGroup_1_0(), "rule__ShiftOp__Group_1_0__0");
					put(grammarAccess.getShiftOpAccess().getGroup_1_0_0(), "rule__ShiftOp__Group_1_0_0__0");
					put(grammarAccess.getAdditiveOpAccess().getGroup(), "rule__AdditiveOp__Group__0");
					put(grammarAccess.getAdditiveOpAccess().getGroup_1(), "rule__AdditiveOp__Group_1__0");
					put(grammarAccess.getAdditiveOpAccess().getGroup_1_0(), "rule__AdditiveOp__Group_1_0__0");
					put(grammarAccess.getAdditiveOpAccess().getGroup_1_0_0(), "rule__AdditiveOp__Group_1_0_0__0");
					put(grammarAccess.getMathOpAccess().getGroup(), "rule__MathOp__Group__0");
					put(grammarAccess.getMathOpAccess().getGroup_1(), "rule__MathOp__Group_1__0");
					put(grammarAccess.getMathOpAccess().getGroup_1_0(), "rule__MathOp__Group_1_0__0");
					put(grammarAccess.getMathOpAccess().getGroup_1_0_0(), "rule__MathOp__Group_1_0_0__0");
					put(grammarAccess.getUnaryOpAccess().getGroup_0(), "rule__UnaryOp__Group_0__0");
					put(grammarAccess.getUnaryOpAccess().getGroup_1(), "rule__UnaryOp__Group_1__0");
					put(grammarAccess.getUnaryOpAccess().getGroup_2(), "rule__UnaryOp__Group_2__0");
					put(grammarAccess.getApplicationAccess().getGroup_0(), "rule__Application__Group_0__0");
					put(grammarAccess.getApplicationAccess().getGroup_0_1(), "rule__Application__Group_0_1__0");
					put(grammarAccess.getApplicationAccess().getGroup_0_1_1(), "rule__Application__Group_0_1_1__0");
					put(grammarAccess.getApplicationAccess().getGroup_1(), "rule__Application__Group_1__0");
					put(grammarAccess.getFunctionCallAccess().getGroup(), "rule__FunctionCall__Group__0");
					put(grammarAccess.getThisPropertyAccess().getGroup(), "rule__ThisProperty__Group__0");
					put(grammarAccess.getNamedPropertyAccessAccess().getGroup_0(), "rule__NamedPropertyAccess__Group_0__0");
					put(grammarAccess.getNamedPropertyAccessAccess().getGroup_1(), "rule__NamedPropertyAccess__Group_1__0");
					put(grammarAccess.getIndexedPropertyAccessAccess().getGroup(), "rule__IndexedPropertyAccess__Group__0");
					put(grammarAccess.getIndexAccess().getGroup_0(), "rule__Index__Group_0__0");
					put(grammarAccess.getIndexAccess().getGroup_1(), "rule__Index__Group_1__0");
					put(grammarAccess.getIndexAccess().getGroup_1_0(), "rule__Index__Group_1_0__0");
					put(grammarAccess.getIndexAccess().getGroup_1_0_0(), "rule__Index__Group_1_0_0__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_8(), "rule__PrimaryExpression__Group_8__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_9(), "rule__PrimaryExpression__Group_9__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_9_1(), "rule__PrimaryExpression__Group_9_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_10(), "rule__PrimaryExpression__Group_10__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_10_1(), "rule__PrimaryExpression__Group_10_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_10_1_2(), "rule__PrimaryExpression__Group_10_1_2__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_11(), "rule__PrimaryExpression__Group_11__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_11_1(), "rule__PrimaryExpression__Group_11_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_11_1_2(), "rule__PrimaryExpression__Group_11_1_2__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_12(), "rule__PrimaryExpression__Group_12__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_12_1(), "rule__PrimaryExpression__Group_12_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_13(), "rule__PrimaryExpression__Group_13__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1(), "rule__PrimaryExpression__Group_13_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1_2_0(), "rule__PrimaryExpression__Group_13_1_2_0__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1_2_0_3(), "rule__PrimaryExpression__Group_13_1_2_0_3__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1_2_1(), "rule__PrimaryExpression__Group_13_1_2_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_14(), "rule__PrimaryExpression__Group_14__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_14_1(), "rule__PrimaryExpression__Group_14_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_14_1_4(), "rule__PrimaryExpression__Group_14_1_4__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getCaseAccess().getGroup(), "rule__Case__Group__0");
					put(grammarAccess.getCaseAccess().getGroup_2(), "rule__Case__Group_2__0");
					put(grammarAccess.getIfExpAccess().getGroup(), "rule__IfExp__Group__0");
					put(grammarAccess.getIfExpAccess().getGroup_1(), "rule__IfExp__Group_1__0");
					put(grammarAccess.getIfExpAccess().getGroup_2(), "rule__IfExp__Group_2__0");
					put(grammarAccess.getCondBlockAccess().getGroup(), "rule__CondBlock__Group__0");
					put(grammarAccess.getPropertyAccess().getGroup_0(), "rule__Property__Group_0__0");
					put(grammarAccess.getPropertyAccess().getGroup_0_0(), "rule__Property__Group_0_0__0");
					put(grammarAccess.getPropertyAccess().getGroup_0_0_0(), "rule__Property__Group_0_0_0__0");
					put(grammarAccess.getPropertyAccess().getGroup_1(), "rule__Property__Group_1__0");
					put(grammarAccess.getPropertyAccess().getGroup_1_0(), "rule__Property__Group_1_0__0");
					put(grammarAccess.getPropertyAccess().getGroup_1_0_0(), "rule__Property__Group_1_0_0__0");
					put(grammarAccess.getVariableAccess().getGroup_1(), "rule__Variable__Group_1__0");
					put(grammarAccess.getVariableAccess().getGroup_1_0_1(), "rule__Variable__Group_1_0_1__0");
					put(grammarAccess.getVariableAccess().getGroup_1_2(), "rule__Variable__Group_1_2__0");
					put(grammarAccess.getAssignableArrayAccess().getGroup(), "rule__AssignableArray__Group__0");
					put(grammarAccess.getAssignableArgListAccess().getGroup(), "rule__AssignableArgList__Group__0");
					put(grammarAccess.getAssignableArgListAccess().getGroup_1(), "rule__AssignableArgList__Group_1__0");
					put(grammarAccess.getAssignableArgAccess().getGroup(), "rule__AssignableArg__Group__0");
					put(grammarAccess.getArgAccess().getGroup(), "rule__Arg__Group__0");
					put(grammarAccess.getArgLineAccess().getGroup(), "rule__ArgLine__Group__0");
					put(grammarAccess.getArgLineAccess().getGroup_1(), "rule__ArgLine__Group_1__0");
					put(grammarAccess.getExplicitArgListAccess().getGroup(), "rule__ExplicitArgList__Group__0");
					put(grammarAccess.getExplicitArgListAccess().getGroup_1_0(), "rule__ExplicitArgList__Group_1_0__0");
					put(grammarAccess.getExplicitArgListAccess().getGroup_1_1(), "rule__ExplicitArgList__Group_1_1__0");
					put(grammarAccess.getArgListAccess().getGroup(), "rule__ArgList__Group__0");
					put(grammarAccess.getArgListAccess().getGroup_1_1(), "rule__ArgList__Group_1_1__0");
					put(grammarAccess.getArrayAccess().getGroup(), "rule__Array__Group__0");
					put(grammarAccess.getDictionaryAccess().getGroup(), "rule__Dictionary__Group__0");
					put(grammarAccess.getDictItemsAccess().getGroup(), "rule__DictItems__Group__0");
					put(grammarAccess.getDictItemsAccess().getGroup_1_1(), "rule__DictItems__Group_1_1__0");
					put(grammarAccess.getExplicitDictItemsAccess().getGroup(), "rule__ExplicitDictItems__Group__0");
					put(grammarAccess.getExplicitDictItemsAccess().getGroup_1_0(), "rule__ExplicitDictItems__Group_1_0__0");
					put(grammarAccess.getExplicitDictItemsAccess().getGroup_1_1(), "rule__ExplicitDictItems__Group_1_1__0");
					put(grammarAccess.getDictLineAccess().getGroup(), "rule__DictLine__Group__0");
					put(grammarAccess.getDictLineAccess().getGroup_1(), "rule__DictLine__Group_1__0");
					put(grammarAccess.getDictItemAccess().getGroup(), "rule__DictItem__Group__0");
					put(grammarAccess.getDictItemAccess().getGroup_2(), "rule__DictItem__Group_2__0");
					put(grammarAccess.getDictItemAccess().getGroup_2_1_1(), "rule__DictItem__Group_2_1_1__0");
					put(grammarAccess.getLambdaAccess().getGroup(), "rule__Lambda__Group__0");
					put(grammarAccess.getLambdaAccess().getGroup_0(), "rule__Lambda__Group_0__0");
					put(grammarAccess.getLambdaAccess().getGroup_0_1(), "rule__Lambda__Group_0_1__0");
					put(grammarAccess.getLambdaAccess().getGroup_0_1_1(), "rule__Lambda__Group_0_1_1__0");
					put(grammarAccess.getParamAccess().getGroup(), "rule__Param__Group__0");
					put(grammarAccess.getParamAccess().getGroup_1_1(), "rule__Param__Group_1_1__0");
					put(grammarAccess.getNumberLiteralAccess().getGroup(), "rule__NumberLiteral__Group__0");
					put(grammarAccess.getStringLiteralAccess().getGroup(), "rule__StringLiteral__Group__0");
					put(grammarAccess.getBoolLiteralAccess().getGroup(), "rule__BoolLiteral__Group__0");
					put(grammarAccess.getJSLiteralAccess().getGroup(), "rule__JSLiteral__Group__0");
					put(grammarAccess.getRegexLiteralAccess().getGroup(), "rule__RegexLiteral__Group__0");
					put(grammarAccess.getParentheticalAccess().getGroup_0(), "rule__Parenthetical__Group_0__0");
					put(grammarAccess.getParentheticalAccess().getGroup_0_0(), "rule__Parenthetical__Group_0_0__0");
					put(grammarAccess.getParentheticalAccess().getGroup_0_0_0(), "rule__Parenthetical__Group_0_0_0__0");
					put(grammarAccess.getParentheticalAccess().getGroup_1(), "rule__Parenthetical__Group_1__0");
					put(grammarAccess.getCakefileAccess().getTasksAssignment(), "rule__Cakefile__TasksAssignment");
					put(grammarAccess.getTaskDeclarationAccess().getNameAssignment_2(), "rule__TaskDeclaration__NameAssignment_2");
					put(grammarAccess.getTaskDeclarationAccess().getDescriptionAssignment_4(), "rule__TaskDeclaration__DescriptionAssignment_4");
					put(grammarAccess.getTaskDeclarationAccess().getOptionsAssignment_6_1(), "rule__TaskDeclaration__OptionsAssignment_6_1");
					put(grammarAccess.getTaskDeclarationAccess().getBodyAssignment_8(), "rule__TaskDeclaration__BodyAssignment_8");
					put(grammarAccess.getBodyAccess().getLinesAssignment_0(), "rule__Body__LinesAssignment_0");
					put(grammarAccess.getBodyAccess().getLinesAssignment_1_1(), "rule__Body__LinesAssignment_1_1");
					put(grammarAccess.getStmtAccess().getStatementAssignment_5(), "rule__Stmt__StatementAssignment_5");
					put(grammarAccess.getCommentAccess().getCommentAssignment(), "rule__Comment__CommentAssignment");
					put(grammarAccess.getRequireStmtAccess().getImportedNamespaceAssignment_0_0_0(), "rule__RequireStmt__ImportedNamespaceAssignment_0_0_0");
					put(grammarAccess.getRequireStmtAccess().getUriAssignment_2(), "rule__RequireStmt__UriAssignment_2");
					put(grammarAccess.getReturnStmtAccess().getExpressionAssignment_2(), "rule__ReturnStmt__ExpressionAssignment_2");
					put(grammarAccess.getReturnStmtAccess().getConditionAssignment_3_1(), "rule__ReturnStmt__ConditionAssignment_3_1");
					put(grammarAccess.getThrowStmtAccess().getExpAssignment_1(), "rule__ThrowStmt__ExpAssignment_1");
					put(grammarAccess.getClassDeclarationAccess().getBodyAssignment_2_0(), "rule__ClassDeclaration__BodyAssignment_2_0");
					put(grammarAccess.getClassDeclarationAccess().getExtendAssignment_2_1_1(), "rule__ClassDeclaration__ExtendAssignment_2_1_1");
					put(grammarAccess.getClassDeclarationAccess().getBodyAssignment_2_1_2(), "rule__ClassDeclaration__BodyAssignment_2_1_2");
					put(grammarAccess.getClassDeclarationAccess().getNameAssignment_2_2_0(), "rule__ClassDeclaration__NameAssignment_2_2_0");
					put(grammarAccess.getClassDeclarationAccess().getExtendAssignment_2_2_1_1(), "rule__ClassDeclaration__ExtendAssignment_2_2_1_1");
					put(grammarAccess.getClassDeclarationAccess().getBodyAssignment_2_2_2(), "rule__ClassDeclaration__BodyAssignment_2_2_2");
					put(grammarAccess.getAssignedClassDeclarationAccess().getExtendAssignment_2_0_1(), "rule__AssignedClassDeclaration__ExtendAssignment_2_0_1");
					put(grammarAccess.getAssignedClassDeclarationAccess().getBodyAssignment_2_0_2(), "rule__AssignedClassDeclaration__BodyAssignment_2_0_2");
					put(grammarAccess.getAssignedClassDeclarationAccess().getNameAssignment_2_1_0(), "rule__AssignedClassDeclaration__NameAssignment_2_1_0");
					put(grammarAccess.getAssignedClassDeclarationAccess().getExtendAssignment_2_1_1_1(), "rule__AssignedClassDeclaration__ExtendAssignment_2_1_1_1");
					put(grammarAccess.getAssignedClassDeclarationAccess().getBodyAssignment_2_1_2(), "rule__AssignedClassDeclaration__BodyAssignment_2_1_2");
					put(grammarAccess.getPostfixAccess().getConditionAssignment_1_0_2(), "rule__Postfix__ConditionAssignment_1_0_2");
					put(grammarAccess.getPostfixAccess().getBodyAssignment_1_1_2(), "rule__Postfix__BodyAssignment_1_1_2");
					put(grammarAccess.getPostfixAccess().getBodyAssignment_1_2_2(), "rule__Postfix__BodyAssignment_1_2_2");
					put(grammarAccess.getPostfixAccess().getWhenAssignment_1_2_3_1(), "rule__Postfix__WhenAssignment_1_2_3_1");
					put(grammarAccess.getPostfixAccess().getBodyAssignment_1_3_2(), "rule__Postfix__BodyAssignment_1_3_2");
					put(grammarAccess.getPostfixAccess().getWhenAssignment_1_3_3_1(), "rule__Postfix__WhenAssignment_1_3_3_1");
					put(grammarAccess.getForBodyAccess().getIndexesAssignment_1(), "rule__ForBody__IndexesAssignment_1");
					put(grammarAccess.getForBodyAccess().getIndexesAssignment_2_1(), "rule__ForBody__IndexesAssignment_2_1");
					put(grammarAccess.getForBodyAccess().getSourceAssignment_3(), "rule__ForBody__SourceAssignment_3");
					put(grammarAccess.getForSourceAccess().getSourceAssignment_1_0_1(), "rule__ForSource__SourceAssignment_1_0_1");
					put(grammarAccess.getForSourceAccess().getWhenAssignment_1_0_2_1(), "rule__ForSource__WhenAssignment_1_0_2_1");
					put(grammarAccess.getForSourceAccess().getSourceAssignment_1_1_1(), "rule__ForSource__SourceAssignment_1_1_1");
					put(grammarAccess.getForSourceAccess().getWhenAssignment_1_1_2_0_1(), "rule__ForSource__WhenAssignment_1_1_2_0_1");
					put(grammarAccess.getForSourceAccess().getByAssignment_1_1_2_0_2_1(), "rule__ForSource__ByAssignment_1_1_2_0_2_1");
					put(grammarAccess.getForSourceAccess().getByAssignment_1_1_2_1_1(), "rule__ForSource__ByAssignment_1_1_2_1_1");
					put(grammarAccess.getForSourceAccess().getWhenAssignment_1_1_2_1_2_1(), "rule__ForSource__WhenAssignment_1_1_2_1_2_1");
					put(grammarAccess.getRangeAccess().getStartAssignment_0_0_1(), "rule__Range__StartAssignment_0_0_1");
					put(grammarAccess.getRangeAccess().getEndAssignment_1(), "rule__Range__EndAssignment_1");
					put(grammarAccess.getAssignmentAccess().getLeftAssignment_0_0_0_0(), "rule__Assignment__LeftAssignment_0_0_0_0");
					put(grammarAccess.getAssignmentAccess().getOperatorAssignment_0_0_0_1(), "rule__Assignment__OperatorAssignment_0_0_0_1");
					put(grammarAccess.getAssignmentAccess().getRightAssignment_0_1(), "rule__Assignment__RightAssignment_0_1");
					put(grammarAccess.getLogicOpAccess().getOperatorAssignment_1_0_0_1(), "rule__LogicOp__OperatorAssignment_1_0_0_1");
					put(grammarAccess.getLogicOpAccess().getRightAssignment_1_1(), "rule__LogicOp__RightAssignment_1_1");
					put(grammarAccess.getCompareOpAccess().getOperatorAssignment_1_0_0_1(), "rule__CompareOp__OperatorAssignment_1_0_0_1");
					put(grammarAccess.getCompareOpAccess().getRightAssignment_1_1(), "rule__CompareOp__RightAssignment_1_1");
					put(grammarAccess.getRelationOpAccess().getOperatorAssignment_1_0_0_1(), "rule__RelationOp__OperatorAssignment_1_0_0_1");
					put(grammarAccess.getRelationOpAccess().getRightAssignment_1_1(), "rule__RelationOp__RightAssignment_1_1");
					put(grammarAccess.getShiftOpAccess().getOperatorAssignment_1_0_0_1(), "rule__ShiftOp__OperatorAssignment_1_0_0_1");
					put(grammarAccess.getShiftOpAccess().getRightAssignment_1_1(), "rule__ShiftOp__RightAssignment_1_1");
					put(grammarAccess.getAdditiveOpAccess().getOperatorAssignment_1_0_0_1(), "rule__AdditiveOp__OperatorAssignment_1_0_0_1");
					put(grammarAccess.getAdditiveOpAccess().getRightAssignment_1_1(), "rule__AdditiveOp__RightAssignment_1_1");
					put(grammarAccess.getMathOpAccess().getOperatorAssignment_1_0_0_1(), "rule__MathOp__OperatorAssignment_1_0_0_1");
					put(grammarAccess.getMathOpAccess().getRightAssignment_1_1(), "rule__MathOp__RightAssignment_1_1");
					put(grammarAccess.getApplicationAccess().getArgsAssignment_0_1_1_1(), "rule__Application__ArgsAssignment_0_1_1_1");
					put(grammarAccess.getApplicationAccess().getValueAssignment_1_0(), "rule__Application__ValueAssignment_1_0");
					put(grammarAccess.getApplicationAccess().getFeaturesAssignment_1_1(), "rule__Application__FeaturesAssignment_1_1");
					put(grammarAccess.getFunctionCallAccess().getArgsAssignment_3(), "rule__FunctionCall__ArgsAssignment_3");
					put(grammarAccess.getNamedPropertyAccessAccess().getAccessorAssignment_0_0(), "rule__NamedPropertyAccess__AccessorAssignment_0_0");
					put(grammarAccess.getNamedPropertyAccessAccess().getNameAssignment_0_1(), "rule__NamedPropertyAccess__NameAssignment_0_1");
					put(grammarAccess.getNamedPropertyAccessAccess().getAccessorAssignment_1_0(), "rule__NamedPropertyAccess__AccessorAssignment_1_0");
					put(grammarAccess.getNamedPropertyAccessAccess().getNameAssignment_1_1(), "rule__NamedPropertyAccess__NameAssignment_1_1");
					put(grammarAccess.getIndexedPropertyAccessAccess().getIndexAssignment_1(), "rule__IndexedPropertyAccess__IndexAssignment_1");
					put(grammarAccess.getIndexAccess().getDotsAssignment_0_0(), "rule__Index__DotsAssignment_0_0");
					put(grammarAccess.getIndexAccess().getEndAssignment_0_1(), "rule__Index__EndAssignment_0_1");
					put(grammarAccess.getIndexAccess().getStartAssignment_1_0_0_0(), "rule__Index__StartAssignment_1_0_0_0");
					put(grammarAccess.getIndexAccess().getDotsAssignment_1_0_0_1(), "rule__Index__DotsAssignment_1_0_0_1");
					put(grammarAccess.getIndexAccess().getEndAssignment_1_1(), "rule__Index__EndAssignment_1_1");
					put(grammarAccess.getIndexAccess().getExpAssignment_2(), "rule__Index__ExpAssignment_2");
					put(grammarAccess.getPrimaryExpressionAccess().getLoopAssignment_9_1_1(), "rule__PrimaryExpression__LoopAssignment_9_1_1");
					put(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_9_1_2(), "rule__PrimaryExpression__BodyAssignment_9_1_2");
					put(grammarAccess.getPrimaryExpressionAccess().getLoopAssignment_10_1_1(), "rule__PrimaryExpression__LoopAssignment_10_1_1");
					put(grammarAccess.getPrimaryExpressionAccess().getWhenAssignment_10_1_2_1(), "rule__PrimaryExpression__WhenAssignment_10_1_2_1");
					put(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_10_1_3(), "rule__PrimaryExpression__BodyAssignment_10_1_3");
					put(grammarAccess.getPrimaryExpressionAccess().getLoopAssignment_11_1_1(), "rule__PrimaryExpression__LoopAssignment_11_1_1");
					put(grammarAccess.getPrimaryExpressionAccess().getWhenAssignment_11_1_2_1(), "rule__PrimaryExpression__WhenAssignment_11_1_2_1");
					put(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_11_1_3(), "rule__PrimaryExpression__BodyAssignment_11_1_3");
					put(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_12_1_1(), "rule__PrimaryExpression__BodyAssignment_12_1_1");
					put(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_13_1_1(), "rule__PrimaryExpression__BodyAssignment_13_1_1");
					put(grammarAccess.getPrimaryExpressionAccess().getExceptionAssignment_13_1_2_0_1(), "rule__PrimaryExpression__ExceptionAssignment_13_1_2_0_1");
					put(grammarAccess.getPrimaryExpressionAccess().getCatchBlockAssignment_13_1_2_0_2(), "rule__PrimaryExpression__CatchBlockAssignment_13_1_2_0_2");
					put(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockAssignment_13_1_2_0_3_1(), "rule__PrimaryExpression__FinallyBlockAssignment_13_1_2_0_3_1");
					put(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockAssignment_13_1_2_1_1(), "rule__PrimaryExpression__FinallyBlockAssignment_13_1_2_1_1");
					put(grammarAccess.getPrimaryExpressionAccess().getExpAssignment_14_1_1(), "rule__PrimaryExpression__ExpAssignment_14_1_1");
					put(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_14_1_3(), "rule__PrimaryExpression__CasesAssignment_14_1_3");
					put(grammarAccess.getPrimaryExpressionAccess().getElseBlockAssignment_14_1_4_1(), "rule__PrimaryExpression__ElseBlockAssignment_14_1_4_1");
					put(grammarAccess.getCaseAccess().getWhensAssignment_1(), "rule__Case__WhensAssignment_1");
					put(grammarAccess.getCaseAccess().getWhensAssignment_2_1(), "rule__Case__WhensAssignment_2_1");
					put(grammarAccess.getCaseAccess().getThenAssignment_3(), "rule__Case__ThenAssignment_3");
					put(grammarAccess.getIfExpAccess().getBlocksAssignment_0(), "rule__IfExp__BlocksAssignment_0");
					put(grammarAccess.getIfExpAccess().getBlocksAssignment_1_1(), "rule__IfExp__BlocksAssignment_1_1");
					put(grammarAccess.getIfExpAccess().getDefaultBlockAssignment_2_1(), "rule__IfExp__DefaultBlockAssignment_2_1");
					put(grammarAccess.getCondBlockAccess().getOperatorAssignment_0(), "rule__CondBlock__OperatorAssignment_0");
					put(grammarAccess.getCondBlockAccess().getConditionAssignment_1(), "rule__CondBlock__ConditionAssignment_1");
					put(grammarAccess.getCondBlockAccess().getActionAssignment_2(), "rule__CondBlock__ActionAssignment_2");
					put(grammarAccess.getIdRefAccess().getValAssignment(), "rule__IdRef__ValAssignment");
					put(grammarAccess.getIdAccess().getNameAssignment(), "rule__Id__NameAssignment");
					put(grammarAccess.getPropertyAccess().getAccessorAssignment_0_0_0_1(), "rule__Property__AccessorAssignment_0_0_0_1");
					put(grammarAccess.getPropertyAccess().getPropAssignment_0_1(), "rule__Property__PropAssignment_0_1");
					put(grammarAccess.getPropertyAccess().getIndexAssignment_1_1(), "rule__Property__IndexAssignment_1_1");
					put(grammarAccess.getVariableAccess().getPropsAssignment_1_2_1(), "rule__Variable__PropsAssignment_1_2_1");
					put(grammarAccess.getAssignableArgListAccess().getArgsAssignment_0(), "rule__AssignableArgList__ArgsAssignment_0");
					put(grammarAccess.getAssignableArgListAccess().getArgsAssignment_1_1(), "rule__AssignableArgList__ArgsAssignment_1_1");
					put(grammarAccess.getAssignableArgAccess().getArgAssignment_0(), "rule__AssignableArg__ArgAssignment_0");
					put(grammarAccess.getAssignableArgAccess().getSplatAssignment_1(), "rule__AssignableArg__SplatAssignment_1");
					put(grammarAccess.getArgAccess().getExpAssignment_0(), "rule__Arg__ExpAssignment_0");
					put(grammarAccess.getArgAccess().getSplatAssignment_1(), "rule__Arg__SplatAssignment_1");
					put(grammarAccess.getArgLineAccess().getHeadAssignment_0(), "rule__ArgLine__HeadAssignment_0");
					put(grammarAccess.getArgLineAccess().getTailAssignment_1_1(), "rule__ArgLine__TailAssignment_1_1");
					put(grammarAccess.getExplicitArgListAccess().getLinesAssignment_0(), "rule__ExplicitArgList__LinesAssignment_0");
					put(grammarAccess.getExplicitArgListAccess().getLinesAssignment_1_0_1(), "rule__ExplicitArgList__LinesAssignment_1_0_1");
					put(grammarAccess.getExplicitArgListAccess().getLinesAssignment_1_1_1(), "rule__ExplicitArgList__LinesAssignment_1_1_1");
					put(grammarAccess.getArgListAccess().getDummyAssignment_1_0(), "rule__ArgList__DummyAssignment_1_0");
					put(grammarAccess.getArgListAccess().getDummyAssignment_1_1_1(), "rule__ArgList__DummyAssignment_1_1_1");
					put(grammarAccess.getDictItemsAccess().getDummyAssignment_1_0(), "rule__DictItems__DummyAssignment_1_0");
					put(grammarAccess.getDictItemsAccess().getDummyAssignment_1_1_1(), "rule__DictItems__DummyAssignment_1_1_1");
					put(grammarAccess.getExplicitDictItemsAccess().getLinesAssignment_0(), "rule__ExplicitDictItems__LinesAssignment_0");
					put(grammarAccess.getExplicitDictItemsAccess().getLinesAssignment_1_0_1(), "rule__ExplicitDictItems__LinesAssignment_1_0_1");
					put(grammarAccess.getExplicitDictItemsAccess().getLinesAssignment_1_1_1(), "rule__ExplicitDictItems__LinesAssignment_1_1_1");
					put(grammarAccess.getDictLineAccess().getHeadAssignment_0(), "rule__DictLine__HeadAssignment_0");
					put(grammarAccess.getDictLineAccess().getTailAssignment_1_1(), "rule__DictLine__TailAssignment_1_1");
					put(grammarAccess.getDictItemAccess().getKeyAssignment_1(), "rule__DictItem__KeyAssignment_1");
					put(grammarAccess.getDictItemAccess().getValueAssignment_2_1_0(), "rule__DictItem__ValueAssignment_2_1_0");
					put(grammarAccess.getDictItemAccess().getValueAssignment_2_1_1_1(), "rule__DictItem__ValueAssignment_2_1_1_1");
					put(grammarAccess.getLambdaAccess().getParamsAssignment_0_1_0(), "rule__Lambda__ParamsAssignment_0_1_0");
					put(grammarAccess.getLambdaAccess().getParamsAssignment_0_1_1_1(), "rule__Lambda__ParamsAssignment_0_1_1_1");
					put(grammarAccess.getLambdaAccess().getBodyAssignment_2(), "rule__Lambda__BodyAssignment_2");
					put(grammarAccess.getParamAccess().getSplatAssignment_1_0(), "rule__Param__SplatAssignment_1_0");
					put(grammarAccess.getParamAccess().getDefaultValueAssignment_1_1_1(), "rule__Param__DefaultValueAssignment_1_1_1");
					put(grammarAccess.getParentheticalAccess().getContentAssignment_0_1(), "rule__Parenthetical__ContentAssignment_0_1");
					put(grammarAccess.getParentheticalAccess().getContentAssignment_1_1(), "rule__Parenthetical__ContentAssignment_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			csep.example.cake.ui.contentassist.antlr.internal.InternalCakefileParser typedParser = (csep.example.cake.ui.contentassist.antlr.internal.InternalCakefileParser) parser;
			typedParser.entryRuleCakefile();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CakefileGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CakefileGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
