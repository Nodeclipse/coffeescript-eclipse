/*
* generated by Xtext
*/
grammar InternalCakefile;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package csep.example.cake.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package csep.example.cake.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import csep.example.cake.services.CakefileGrammarAccess;

}

@parser::members {
 
 	private CakefileGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CakefileGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleCakefile
entryRuleCakefile 
:
{ before(grammarAccess.getCakefileRule()); }
	 ruleCakefile
{ after(grammarAccess.getCakefileRule()); } 
	 EOF 
;

// Rule Cakefile
ruleCakefile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCakefileAccess().getTasksAssignment()); }
(rule__Cakefile__TasksAssignment)*
{ after(grammarAccess.getCakefileAccess().getTasksAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaskDeclaration
entryRuleTaskDeclaration 
:
{ before(grammarAccess.getTaskDeclarationRule()); }
	 ruleTaskDeclaration
{ after(grammarAccess.getTaskDeclarationRule()); } 
	 EOF 
;

// Rule TaskDeclaration
ruleTaskDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskDeclarationAccess().getGroup()); }
(rule__TaskDeclaration__Group__0)
{ after(grammarAccess.getTaskDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleBody
entryRuleBody 
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBodyAccess().getGroup()); }
(rule__Body__Group__0)
{ after(grammarAccess.getBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLine
entryRuleLine 
:
{ before(grammarAccess.getLineRule()); }
	 ruleLine
{ after(grammarAccess.getLineRule()); } 
	 EOF 
;

// Rule Line
ruleLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLineAccess().getAlternatives()); }
(rule__Line__Alternatives)
{ after(grammarAccess.getLineAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmt
entryRuleStmt 
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtAccess().getAlternatives()); }
(rule__Stmt__Alternatives)
{ after(grammarAccess.getStmtAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComment
entryRuleComment 
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getCommentAssignment()); }
(rule__Comment__CommentAssignment)
{ after(grammarAccess.getCommentAccess().getCommentAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequireStmt
entryRuleRequireStmt 
:
{ before(grammarAccess.getRequireStmtRule()); }
	 ruleRequireStmt
{ after(grammarAccess.getRequireStmtRule()); } 
	 EOF 
;

// Rule RequireStmt
ruleRequireStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequireStmtAccess().getGroup()); }
(rule__RequireStmt__Group__0)
{ after(grammarAccess.getRequireStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStmt
entryRuleReturnStmt 
:
{ before(grammarAccess.getReturnStmtRule()); }
	 ruleReturnStmt
{ after(grammarAccess.getReturnStmtRule()); } 
	 EOF 
;

// Rule ReturnStmt
ruleReturnStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStmtAccess().getGroup()); }
(rule__ReturnStmt__Group__0)
{ after(grammarAccess.getReturnStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThrowStmt
entryRuleThrowStmt 
:
{ before(grammarAccess.getThrowStmtRule()); }
	 ruleThrowStmt
{ after(grammarAccess.getThrowStmtRule()); } 
	 EOF 
;

// Rule ThrowStmt
ruleThrowStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThrowStmtAccess().getGroup()); }
(rule__ThrowStmt__Group__0)
{ after(grammarAccess.getThrowStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuperClass
entryRuleSuperClass 
:
{ before(grammarAccess.getSuperClassRule()); }
	 ruleSuperClass
{ after(grammarAccess.getSuperClassRule()); } 
	 EOF 
;

// Rule SuperClass
ruleSuperClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuperClassAccess().getAlternatives()); }
(rule__SuperClass__Alternatives)
{ after(grammarAccess.getSuperClassAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration 
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup()); }
(rule__ClassDeclaration__Group__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignedClassDeclaration
entryRuleAssignedClassDeclaration 
:
{ before(grammarAccess.getAssignedClassDeclarationRule()); }
	 ruleAssignedClassDeclaration
{ after(grammarAccess.getAssignedClassDeclarationRule()); } 
	 EOF 
;

// Rule AssignedClassDeclaration
ruleAssignedClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getGroup()); }
(rule__AssignedClassDeclaration__Group__0)
{ after(grammarAccess.getAssignedClassDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getPostfixParserRuleCall()); }
	rulePostfix
{ after(grammarAccess.getExpressionAccess().getPostfixParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfix
entryRulePostfix 
:
{ before(grammarAccess.getPostfixRule()); }
	 rulePostfix
{ after(grammarAccess.getPostfixRule()); } 
	 EOF 
;

// Rule Postfix
rulePostfix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixAccess().getGroup()); }
(rule__Postfix__Group__0)
{ after(grammarAccess.getPostfixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForBody
entryRuleForBody 
:
{ before(grammarAccess.getForBodyRule()); }
	 ruleForBody
{ after(grammarAccess.getForBodyRule()); } 
	 EOF 
;

// Rule ForBody
ruleForBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForBodyAccess().getGroup()); }
(rule__ForBody__Group__0)
{ after(grammarAccess.getForBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForValue
entryRuleForValue 
:
{ before(grammarAccess.getForValueRule()); }
	 ruleForValue
{ after(grammarAccess.getForValueRule()); } 
	 EOF 
;

// Rule ForValue
ruleForValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForValueAccess().getIdParserRuleCall()); }
	ruleId
{ after(grammarAccess.getForValueAccess().getIdParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForSource
entryRuleForSource 
:
{ before(grammarAccess.getForSourceRule()); }
	 ruleForSource
{ after(grammarAccess.getForSourceRule()); } 
	 EOF 
;

// Rule ForSource
ruleForSource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForSourceAccess().getGroup()); }
(rule__ForSource__Group__0)
{ after(grammarAccess.getForSourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRange
entryRuleRange 
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeAccess().getGroup()); }
(rule__Range__Group__0)
{ after(grammarAccess.getRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getAlternatives()); }
(rule__Assignment__Alternatives)
{ after(grammarAccess.getAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssigned
entryRuleAssigned 
:
{ before(grammarAccess.getAssignedRule()); }
	 ruleAssigned
{ after(grammarAccess.getAssignedRule()); } 
	 EOF 
;

// Rule Assigned
ruleAssigned
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignedAccess().getAlternatives()); }
(rule__Assigned__Alternatives)
{ after(grammarAccess.getAssignedAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicOp
entryRuleLogicOp 
:
{ before(grammarAccess.getLogicOpRule()); }
	 ruleLogicOp
{ after(grammarAccess.getLogicOpRule()); } 
	 EOF 
;

// Rule LogicOp
ruleLogicOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicOpAccess().getGroup()); }
(rule__LogicOp__Group__0)
{ after(grammarAccess.getLogicOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareOp
entryRuleCompareOp 
:
{ before(grammarAccess.getCompareOpRule()); }
	 ruleCompareOp
{ after(grammarAccess.getCompareOpRule()); } 
	 EOF 
;

// Rule CompareOp
ruleCompareOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareOpAccess().getGroup()); }
(rule__CompareOp__Group__0)
{ after(grammarAccess.getCompareOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationOp
entryRuleRelationOp 
:
{ before(grammarAccess.getRelationOpRule()); }
	 ruleRelationOp
{ after(grammarAccess.getRelationOpRule()); } 
	 EOF 
;

// Rule RelationOp
ruleRelationOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationOpAccess().getGroup()); }
(rule__RelationOp__Group__0)
{ after(grammarAccess.getRelationOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShiftOp
entryRuleShiftOp 
:
{ before(grammarAccess.getShiftOpRule()); }
	 ruleShiftOp
{ after(grammarAccess.getShiftOpRule()); } 
	 EOF 
;

// Rule ShiftOp
ruleShiftOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShiftOpAccess().getGroup()); }
(rule__ShiftOp__Group__0)
{ after(grammarAccess.getShiftOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveOp
entryRuleAdditiveOp 
:
{ before(grammarAccess.getAdditiveOpRule()); }
	 ruleAdditiveOp
{ after(grammarAccess.getAdditiveOpRule()); } 
	 EOF 
;

// Rule AdditiveOp
ruleAdditiveOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveOpAccess().getGroup()); }
(rule__AdditiveOp__Group__0)
{ after(grammarAccess.getAdditiveOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMathOp
entryRuleMathOp 
:
{ before(grammarAccess.getMathOpRule()); }
	 ruleMathOp
{ after(grammarAccess.getMathOpRule()); } 
	 EOF 
;

// Rule MathOp
ruleMathOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMathOpAccess().getGroup()); }
(rule__MathOp__Group__0)
{ after(grammarAccess.getMathOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOp
entryRuleUnaryOp 
:
{ before(grammarAccess.getUnaryOpRule()); }
	 ruleUnaryOp
{ after(grammarAccess.getUnaryOpRule()); } 
	 EOF 
;

// Rule UnaryOp
ruleUnaryOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOpAccess().getAlternatives()); }
(rule__UnaryOp__Alternatives)
{ after(grammarAccess.getUnaryOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleApplication
entryRuleApplication 
:
{ before(grammarAccess.getApplicationRule()); }
	 ruleApplication
{ after(grammarAccess.getApplicationRule()); } 
	 EOF 
;

// Rule Application
ruleApplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getApplicationAccess().getAlternatives()); }
(rule__Application__Alternatives)
{ after(grammarAccess.getApplicationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureCall
entryRuleFeatureCall 
:
{ before(grammarAccess.getFeatureCallRule()); }
	 ruleFeatureCall
{ after(grammarAccess.getFeatureCallRule()); } 
	 EOF 
;

// Rule FeatureCall
ruleFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureCallAccess().getAlternatives()); }
(rule__FeatureCall__Alternatives)
{ after(grammarAccess.getFeatureCallAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
(rule__FunctionCall__Group__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyAccess
entryRulePropertyAccess 
:
{ before(grammarAccess.getPropertyAccessRule()); }
	 rulePropertyAccess
{ after(grammarAccess.getPropertyAccessRule()); } 
	 EOF 
;

// Rule PropertyAccess
rulePropertyAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccessAccess().getAlternatives()); }
(rule__PropertyAccess__Alternatives)
{ after(grammarAccess.getPropertyAccessAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThisProperty
entryRuleThisProperty 
:
{ before(grammarAccess.getThisPropertyRule()); }
	 ruleThisProperty
{ after(grammarAccess.getThisPropertyRule()); } 
	 EOF 
;

// Rule ThisProperty
ruleThisProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThisPropertyAccess().getGroup()); }
(rule__ThisProperty__Group__0)
{ after(grammarAccess.getThisPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedPropertyAccess
entryRuleNamedPropertyAccess 
:
{ before(grammarAccess.getNamedPropertyAccessRule()); }
	 ruleNamedPropertyAccess
{ after(grammarAccess.getNamedPropertyAccessRule()); } 
	 EOF 
;

// Rule NamedPropertyAccess
ruleNamedPropertyAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getAlternatives()); }
(rule__NamedPropertyAccess__Alternatives)
{ after(grammarAccess.getNamedPropertyAccessAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexedPropertyAccess
entryRuleIndexedPropertyAccess 
:
{ before(grammarAccess.getIndexedPropertyAccessRule()); }
	 ruleIndexedPropertyAccess
{ after(grammarAccess.getIndexedPropertyAccessRule()); } 
	 EOF 
;

// Rule IndexedPropertyAccess
ruleIndexedPropertyAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexedPropertyAccessAccess().getGroup()); }
(rule__IndexedPropertyAccess__Group__0)
{ after(grammarAccess.getIndexedPropertyAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndex
entryRuleIndex 
:
{ before(grammarAccess.getIndexRule()); }
	 ruleIndex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule Index
ruleIndex
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexAccess().getAlternatives()); }
(rule__Index__Alternatives)
{ after(grammarAccess.getIndexAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase 
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseAccess().getGroup()); }
(rule__Case__Group__0)
{ after(grammarAccess.getCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfExp
entryRuleIfExp 
:
{ before(grammarAccess.getIfExpRule()); }
	 ruleIfExp
{ after(grammarAccess.getIfExpRule()); } 
	 EOF 
;

// Rule IfExp
ruleIfExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfExpAccess().getGroup()); }
(rule__IfExp__Group__0)
{ after(grammarAccess.getIfExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondBlock
entryRuleCondBlock 
:
{ before(grammarAccess.getCondBlockRule()); }
	 ruleCondBlock
{ after(grammarAccess.getCondBlockRule()); } 
	 EOF 
;

// Rule CondBlock
ruleCondBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCondBlockAccess().getGroup()); }
(rule__CondBlock__Group__0)
{ after(grammarAccess.getCondBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdRef
entryRuleIdRef 
:
{ before(grammarAccess.getIdRefRule()); }
	 ruleIdRef
{ after(grammarAccess.getIdRefRule()); } 
	 EOF 
;

// Rule IdRef
ruleIdRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdRefAccess().getValAssignment()); }
(rule__IdRef__ValAssignment)
{ after(grammarAccess.getIdRefAccess().getValAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleId
entryRuleId 
:
{ before(grammarAccess.getIdRule()); }
	 ruleId
{ after(grammarAccess.getIdRule()); } 
	 EOF 
;

// Rule Id
ruleId
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdAccess().getNameAssignment()); }
(rule__Id__NameAssignment)
{ after(grammarAccess.getIdAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives)
{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignableArray
entryRuleAssignableArray 
:
{ before(grammarAccess.getAssignableArrayRule()); }
	 ruleAssignableArray
{ after(grammarAccess.getAssignableArrayRule()); } 
	 EOF 
;

// Rule AssignableArray
ruleAssignableArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignableArrayAccess().getGroup()); }
(rule__AssignableArray__Group__0)
{ after(grammarAccess.getAssignableArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignableArgList
entryRuleAssignableArgList 
:
{ before(grammarAccess.getAssignableArgListRule()); }
	 ruleAssignableArgList
{ after(grammarAccess.getAssignableArgListRule()); } 
	 EOF 
;

// Rule AssignableArgList
ruleAssignableArgList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignableArgListAccess().getGroup()); }
(rule__AssignableArgList__Group__0)
{ after(grammarAccess.getAssignableArgListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignableArg
entryRuleAssignableArg 
:
{ before(grammarAccess.getAssignableArgRule()); }
	 ruleAssignableArg
{ after(grammarAccess.getAssignableArgRule()); } 
	 EOF 
;

// Rule AssignableArg
ruleAssignableArg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignableArgAccess().getGroup()); }
(rule__AssignableArg__Group__0)
{ after(grammarAccess.getAssignableArgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignable
entryRuleAssignable 
:
{ before(grammarAccess.getAssignableRule()); }
	 ruleAssignable
{ after(grammarAccess.getAssignableRule()); } 
	 EOF 
;

// Rule Assignable
ruleAssignable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignableAccess().getAlternatives()); }
(rule__Assignable__Alternatives)
{ after(grammarAccess.getAssignableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArg
entryRuleArg 
:
{ before(grammarAccess.getArgRule()); }
	 ruleArg
{ after(grammarAccess.getArgRule()); } 
	 EOF 
;

// Rule Arg
ruleArg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgAccess().getGroup()); }
(rule__Arg__Group__0)
{ after(grammarAccess.getArgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgLine
entryRuleArgLine 
:
{ before(grammarAccess.getArgLineRule()); }
	 ruleArgLine
{ after(grammarAccess.getArgLineRule()); } 
	 EOF 
;

// Rule ArgLine
ruleArgLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgLineAccess().getGroup()); }
(rule__ArgLine__Group__0)
{ after(grammarAccess.getArgLineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExplicitArgList
entryRuleExplicitArgList 
:
{ before(grammarAccess.getExplicitArgListRule()); }
	 ruleExplicitArgList
{ after(grammarAccess.getExplicitArgListRule()); } 
	 EOF 
;

// Rule ExplicitArgList
ruleExplicitArgList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExplicitArgListAccess().getGroup()); }
(rule__ExplicitArgList__Group__0)
{ after(grammarAccess.getExplicitArgListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgList
entryRuleArgList 
:
{ before(grammarAccess.getArgListRule()); }
	 ruleArgList
{ after(grammarAccess.getArgListRule()); } 
	 EOF 
;

// Rule ArgList
ruleArgList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgListAccess().getGroup()); }
(rule__ArgList__Group__0)
{ after(grammarAccess.getArgListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDictionary
entryRuleDictionary 
:
{ before(grammarAccess.getDictionaryRule()); }
	 ruleDictionary
{ after(grammarAccess.getDictionaryRule()); } 
	 EOF 
;

// Rule Dictionary
ruleDictionary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDictionaryAccess().getGroup()); }
(rule__Dictionary__Group__0)
{ after(grammarAccess.getDictionaryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDictItems
entryRuleDictItems 
:
{ before(grammarAccess.getDictItemsRule()); }
	 ruleDictItems
{ after(grammarAccess.getDictItemsRule()); } 
	 EOF 
;

// Rule DictItems
ruleDictItems
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDictItemsAccess().getGroup()); }
(rule__DictItems__Group__0)
{ after(grammarAccess.getDictItemsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExplicitDictItems
entryRuleExplicitDictItems 
:
{ before(grammarAccess.getExplicitDictItemsRule()); }
	 ruleExplicitDictItems
{ after(grammarAccess.getExplicitDictItemsRule()); } 
	 EOF 
;

// Rule ExplicitDictItems
ruleExplicitDictItems
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getGroup()); }
(rule__ExplicitDictItems__Group__0)
{ after(grammarAccess.getExplicitDictItemsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDictLine
entryRuleDictLine 
:
{ before(grammarAccess.getDictLineRule()); }
	 ruleDictLine
{ after(grammarAccess.getDictLineRule()); } 
	 EOF 
;

// Rule DictLine
ruleDictLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDictLineAccess().getGroup()); }
(rule__DictLine__Group__0)
{ after(grammarAccess.getDictLineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDictItem
entryRuleDictItem 
:
{ before(grammarAccess.getDictItemRule()); }
	 ruleDictItem
{ after(grammarAccess.getDictItemRule()); } 
	 EOF 
;

// Rule DictItem
ruleDictItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDictItemAccess().getGroup()); }
(rule__DictItem__Group__0)
{ after(grammarAccess.getDictItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDictKey
entryRuleDictKey 
:
{ before(grammarAccess.getDictKeyRule()); }
	 ruleDictKey
{ after(grammarAccess.getDictKeyRule()); } 
	 EOF 
;

// Rule DictKey
ruleDictKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDictKeyAccess().getAlternatives()); }
(rule__DictKey__Alternatives)
{ after(grammarAccess.getDictKeyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLambda
entryRuleLambda 
:
{ before(grammarAccess.getLambdaRule()); }
	 ruleLambda
{ after(grammarAccess.getLambdaRule()); } 
	 EOF 
;

// Rule Lambda
ruleLambda
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLambdaAccess().getGroup()); }
(rule__Lambda__Group__0)
{ after(grammarAccess.getLambdaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParam
entryRuleParam 
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAccess().getGroup()); }
(rule__Param__Group__0)
{ after(grammarAccess.getParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral 
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLiteralAccess().getGroup()); }
(rule__NumberLiteral__Group__0)
{ after(grammarAccess.getNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
(rule__StringLiteral__Group__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral 
:
{ before(grammarAccess.getBoolLiteralRule()); }
	 ruleBoolLiteral
{ after(grammarAccess.getBoolLiteralRule()); } 
	 EOF 
;

// Rule BoolLiteral
ruleBoolLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolLiteralAccess().getGroup()); }
(rule__BoolLiteral__Group__0)
{ after(grammarAccess.getBoolLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJSLiteral
entryRuleJSLiteral 
:
{ before(grammarAccess.getJSLiteralRule()); }
	 ruleJSLiteral
{ after(grammarAccess.getJSLiteralRule()); } 
	 EOF 
;

// Rule JSLiteral
ruleJSLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJSLiteralAccess().getGroup()); }
(rule__JSLiteral__Group__0)
{ after(grammarAccess.getJSLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegexLiteral
entryRuleRegexLiteral 
:
{ before(grammarAccess.getRegexLiteralRule()); }
	 ruleRegexLiteral
{ after(grammarAccess.getRegexLiteralRule()); } 
	 EOF 
;

// Rule RegexLiteral
ruleRegexLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegexLiteralAccess().getGroup()); }
(rule__RegexLiteral__Group__0)
{ after(grammarAccess.getRegexLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthetical
entryRuleParenthetical 
:
{ before(grammarAccess.getParentheticalRule()); }
	 ruleParenthetical
{ after(grammarAccess.getParentheticalRule()); } 
	 EOF 
;

// Rule Parenthetical
ruleParenthetical
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParentheticalAccess().getAlternatives()); }
(rule__Parenthetical__Alternatives)
{ after(grammarAccess.getParentheticalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Line__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getStmtParserRuleCall_0()); }
	ruleStmt
{ after(grammarAccess.getLineAccess().getStmtParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLineAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getLineAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getReturnStmtParserRuleCall_0()); }
	ruleReturnStmt
{ after(grammarAccess.getStmtAccess().getReturnStmtParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getThrowStmtParserRuleCall_1()); }
	ruleThrowStmt
{ after(grammarAccess.getStmtAccess().getThrowStmtParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getRequireStmtParserRuleCall_2()); }
(	ruleRequireStmt)
{ after(grammarAccess.getStmtAccess().getRequireStmtParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getCommentParserRuleCall_3()); }
	ruleComment
{ after(grammarAccess.getStmtAccess().getCommentParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getClassDeclarationParserRuleCall_4()); }
	ruleClassDeclaration
{ after(grammarAccess.getStmtAccess().getClassDeclarationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getStatementAssignment_5()); }
(rule__Stmt__StatementAssignment_5)
{ after(grammarAccess.getStmtAccess().getStatementAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuperClass__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperClassAccess().getIdRefParserRuleCall_0()); }
	ruleIdRef
{ after(grammarAccess.getSuperClassAccess().getIdRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSuperClassAccess().getPropertyParserRuleCall_1()); }
	ruleProperty
{ after(grammarAccess.getSuperClassAccess().getPropertyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getBodyAssignment_2_0()); }
(rule__ClassDeclaration__BodyAssignment_2_0)
{ after(grammarAccess.getClassDeclarationAccess().getBodyAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_2_1()); }
(rule__ClassDeclaration__Group_2_1__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_2_2()); }
(rule__ClassDeclaration__Group_2_2__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__NameAlternatives_2_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getNameIdParserRuleCall_2_2_0_0_0()); }
	ruleId
{ after(grammarAccess.getClassDeclarationAccess().getNameIdParserRuleCall_2_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getClassDeclarationAccess().getNamePropertyParserRuleCall_2_2_0_0_1()); }
	ruleProperty
{ after(grammarAccess.getClassDeclarationAccess().getNamePropertyParserRuleCall_2_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getGroup_2_0()); }
(rule__AssignedClassDeclaration__Group_2_0__0)
{ after(grammarAccess.getAssignedClassDeclarationAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getGroup_2_1()); }
(rule__AssignedClassDeclaration__Group_2_1__0)
{ after(grammarAccess.getAssignedClassDeclarationAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__NameAlternatives_2_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getNameIdParserRuleCall_2_1_0_0_0()); }
	ruleId
{ after(grammarAccess.getAssignedClassDeclarationAccess().getNameIdParserRuleCall_2_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getNamePropertyParserRuleCall_2_1_0_0_1()); }
	ruleProperty
{ after(grammarAccess.getAssignedClassDeclarationAccess().getNamePropertyParserRuleCall_2_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getGroup_1_0()); }
(rule__Postfix__Group_1_0__0)
{ after(grammarAccess.getPostfixAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getPostfixAccess().getGroup_1_1()); }
(rule__Postfix__Group_1_1__0)
{ after(grammarAccess.getPostfixAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getPostfixAccess().getGroup_1_2()); }
(rule__Postfix__Group_1_2__0)
{ after(grammarAccess.getPostfixAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getPostfixAccess().getGroup_1_3()); }
(rule__Postfix__Group_1_3__0)
{ after(grammarAccess.getPostfixAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getGroup_1_0()); }
(rule__ForSource__Group_1_0__0)
{ after(grammarAccess.getForSourceAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getForSourceAccess().getGroup_1_1()); }
(rule__ForSource__Group_1_1__0)
{ after(grammarAccess.getForSourceAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Alternatives_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getGroup_1_1_2_0()); }
(rule__ForSource__Group_1_1_2_0__0)
{ after(grammarAccess.getForSourceAccess().getGroup_1_1_2_0()); }
)

    |(
{ before(grammarAccess.getForSourceAccess().getGroup_1_1_2_1()); }
(rule__ForSource__Group_1_1_2_1__0)
{ after(grammarAccess.getForSourceAccess().getGroup_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getDOT_DOTTerminalRuleCall_0_0_2_0()); }
	RULE_DOT_DOT
{ after(grammarAccess.getRangeAccess().getDOT_DOTTerminalRuleCall_0_0_2_0()); }
)

    |(
{ before(grammarAccess.getRangeAccess().getELLIPSISTerminalRuleCall_0_0_2_1()); }
	RULE_ELLIPSIS
{ after(grammarAccess.getRangeAccess().getELLIPSISTerminalRuleCall_0_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_0()); }
(rule__Assignment__Group_0__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getLogicOpParserRuleCall_1()); }
	ruleLogicOp
{ after(grammarAccess.getAssignmentAccess().getLogicOpParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__OperatorAlternatives_0_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOperatorEQUALTerminalRuleCall_0_0_0_1_0_0()); }
	RULE_EQUAL
{ after(grammarAccess.getAssignmentAccess().getOperatorEQUALTerminalRuleCall_0_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getOperatorCOMPOUND_ASSIGNTerminalRuleCall_0_0_0_1_0_1()); }
	RULE_COMPOUND_ASSIGN
{ after(grammarAccess.getAssignmentAccess().getOperatorCOMPOUND_ASSIGNTerminalRuleCall_0_0_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assigned__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getAssignedAccess().getExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAssignedAccess().getGroup_1()); }
(rule__Assigned__Group_1__0)
{ after(grammarAccess.getAssignedAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAssignedAccess().getAssignedClassDeclarationParserRuleCall_2()); }
	ruleAssignedClassDeclaration
{ after(grammarAccess.getAssignedAccess().getAssignedClassDeclarationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__OperatorAlternatives_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOpAccess().getOperatorPLUSTerminalRuleCall_1_0_0_1_0_0()); }
	RULE_PLUS
{ after(grammarAccess.getAdditiveOpAccess().getOperatorPLUSTerminalRuleCall_1_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getAdditiveOpAccess().getOperatorMINUSTerminalRuleCall_1_0_0_1_0_1()); }
	RULE_MINUS
{ after(grammarAccess.getAdditiveOpAccess().getOperatorMINUSTerminalRuleCall_1_0_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOpAccess().getGroup_0()); }
(rule__UnaryOp__Group_0__0)
{ after(grammarAccess.getUnaryOpAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryOpAccess().getGroup_1()); }
(rule__UnaryOp__Group_1__0)
{ after(grammarAccess.getUnaryOpAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getUnaryOpAccess().getGroup_2()); }
(rule__UnaryOp__Group_2__0)
{ after(grammarAccess.getUnaryOpAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOpAccess().getUNARYTerminalRuleCall_0_0_0()); }
	RULE_UNARY
{ after(grammarAccess.getUnaryOpAccess().getUNARYTerminalRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryOpAccess().getPLUSTerminalRuleCall_0_0_1()); }
	RULE_PLUS
{ after(grammarAccess.getUnaryOpAccess().getPLUSTerminalRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getUnaryOpAccess().getMINUSTerminalRuleCall_0_0_2()); }
	RULE_MINUS
{ after(grammarAccess.getUnaryOpAccess().getMINUSTerminalRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOpAccess().getPLUS_PLUSTerminalRuleCall_1_0_0()); }
	RULE_PLUS_PLUS
{ after(grammarAccess.getUnaryOpAccess().getPLUS_PLUSTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryOpAccess().getMINUS_MINUSTerminalRuleCall_1_0_1()); }
	RULE_MINUS_MINUS
{ after(grammarAccess.getUnaryOpAccess().getMINUS_MINUSTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getGroup_0()); }
(rule__Application__Group_0__0)
{ after(grammarAccess.getApplicationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getApplicationAccess().getGroup_1()); }
(rule__Application__Group_1__0)
{ after(grammarAccess.getApplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFunctionCallParserRuleCall_0()); }
	ruleFunctionCall
{ after(grammarAccess.getFeatureCallAccess().getFunctionCallParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureCallAccess().getPropertyAccessParserRuleCall_1()); }
	rulePropertyAccess
{ after(grammarAccess.getFeatureCallAccess().getPropertyAccessParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyAccess__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccessAccess().getNamedPropertyAccessParserRuleCall_0()); }
	ruleNamedPropertyAccess
{ after(grammarAccess.getPropertyAccessAccess().getNamedPropertyAccessParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccessAccess().getIndexedPropertyAccessParserRuleCall_1()); }
	ruleIndexedPropertyAccess
{ after(grammarAccess.getPropertyAccessAccess().getIndexedPropertyAccessParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyAccess__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getGroup_0()); }
(rule__NamedPropertyAccess__Group_0__0)
{ after(grammarAccess.getNamedPropertyAccessAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNamedPropertyAccessAccess().getGroup_1()); }
(rule__NamedPropertyAccess__Group_1__0)
{ after(grammarAccess.getNamedPropertyAccessAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyAccess__AccessorAlternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getAccessorDOTTerminalRuleCall_0_0_0_0()); }
	RULE_DOT
{ after(grammarAccess.getNamedPropertyAccessAccess().getAccessorDOTTerminalRuleCall_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getNamedPropertyAccessAccess().getAccessorQUESTION_DOTTerminalRuleCall_0_0_0_1()); }
	RULE_QUESTION_DOT
{ after(grammarAccess.getNamedPropertyAccessAccess().getAccessorQUESTION_DOTTerminalRuleCall_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getGroup_0()); }
(rule__Index__Group_0__0)
{ after(grammarAccess.getIndexAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getIndexAccess().getGroup_1()); }
(rule__Index__Group_1__0)
{ after(grammarAccess.getIndexAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getIndexAccess().getExpAssignment_2()); }
(rule__Index__ExpAssignment_2)
{ after(grammarAccess.getIndexAccess().getExpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__DotsAlternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getDotsDOT_DOTTerminalRuleCall_0_0_0_0()); }
	RULE_DOT_DOT
{ after(grammarAccess.getIndexAccess().getDotsDOT_DOTTerminalRuleCall_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getIndexAccess().getDotsELLIPSISTerminalRuleCall_0_0_0_1()); }
	RULE_ELLIPSIS
{ after(grammarAccess.getIndexAccess().getDotsELLIPSISTerminalRuleCall_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__DotsAlternatives_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getDotsDOT_DOTTerminalRuleCall_1_0_0_1_0_0()); }
	RULE_DOT_DOT
{ after(grammarAccess.getIndexAccess().getDotsDOT_DOTTerminalRuleCall_1_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getIndexAccess().getDotsELLIPSISTerminalRuleCall_1_0_0_1_0_1()); }
	RULE_ELLIPSIS
{ after(grammarAccess.getIndexAccess().getDotsELLIPSISTerminalRuleCall_1_0_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIfExpParserRuleCall_0()); }
	ruleIfExp
{ after(grammarAccess.getPrimaryExpressionAccess().getIfExpParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getParentheticalParserRuleCall_1()); }
	ruleParenthetical
{ after(grammarAccess.getPrimaryExpressionAccess().getParentheticalParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_2()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getRangeParserRuleCall_3()); }
(	ruleRange)
{ after(grammarAccess.getPrimaryExpressionAccess().getRangeParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getArrayParserRuleCall_4()); }
(	ruleArray)
{ after(grammarAccess.getPrimaryExpressionAccess().getArrayParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getDictionaryParserRuleCall_5()); }
(	ruleDictionary)
{ after(grammarAccess.getPrimaryExpressionAccess().getDictionaryParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getLambdaParserRuleCall_6()); }
	ruleLambda
{ after(grammarAccess.getPrimaryExpressionAccess().getLambdaParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getThisPropertyParserRuleCall_7()); }
	ruleThisProperty
{ after(grammarAccess.getPrimaryExpressionAccess().getThisPropertyParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_8()); }
(rule__PrimaryExpression__Group_8__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_9()); }
(rule__PrimaryExpression__Group_9__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_10()); }
(rule__PrimaryExpression__Group_10__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_11()); }
(rule__PrimaryExpression__Group_11__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_12()); }
(rule__PrimaryExpression__Group_12__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_13()); }
(rule__PrimaryExpression__Group_13__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_14()); }
(rule__PrimaryExpression__Group_14__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_14()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getIdRefParserRuleCall_15()); }
	ruleIdRef
{ after(grammarAccess.getPrimaryExpressionAccess().getIdRefParserRuleCall_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_13_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1_2_0()); }
(rule__PrimaryExpression__Group_13_1_2_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1_2_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1_2_1()); }
(rule__PrimaryExpression__Group_13_1_2_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_0()); }
(rule__Property__Group_0__0)
{ after(grammarAccess.getPropertyAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getGroup_1()); }
(rule__Property__Group_1__0)
{ after(grammarAccess.getPropertyAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__AccessorAlternatives_0_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAccessorDOTTerminalRuleCall_0_0_0_1_0_0()); }
	RULE_DOT
{ after(grammarAccess.getPropertyAccess().getAccessorDOTTerminalRuleCall_0_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getAccessorDOUBLE_COLONTerminalRuleCall_0_0_0_1_0_1()); }
	RULE_DOUBLE_COLON
{ after(grammarAccess.getPropertyAccess().getAccessorDOUBLE_COLONTerminalRuleCall_0_0_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getAccessorQUESTION_DOTTerminalRuleCall_0_0_0_1_0_2()); }
	RULE_QUESTION_DOT
{ after(grammarAccess.getPropertyAccess().getAccessorQUESTION_DOTTerminalRuleCall_0_0_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getIdParserRuleCall_0()); }
	ruleId
{ after(grammarAccess.getVariableAccess().getIdParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getGroup_1()); }
(rule__Variable__Group_1__0)
{ after(grammarAccess.getVariableAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getPropertyParserRuleCall_2()); }
	ruleProperty
{ after(grammarAccess.getVariableAccess().getPropertyParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getAT_SIGILTerminalRuleCall_1_0_0()); }
	RULE_AT_SIGIL
{ after(grammarAccess.getVariableAccess().getAT_SIGILTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getGroup_1_0_1()); }
(rule__Variable__Group_1_0_1__0)
{ after(grammarAccess.getVariableAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableAccess().getVariableParserRuleCall_0()); }
	ruleVariable
{ after(grammarAccess.getAssignableAccess().getVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAssignableAccess().getDictionaryParserRuleCall_1()); }
(	ruleDictionary)
{ after(grammarAccess.getAssignableAccess().getDictionaryParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAssignableAccess().getAssignableArrayParserRuleCall_2()); }
(	ruleAssignableArray)
{ after(grammarAccess.getAssignableAccess().getAssignableArrayParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getGroup_1_0()); }
(rule__ExplicitArgList__Group_1_0__0)
{ after(grammarAccess.getExplicitArgListAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExplicitArgListAccess().getGroup_1_1()); }
(rule__ExplicitArgList__Group_1_1__0)
{ after(grammarAccess.getExplicitArgListAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getDummyAssignment_1_0()); }
(rule__ArgList__DummyAssignment_1_0)
{ after(grammarAccess.getArgListAccess().getDummyAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getArgListAccess().getGroup_1_1()); }
(rule__ArgList__Group_1_1__0)
{ after(grammarAccess.getArgListAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DictItems__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemsAccess().getDummyAssignment_1_0()); }
(rule__DictItems__DummyAssignment_1_0)
{ after(grammarAccess.getDictItemsAccess().getDummyAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getDictItemsAccess().getGroup_1_1()); }
(rule__DictItems__Group_1_1__0)
{ after(grammarAccess.getDictItemsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getGroup_1_0()); }
(rule__ExplicitDictItems__Group_1_0__0)
{ after(grammarAccess.getExplicitDictItemsAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExplicitDictItemsAccess().getGroup_1_1()); }
(rule__ExplicitDictItems__Group_1_1__0)
{ after(grammarAccess.getExplicitDictItemsAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getValueAssignment_2_1_0()); }
(rule__DictItem__ValueAssignment_2_1_0)
{ after(grammarAccess.getDictItemAccess().getValueAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getDictItemAccess().getGroup_2_1_1()); }
(rule__DictItem__Group_2_1_1__0)
{ after(grammarAccess.getDictItemAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DictKey__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictKeyAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getDictKeyAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDictKeyAccess().getIdParserRuleCall_1()); }
	ruleId
{ after(grammarAccess.getDictKeyAccess().getIdParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getFUNC_ARROWTerminalRuleCall_1_0()); }
	RULE_FUNC_ARROW
{ after(grammarAccess.getLambdaAccess().getFUNC_ARROWTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getLambdaAccess().getBOUND_FUNC_ARROWTerminalRuleCall_1_1()); }
	RULE_BOUND_FUNC_ARROW
{ after(grammarAccess.getLambdaAccess().getBOUND_FUNC_ARROWTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getIdParserRuleCall_0_0()); }
	ruleId
{ after(grammarAccess.getParamAccess().getIdParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getParamAccess().getArrayParserRuleCall_0_1()); }
(	ruleArray)
{ after(grammarAccess.getParamAccess().getArrayParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getParamAccess().getDictionaryParserRuleCall_0_2()); }
(	ruleDictionary)
{ after(grammarAccess.getParamAccess().getDictionaryParserRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getParamAccess().getThisPropertyParserRuleCall_0_3()); }
	ruleThisProperty
{ after(grammarAccess.getParamAccess().getThisPropertyParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getSplatAssignment_1_0()); }
(rule__Param__SplatAssignment_1_0)
{ after(grammarAccess.getParamAccess().getSplatAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getParamAccess().getGroup_1_1()); }
(rule__Param__Group_1_1__0)
{ after(grammarAccess.getParamAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_0()); }
	ruleNumberLiteral
{ after(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_2()); }
	ruleBoolLiteral
{ after(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getJSLiteralParserRuleCall_3()); }
	ruleJSLiteral
{ after(grammarAccess.getLiteralAccess().getJSLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getRegexLiteralParserRuleCall_4()); }
	ruleRegexLiteral
{ after(grammarAccess.getLiteralAccess().getRegexLiteralParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getGroup_0()); }
(rule__Parenthetical__Group_0__0)
{ after(grammarAccess.getParentheticalAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getParentheticalAccess().getGroup_1()); }
(rule__Parenthetical__Group_1__0)
{ after(grammarAccess.getParentheticalAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TaskDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__0__Impl
	rule__TaskDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getTASKTerminalRuleCall_0()); }
	RULE_TASK
{ after(grammarAccess.getTaskDeclarationAccess().getTASKTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__1__Impl
	rule__TaskDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getCALL_STARTTerminalRuleCall_1()); }
	RULE_CALL_START
{ after(grammarAccess.getTaskDeclarationAccess().getCALL_STARTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__2__Impl
	rule__TaskDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getNameAssignment_2()); }
(rule__TaskDeclaration__NameAssignment_2)
{ after(grammarAccess.getTaskDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__3__Impl
	rule__TaskDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getCOMMATerminalRuleCall_3()); }
	RULE_COMMA
{ after(grammarAccess.getTaskDeclarationAccess().getCOMMATerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__4__Impl
	rule__TaskDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getDescriptionAssignment_4()); }
(rule__TaskDeclaration__DescriptionAssignment_4)
{ after(grammarAccess.getTaskDeclarationAccess().getDescriptionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__5__Impl
	rule__TaskDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getCOMMATerminalRuleCall_5()); }
	RULE_COMMA
{ after(grammarAccess.getTaskDeclarationAccess().getCOMMATerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__6__Impl
	rule__TaskDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getGroup_6()); }
(rule__TaskDeclaration__Group_6__0)?
{ after(grammarAccess.getTaskDeclarationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__7__Impl
	rule__TaskDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getFUNC_ARROWTerminalRuleCall_7()); }
	RULE_FUNC_ARROW
{ after(grammarAccess.getTaskDeclarationAccess().getFUNC_ARROWTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__8__Impl
	rule__TaskDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getBodyAssignment_8()); }
(rule__TaskDeclaration__BodyAssignment_8)
{ after(grammarAccess.getTaskDeclarationAccess().getBodyAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__9__Impl
	rule__TaskDeclaration__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getCALL_ENDTerminalRuleCall_9()); }
	RULE_CALL_END
{ after(grammarAccess.getTaskDeclarationAccess().getCALL_ENDTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getTERMINATORTerminalRuleCall_10()); }
	RULE_TERMINATOR
{ after(grammarAccess.getTaskDeclarationAccess().getTERMINATORTerminalRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__TaskDeclaration__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group_6__0__Impl
	rule__TaskDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getPARAM_STARTTerminalRuleCall_6_0()); }
	RULE_PARAM_START
{ after(grammarAccess.getTaskDeclarationAccess().getPARAM_STARTTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group_6__1__Impl
	rule__TaskDeclaration__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getOptionsAssignment_6_1()); }
(rule__TaskDeclaration__OptionsAssignment_6_1)
{ after(grammarAccess.getTaskDeclarationAccess().getOptionsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDeclaration__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDeclaration__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getPARAM_ENDTerminalRuleCall_6_2()); }
	RULE_PARAM_END
{ after(grammarAccess.getTaskDeclarationAccess().getPARAM_ENDTerminalRuleCall_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Body__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getLinesAssignment_0()); }
(rule__Body__LinesAssignment_0)
{ after(grammarAccess.getBodyAccess().getLinesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getGroup_1()); }
(rule__Body__Group_1__0)*
{ after(grammarAccess.getBodyAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Body__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group_1__0__Impl
	rule__Body__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getTERMINATORTerminalRuleCall_1_0()); }
	RULE_TERMINATOR
{ after(grammarAccess.getBodyAccess().getTERMINATORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getLinesAssignment_1_1()); }
(rule__Body__LinesAssignment_1_1)?
{ after(grammarAccess.getBodyAccess().getLinesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RequireStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireStmt__Group__0__Impl
	rule__RequireStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireStmtAccess().getGroup_0()); }
(rule__RequireStmt__Group_0__0)
{ after(grammarAccess.getRequireStmtAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequireStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireStmt__Group__1__Impl
	rule__RequireStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireStmtAccess().getCALL_STARTTerminalRuleCall_1()); }
	RULE_CALL_START
{ after(grammarAccess.getRequireStmtAccess().getCALL_STARTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequireStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireStmt__Group__2__Impl
	rule__RequireStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireStmtAccess().getUriAssignment_2()); }
(rule__RequireStmt__UriAssignment_2)
{ after(grammarAccess.getRequireStmtAccess().getUriAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequireStmt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireStmt__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireStmt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireStmtAccess().getCALL_ENDTerminalRuleCall_3()); }
	RULE_CALL_END
{ after(grammarAccess.getRequireStmtAccess().getCALL_ENDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RequireStmt__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireStmt__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireStmt__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireStmtAccess().getGroup_0_0()); }
(rule__RequireStmt__Group_0_0__0)
{ after(grammarAccess.getRequireStmtAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RequireStmt__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireStmt__Group_0_0__0__Impl
	rule__RequireStmt__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireStmt__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireStmtAccess().getImportedNamespaceAssignment_0_0_0()); }
(rule__RequireStmt__ImportedNamespaceAssignment_0_0_0)
{ after(grammarAccess.getRequireStmtAccess().getImportedNamespaceAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequireStmt__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireStmt__Group_0_0__1__Impl
	rule__RequireStmt__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireStmt__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireStmtAccess().getEQUALTerminalRuleCall_0_0_1()); }
	RULE_EQUAL
{ after(grammarAccess.getRequireStmtAccess().getEQUALTerminalRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequireStmt__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequireStmt__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireStmt__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireStmtAccess().getRequireKeyword_0_0_2()); }

	'require' 

{ after(grammarAccess.getRequireStmtAccess().getRequireKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReturnStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStmt__Group__0__Impl
	rule__ReturnStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getReturnStmtAction_0()); }
(

)
{ after(grammarAccess.getReturnStmtAccess().getReturnStmtAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStmt__Group__1__Impl
	rule__ReturnStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getRETURNTerminalRuleCall_1()); }
	RULE_RETURN
{ after(grammarAccess.getReturnStmtAccess().getRETURNTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStmt__Group__2__Impl
	rule__ReturnStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getExpressionAssignment_2()); }
(rule__ReturnStmt__ExpressionAssignment_2)?
{ after(grammarAccess.getReturnStmtAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStmt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStmt__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getGroup_3()); }
(rule__ReturnStmt__Group_3__0)?
{ after(grammarAccess.getReturnStmtAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReturnStmt__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStmt__Group_3__0__Impl
	rule__ReturnStmt__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getPOST_IFTerminalRuleCall_3_0()); }
	RULE_POST_IF
{ after(grammarAccess.getReturnStmtAccess().getPOST_IFTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStmt__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStmt__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getConditionAssignment_3_1()); }
(rule__ReturnStmt__ConditionAssignment_3_1)
{ after(grammarAccess.getReturnStmtAccess().getConditionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ThrowStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowStmt__Group__0__Impl
	rule__ThrowStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowStmtAccess().getTHROWTerminalRuleCall_0()); }
	RULE_THROW
{ after(grammarAccess.getThrowStmtAccess().getTHROWTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThrowStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowStmtAccess().getExpAssignment_1()); }
(rule__ThrowStmt__ExpAssignment_1)
{ after(grammarAccess.getThrowStmtAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__0__Impl
	rule__ClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0()); }
(

)
{ after(grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__1__Impl
	rule__ClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getCLASSTerminalRuleCall_1()); }
	RULE_CLASS
{ after(grammarAccess.getClassDeclarationAccess().getCLASSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getAlternatives_2()); }
(rule__ClassDeclaration__Alternatives_2)?
{ after(grammarAccess.getClassDeclarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassDeclaration__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2_1__0__Impl
	rule__ClassDeclaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_1_0()); }
	RULE_EXTENDS
{ after(grammarAccess.getClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2_1__1__Impl
	rule__ClassDeclaration__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getExtendAssignment_2_1_1()); }
(rule__ClassDeclaration__ExtendAssignment_2_1_1)
{ after(grammarAccess.getClassDeclarationAccess().getExtendAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getBodyAssignment_2_1_2()); }
(rule__ClassDeclaration__BodyAssignment_2_1_2)?
{ after(grammarAccess.getClassDeclarationAccess().getBodyAssignment_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassDeclaration__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2_2__0__Impl
	rule__ClassDeclaration__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getNameAssignment_2_2_0()); }
(rule__ClassDeclaration__NameAssignment_2_2_0)
{ after(grammarAccess.getClassDeclarationAccess().getNameAssignment_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2_2__1__Impl
	rule__ClassDeclaration__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_2_2_1()); }
(rule__ClassDeclaration__Group_2_2_1__0)?
{ after(grammarAccess.getClassDeclarationAccess().getGroup_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getBodyAssignment_2_2_2()); }
(rule__ClassDeclaration__BodyAssignment_2_2_2)
{ after(grammarAccess.getClassDeclarationAccess().getBodyAssignment_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassDeclaration__Group_2_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2_2_1__0__Impl
	rule__ClassDeclaration__Group_2_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_2_1_0()); }
	RULE_EXTENDS
{ after(grammarAccess.getClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_2_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getExtendAssignment_2_2_1_1()); }
(rule__ClassDeclaration__ExtendAssignment_2_2_1_1)
{ after(grammarAccess.getClassDeclarationAccess().getExtendAssignment_2_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignedClassDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group__0__Impl
	rule__AssignedClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getClassDeclarationAction_0()); }
(

)
{ after(grammarAccess.getAssignedClassDeclarationAccess().getClassDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignedClassDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group__1__Impl
	rule__AssignedClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getCLASSTerminalRuleCall_1()); }
	RULE_CLASS
{ after(grammarAccess.getAssignedClassDeclarationAccess().getCLASSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignedClassDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getAlternatives_2()); }
(rule__AssignedClassDeclaration__Alternatives_2)?
{ after(grammarAccess.getAssignedClassDeclarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssignedClassDeclaration__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group_2_0__0__Impl
	rule__AssignedClassDeclaration__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_0_0()); }
	RULE_EXTENDS
{ after(grammarAccess.getAssignedClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignedClassDeclaration__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group_2_0__1__Impl
	rule__AssignedClassDeclaration__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getExtendAssignment_2_0_1()); }
(rule__AssignedClassDeclaration__ExtendAssignment_2_0_1)
{ after(grammarAccess.getAssignedClassDeclarationAccess().getExtendAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignedClassDeclaration__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getBodyAssignment_2_0_2()); }
(rule__AssignedClassDeclaration__BodyAssignment_2_0_2)
{ after(grammarAccess.getAssignedClassDeclarationAccess().getBodyAssignment_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssignedClassDeclaration__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group_2_1__0__Impl
	rule__AssignedClassDeclaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getNameAssignment_2_1_0()); }
(rule__AssignedClassDeclaration__NameAssignment_2_1_0)
{ after(grammarAccess.getAssignedClassDeclarationAccess().getNameAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignedClassDeclaration__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group_2_1__1__Impl
	rule__AssignedClassDeclaration__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getGroup_2_1_1()); }
(rule__AssignedClassDeclaration__Group_2_1_1__0)?
{ after(grammarAccess.getAssignedClassDeclarationAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignedClassDeclaration__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getBodyAssignment_2_1_2()); }
(rule__AssignedClassDeclaration__BodyAssignment_2_1_2)
{ after(grammarAccess.getAssignedClassDeclarationAccess().getBodyAssignment_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssignedClassDeclaration__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group_2_1_1__0__Impl
	rule__AssignedClassDeclaration__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_1_1_0()); }
	RULE_EXTENDS
{ after(grammarAccess.getAssignedClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignedClassDeclaration__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignedClassDeclaration__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getExtendAssignment_2_1_1_1()); }
(rule__AssignedClassDeclaration__ExtendAssignment_2_1_1_1)
{ after(grammarAccess.getAssignedClassDeclarationAccess().getExtendAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Postfix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group__0__Impl
	rule__Postfix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getAssignmentParserRuleCall_0()); }
	ruleAssignment
{ after(grammarAccess.getPostfixAccess().getAssignmentParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getAlternatives_1()); }
(rule__Postfix__Alternatives_1)?
{ after(grammarAccess.getPostfixAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Postfix__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_0__0__Impl
	rule__Postfix__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getPOST_IFTerminalRuleCall_1_0_0()); }
(	RULE_POST_IF)
{ after(grammarAccess.getPostfixAccess().getPOST_IFTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_0__1__Impl
	rule__Postfix__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getIfDummyAction_1_0_1()); }
(

)
{ after(grammarAccess.getPostfixAccess().getIfDummyAction_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getConditionAssignment_1_0_2()); }
(rule__Postfix__ConditionAssignment_1_0_2)
{ after(grammarAccess.getPostfixAccess().getConditionAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Postfix__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_1__0__Impl
	rule__Postfix__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getFORTerminalRuleCall_1_1_0()); }
(	RULE_FOR)
{ after(grammarAccess.getPostfixAccess().getFORTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_1__1__Impl
	rule__Postfix__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getForDummyAction_1_1_1()); }
(

)
{ after(grammarAccess.getPostfixAccess().getForDummyAction_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getBodyAssignment_1_1_2()); }
(rule__Postfix__BodyAssignment_1_1_2)
{ after(grammarAccess.getPostfixAccess().getBodyAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Postfix__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_2__0__Impl
	rule__Postfix__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getWHILETerminalRuleCall_1_2_0()); }
(	RULE_WHILE)
{ after(grammarAccess.getPostfixAccess().getWHILETerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_2__1__Impl
	rule__Postfix__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getWhileDummyAction_1_2_1()); }
(

)
{ after(grammarAccess.getPostfixAccess().getWhileDummyAction_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_2__2__Impl
	rule__Postfix__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getBodyAssignment_1_2_2()); }
(rule__Postfix__BodyAssignment_1_2_2)
{ after(grammarAccess.getPostfixAccess().getBodyAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getGroup_1_2_3()); }
(rule__Postfix__Group_1_2_3__0)?
{ after(grammarAccess.getPostfixAccess().getGroup_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Postfix__Group_1_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_2_3__0__Impl
	rule__Postfix__Group_1_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getWHENTerminalRuleCall_1_2_3_0()); }
(	RULE_WHEN)
{ after(grammarAccess.getPostfixAccess().getWHENTerminalRuleCall_1_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getWhenAssignment_1_2_3_1()); }
(rule__Postfix__WhenAssignment_1_2_3_1)
{ after(grammarAccess.getPostfixAccess().getWhenAssignment_1_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Postfix__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_3__0__Impl
	rule__Postfix__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getUNTILTerminalRuleCall_1_3_0()); }
(	RULE_UNTIL)
{ after(grammarAccess.getPostfixAccess().getUNTILTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_3__1__Impl
	rule__Postfix__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getUntilDummyAction_1_3_1()); }
(

)
{ after(grammarAccess.getPostfixAccess().getUntilDummyAction_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_3__2__Impl
	rule__Postfix__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getBodyAssignment_1_3_2()); }
(rule__Postfix__BodyAssignment_1_3_2)
{ after(grammarAccess.getPostfixAccess().getBodyAssignment_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getGroup_1_3_3()); }
(rule__Postfix__Group_1_3_3__0)?
{ after(grammarAccess.getPostfixAccess().getGroup_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Postfix__Group_1_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_3_3__0__Impl
	rule__Postfix__Group_1_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getWHENTerminalRuleCall_1_3_3_0()); }
(	RULE_WHEN)
{ after(grammarAccess.getPostfixAccess().getWHENTerminalRuleCall_1_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Postfix__Group_1_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Postfix__Group_1_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__Group_1_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getWhenAssignment_1_3_3_1()); }
(rule__Postfix__WhenAssignment_1_3_3_1)
{ after(grammarAccess.getPostfixAccess().getWhenAssignment_1_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForBody__Group__0__Impl
	rule__ForBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForBodyAccess().getOWNTerminalRuleCall_0()); }
(	RULE_OWN)?
{ after(grammarAccess.getForBodyAccess().getOWNTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForBody__Group__1__Impl
	rule__ForBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForBodyAccess().getIndexesAssignment_1()); }
(rule__ForBody__IndexesAssignment_1)
{ after(grammarAccess.getForBodyAccess().getIndexesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForBody__Group__2__Impl
	rule__ForBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForBodyAccess().getGroup_2()); }
(rule__ForBody__Group_2__0)*
{ after(grammarAccess.getForBodyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForBodyAccess().getSourceAssignment_3()); }
(rule__ForBody__SourceAssignment_3)
{ after(grammarAccess.getForBodyAccess().getSourceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ForBody__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForBody__Group_2__0__Impl
	rule__ForBody__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForBody__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForBodyAccess().getCOMMATerminalRuleCall_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getForBodyAccess().getCOMMATerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForBody__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForBody__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForBody__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForBodyAccess().getIndexesAssignment_2_1()); }
(rule__ForBody__IndexesAssignment_2_1)
{ after(grammarAccess.getForBodyAccess().getIndexesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForSource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group__0__Impl
	rule__ForSource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getForSourceAction_0()); }
(

)
{ after(grammarAccess.getForSourceAccess().getForSourceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getAlternatives_1()); }
(rule__ForSource__Alternatives_1)
{ after(grammarAccess.getForSourceAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForSource__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_0__0__Impl
	rule__ForSource__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getFOROFTerminalRuleCall_1_0_0()); }
(	RULE_FOROF)
{ after(grammarAccess.getForSourceAccess().getFOROFTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_0__1__Impl
	rule__ForSource__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getSourceAssignment_1_0_1()); }
(rule__ForSource__SourceAssignment_1_0_1)
{ after(grammarAccess.getForSourceAccess().getSourceAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getGroup_1_0_2()); }
(rule__ForSource__Group_1_0_2__0)?
{ after(grammarAccess.getForSourceAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForSource__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_0_2__0__Impl
	rule__ForSource__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getWHENTerminalRuleCall_1_0_2_0()); }
(	RULE_WHEN)
{ after(grammarAccess.getForSourceAccess().getWHENTerminalRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getWhenAssignment_1_0_2_1()); }
(rule__ForSource__WhenAssignment_1_0_2_1)
{ after(grammarAccess.getForSourceAccess().getWhenAssignment_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForSource__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1__0__Impl
	rule__ForSource__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getFORINTerminalRuleCall_1_1_0()); }
(	RULE_FORIN)
{ after(grammarAccess.getForSourceAccess().getFORINTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1__1__Impl
	rule__ForSource__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getSourceAssignment_1_1_1()); }
(rule__ForSource__SourceAssignment_1_1_1)
{ after(grammarAccess.getForSourceAccess().getSourceAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getAlternatives_1_1_2()); }
(rule__ForSource__Alternatives_1_1_2)?
{ after(grammarAccess.getForSourceAccess().getAlternatives_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForSource__Group_1_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1_2_0__0__Impl
	rule__ForSource__Group_1_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getWHENTerminalRuleCall_1_1_2_0_0()); }
(	RULE_WHEN)
{ after(grammarAccess.getForSourceAccess().getWHENTerminalRuleCall_1_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1_2_0__1__Impl
	rule__ForSource__Group_1_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getWhenAssignment_1_1_2_0_1()); }
(rule__ForSource__WhenAssignment_1_1_2_0_1)
{ after(grammarAccess.getForSourceAccess().getWhenAssignment_1_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_1_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getGroup_1_1_2_0_2()); }
(rule__ForSource__Group_1_1_2_0_2__0)?
{ after(grammarAccess.getForSourceAccess().getGroup_1_1_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForSource__Group_1_1_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1_2_0_2__0__Impl
	rule__ForSource__Group_1_1_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getBYTerminalRuleCall_1_1_2_0_2_0()); }
(	RULE_BY)
{ after(grammarAccess.getForSourceAccess().getBYTerminalRuleCall_1_1_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_1_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getByAssignment_1_1_2_0_2_1()); }
(rule__ForSource__ByAssignment_1_1_2_0_2_1)
{ after(grammarAccess.getForSourceAccess().getByAssignment_1_1_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForSource__Group_1_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1_2_1__0__Impl
	rule__ForSource__Group_1_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getBYTerminalRuleCall_1_1_2_1_0()); }
(	RULE_BY)
{ after(grammarAccess.getForSourceAccess().getBYTerminalRuleCall_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1_2_1__1__Impl
	rule__ForSource__Group_1_1_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getByAssignment_1_1_2_1_1()); }
(rule__ForSource__ByAssignment_1_1_2_1_1)
{ after(grammarAccess.getForSourceAccess().getByAssignment_1_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_1_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getGroup_1_1_2_1_2()); }
(rule__ForSource__Group_1_1_2_1_2__0)?
{ after(grammarAccess.getForSourceAccess().getGroup_1_1_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForSource__Group_1_1_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1_2_1_2__0__Impl
	rule__ForSource__Group_1_1_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getWHENTerminalRuleCall_1_1_2_1_2_0()); }
(	RULE_WHEN)
{ after(grammarAccess.getForSourceAccess().getWHENTerminalRuleCall_1_1_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForSource__Group_1_1_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForSource__Group_1_1_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__Group_1_1_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getWhenAssignment_1_1_2_1_2_1()); }
(rule__ForSource__WhenAssignment_1_1_2_1_2_1)
{ after(grammarAccess.getForSourceAccess().getWhenAssignment_1_1_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Range__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getGroup_0()); }
(rule__Range__Group_0__0)
{ after(grammarAccess.getRangeAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getEndAssignment_1()); }
(rule__Range__EndAssignment_1)
{ after(grammarAccess.getRangeAccess().getEndAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getRBRACKETTerminalRuleCall_2()); }
	RULE_RBRACKET
{ after(grammarAccess.getRangeAccess().getRBRACKETTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Range__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getGroup_0_0()); }
(rule__Range__Group_0_0__0)
{ after(grammarAccess.getRangeAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Range__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_0_0__0__Impl
	rule__Range__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getLBRACKETTerminalRuleCall_0_0_0()); }
	RULE_LBRACKET
{ after(grammarAccess.getRangeAccess().getLBRACKETTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_0_0__1__Impl
	rule__Range__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getStartAssignment_0_0_1()); }
(rule__Range__StartAssignment_0_0_1)
{ after(grammarAccess.getRangeAccess().getStartAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getAlternatives_0_0_2()); }
(rule__Range__Alternatives_0_0_2)
{ after(grammarAccess.getRangeAccess().getAlternatives_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__0__Impl
	rule__Assignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_0_0()); }
(rule__Assignment__Group_0_0__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightAssignment_0_1()); }
(rule__Assignment__RightAssignment_0_1)
{ after(grammarAccess.getAssignmentAccess().getRightAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_0_0_0()); }
(rule__Assignment__Group_0_0_0__0)
{ after(grammarAccess.getAssignmentAccess().getGroup_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Assignment__Group_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0_0_0__0__Impl
	rule__Assignment__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftAssignment_0_0_0_0()); }
(rule__Assignment__LeftAssignment_0_0_0_0)
{ after(grammarAccess.getAssignmentAccess().getLeftAssignment_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOperatorAssignment_0_0_0_1()); }
(rule__Assignment__OperatorAssignment_0_0_0_1)
{ after(grammarAccess.getAssignmentAccess().getOperatorAssignment_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assigned__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assigned__Group_1__0__Impl
	rule__Assigned__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assigned__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedAccess().getINDENTTerminalRuleCall_1_0()); }
	RULE_INDENT
{ after(grammarAccess.getAssignedAccess().getINDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assigned__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assigned__Group_1__1__Impl
	rule__Assigned__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assigned__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedAccess().getExpressionParserRuleCall_1_1()); }
	ruleExpression
{ after(grammarAccess.getAssignedAccess().getExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assigned__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assigned__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assigned__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedAccess().getOUTDENTTerminalRuleCall_1_2()); }
	RULE_OUTDENT
{ after(grammarAccess.getAssignedAccess().getOUTDENTTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LogicOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicOp__Group__0__Impl
	rule__LogicOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getCompareOpParserRuleCall_0()); }
	ruleCompareOp
{ after(grammarAccess.getLogicOpAccess().getCompareOpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getGroup_1()); }
(rule__LogicOp__Group_1__0)*
{ after(grammarAccess.getLogicOpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicOp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicOp__Group_1__0__Impl
	rule__LogicOp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getGroup_1_0()); }
(rule__LogicOp__Group_1_0__0)
{ after(grammarAccess.getLogicOpAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicOp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicOp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getRightAssignment_1_1()); }
(rule__LogicOp__RightAssignment_1_1)
{ after(grammarAccess.getLogicOpAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicOp__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicOp__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOp__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getGroup_1_0_0()); }
(rule__LogicOp__Group_1_0_0__0)
{ after(grammarAccess.getLogicOpAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__LogicOp__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicOp__Group_1_0_0__0__Impl
	rule__LogicOp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOp__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getLogicOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicOp__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicOp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOp__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getOperatorAssignment_1_0_0_1()); }
(rule__LogicOp__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getLogicOpAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOp__Group__0__Impl
	rule__CompareOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getRelationOpParserRuleCall_0()); }
	ruleRelationOp
{ after(grammarAccess.getCompareOpAccess().getRelationOpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getGroup_1()); }
(rule__CompareOp__Group_1__0)*
{ after(grammarAccess.getCompareOpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOp__Group_1__0__Impl
	rule__CompareOp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getGroup_1_0()); }
(rule__CompareOp__Group_1_0__0)
{ after(grammarAccess.getCompareOpAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getRightAssignment_1_1()); }
(rule__CompareOp__RightAssignment_1_1)
{ after(grammarAccess.getCompareOpAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOp__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOp__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getGroup_1_0_0()); }
(rule__CompareOp__Group_1_0_0__0)
{ after(grammarAccess.getCompareOpAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__CompareOp__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOp__Group_1_0_0__0__Impl
	rule__CompareOp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getCompareOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOp__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getOperatorAssignment_1_0_0_1()); }
(rule__CompareOp__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getCompareOpAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationOp__Group__0__Impl
	rule__RelationOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationOpAccess().getShiftOpParserRuleCall_0()); }
	ruleShiftOp
{ after(grammarAccess.getRelationOpAccess().getShiftOpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationOpAccess().getGroup_1()); }
(rule__RelationOp__Group_1__0)*
{ after(grammarAccess.getRelationOpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationOp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationOp__Group_1__0__Impl
	rule__RelationOp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationOpAccess().getGroup_1_0()); }
(rule__RelationOp__Group_1_0__0)
{ after(grammarAccess.getRelationOpAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationOp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationOp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationOpAccess().getRightAssignment_1_1()); }
(rule__RelationOp__RightAssignment_1_1)
{ after(grammarAccess.getRelationOpAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationOp__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationOp__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOp__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationOpAccess().getGroup_1_0_0()); }
(rule__RelationOp__Group_1_0_0__0)
{ after(grammarAccess.getRelationOpAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RelationOp__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationOp__Group_1_0_0__0__Impl
	rule__RelationOp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOp__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getRelationOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationOp__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationOp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOp__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationOpAccess().getOperatorAssignment_1_0_0_1()); }
(rule__RelationOp__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getRelationOpAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftOp__Group__0__Impl
	rule__ShiftOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOpAccess().getAdditiveOpParserRuleCall_0()); }
	ruleAdditiveOp
{ after(grammarAccess.getShiftOpAccess().getAdditiveOpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOpAccess().getGroup_1()); }
(rule__ShiftOp__Group_1__0)*
{ after(grammarAccess.getShiftOpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftOp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftOp__Group_1__0__Impl
	rule__ShiftOp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOpAccess().getGroup_1_0()); }
(rule__ShiftOp__Group_1_0__0)
{ after(grammarAccess.getShiftOpAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftOp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftOp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOpAccess().getRightAssignment_1_1()); }
(rule__ShiftOp__RightAssignment_1_1)
{ after(grammarAccess.getShiftOpAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftOp__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftOp__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOp__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOpAccess().getGroup_1_0_0()); }
(rule__ShiftOp__Group_1_0_0__0)
{ after(grammarAccess.getShiftOpAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ShiftOp__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftOp__Group_1_0_0__0__Impl
	rule__ShiftOp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOp__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getShiftOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftOp__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftOp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOp__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOpAccess().getOperatorAssignment_1_0_0_1()); }
(rule__ShiftOp__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getShiftOpAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveOp__Group__0__Impl
	rule__AdditiveOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOpAccess().getMathOpParserRuleCall_0()); }
	ruleMathOp
{ after(grammarAccess.getAdditiveOpAccess().getMathOpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOpAccess().getGroup_1()); }
(rule__AdditiveOp__Group_1__0)*
{ after(grammarAccess.getAdditiveOpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveOp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveOp__Group_1__0__Impl
	rule__AdditiveOp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOpAccess().getGroup_1_0()); }
(rule__AdditiveOp__Group_1_0__0)
{ after(grammarAccess.getAdditiveOpAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveOp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveOp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOpAccess().getRightAssignment_1_1()); }
(rule__AdditiveOp__RightAssignment_1_1)
{ after(grammarAccess.getAdditiveOpAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveOp__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveOp__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOpAccess().getGroup_1_0_0()); }
(rule__AdditiveOp__Group_1_0_0__0)
{ after(grammarAccess.getAdditiveOpAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AdditiveOp__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveOp__Group_1_0_0__0__Impl
	rule__AdditiveOp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditiveOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveOp__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveOp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOpAccess().getOperatorAssignment_1_0_0_1()); }
(rule__AdditiveOp__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getAdditiveOpAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MathOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MathOp__Group__0__Impl
	rule__MathOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOpAccess().getUnaryOpParserRuleCall_0()); }
	ruleUnaryOp
{ after(grammarAccess.getMathOpAccess().getUnaryOpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MathOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MathOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOpAccess().getGroup_1()); }
(rule__MathOp__Group_1__0)*
{ after(grammarAccess.getMathOpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MathOp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MathOp__Group_1__0__Impl
	rule__MathOp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOpAccess().getGroup_1_0()); }
(rule__MathOp__Group_1_0__0)
{ after(grammarAccess.getMathOpAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MathOp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MathOp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOpAccess().getRightAssignment_1_1()); }
(rule__MathOp__RightAssignment_1_1)
{ after(grammarAccess.getMathOpAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MathOp__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MathOp__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOpAccess().getGroup_1_0_0()); }
(rule__MathOp__Group_1_0_0__0)
{ after(grammarAccess.getMathOpAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MathOp__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MathOp__Group_1_0_0__0__Impl
	rule__MathOp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMathOpAccess().getBinaryExpLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MathOp__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MathOp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOpAccess().getOperatorAssignment_1_0_0_1()); }
(rule__MathOp__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getMathOpAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryOp__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOp__Group_0__0__Impl
	rule__UnaryOp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOpAccess().getAlternatives_0_0()); }
(rule__UnaryOp__Alternatives_0_0)
{ after(grammarAccess.getUnaryOpAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOp__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOp__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOpAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getUnaryOpAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryOp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOp__Group_1__0__Impl
	rule__UnaryOp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOpAccess().getAlternatives_1_0()); }
(rule__UnaryOp__Alternatives_1_0)
{ after(grammarAccess.getUnaryOpAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOpAccess().getVariableParserRuleCall_1_1()); }
	ruleVariable
{ after(grammarAccess.getUnaryOpAccess().getVariableParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryOp__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOp__Group_2__0__Impl
	rule__UnaryOp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOpAccess().getApplicationParserRuleCall_2_0()); }
	ruleApplication
{ after(grammarAccess.getUnaryOpAccess().getApplicationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOp__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOp__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOp__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOpAccess().getQUESTIONTerminalRuleCall_2_1()); }
(	RULE_QUESTION)?
{ after(grammarAccess.getUnaryOpAccess().getQUESTIONTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Application__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Application__Group_0__0__Impl
	rule__Application__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getSuperCallAction_0_0()); }
(

)
{ after(grammarAccess.getApplicationAccess().getSuperCallAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Application__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getGroup_0_1()); }
(rule__Application__Group_0_1__0)
{ after(grammarAccess.getApplicationAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Application__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Application__Group_0_1__0__Impl
	rule__Application__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getSUPERTerminalRuleCall_0_1_0()); }
	RULE_SUPER
{ after(grammarAccess.getApplicationAccess().getSUPERTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Application__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getGroup_0_1_1()); }
(rule__Application__Group_0_1_1__0)?
{ after(grammarAccess.getApplicationAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Application__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Application__Group_0_1_1__0__Impl
	rule__Application__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getCALL_STARTTerminalRuleCall_0_1_1_0()); }
	RULE_CALL_START
{ after(grammarAccess.getApplicationAccess().getCALL_STARTTerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Application__Group_0_1_1__1__Impl
	rule__Application__Group_0_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getArgsAssignment_0_1_1_1()); }
(rule__Application__ArgsAssignment_0_1_1_1)
{ after(grammarAccess.getApplicationAccess().getArgsAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group_0_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Application__Group_0_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_0_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getCALL_ENDTerminalRuleCall_0_1_1_2()); }
	RULE_CALL_END
{ after(grammarAccess.getApplicationAccess().getCALL_ENDTerminalRuleCall_0_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Application__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Application__Group_1__0__Impl
	rule__Application__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getValueAssignment_1_0()); }
(rule__Application__ValueAssignment_1_0)
{ after(grammarAccess.getApplicationAccess().getValueAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Application__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getFeaturesAssignment_1_1()); }
(rule__Application__FeaturesAssignment_1_1)*
{ after(grammarAccess.getApplicationAccess().getFeaturesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); }
(

)
{ after(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFUNC_EXISTTerminalRuleCall_1()); }
(	RULE_FUNC_EXIST)?
{ after(grammarAccess.getFunctionCallAccess().getFUNC_EXISTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCALL_STARTTerminalRuleCall_2()); }
	RULE_CALL_START
{ after(grammarAccess.getFunctionCallAccess().getCALL_STARTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__3__Impl
	rule__FunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_3()); }
(rule__FunctionCall__ArgsAssignment_3)
{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCALL_ENDTerminalRuleCall_4()); }
	RULE_CALL_END
{ after(grammarAccess.getFunctionCallAccess().getCALL_ENDTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ThisProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisProperty__Group__0__Impl
	rule__ThisProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisPropertyAccess().getAT_SIGILTerminalRuleCall_0()); }
	RULE_AT_SIGIL
{ after(grammarAccess.getThisPropertyAccess().getAT_SIGILTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisPropertyAccess().getIdParserRuleCall_1()); }
	ruleId
{ after(grammarAccess.getThisPropertyAccess().getIdParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedPropertyAccess__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedPropertyAccess__Group_0__0__Impl
	rule__NamedPropertyAccess__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyAccess__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getAccessorAssignment_0_0()); }
(rule__NamedPropertyAccess__AccessorAssignment_0_0)
{ after(grammarAccess.getNamedPropertyAccessAccess().getAccessorAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedPropertyAccess__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedPropertyAccess__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyAccess__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getNameAssignment_0_1()); }
(rule__NamedPropertyAccess__NameAssignment_0_1)
{ after(grammarAccess.getNamedPropertyAccessAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedPropertyAccess__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedPropertyAccess__Group_1__0__Impl
	rule__NamedPropertyAccess__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyAccess__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getAccessorAssignment_1_0()); }
(rule__NamedPropertyAccess__AccessorAssignment_1_0)
{ after(grammarAccess.getNamedPropertyAccessAccess().getAccessorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedPropertyAccess__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedPropertyAccess__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyAccess__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getNameAssignment_1_1()); }
(rule__NamedPropertyAccess__NameAssignment_1_1)?
{ after(grammarAccess.getNamedPropertyAccessAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexedPropertyAccess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedPropertyAccess__Group__0__Impl
	rule__IndexedPropertyAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedPropertyAccess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedPropertyAccessAccess().getINDEX_STARTTerminalRuleCall_0()); }
	RULE_INDEX_START
{ after(grammarAccess.getIndexedPropertyAccessAccess().getINDEX_STARTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedPropertyAccess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedPropertyAccess__Group__1__Impl
	rule__IndexedPropertyAccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedPropertyAccess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedPropertyAccessAccess().getIndexAssignment_1()); }
(rule__IndexedPropertyAccess__IndexAssignment_1)
{ after(grammarAccess.getIndexedPropertyAccessAccess().getIndexAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedPropertyAccess__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedPropertyAccess__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedPropertyAccess__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedPropertyAccessAccess().getINDEX_ENDTerminalRuleCall_2()); }
	RULE_INDEX_END
{ after(grammarAccess.getIndexedPropertyAccessAccess().getINDEX_ENDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Index__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group_0__0__Impl
	rule__Index__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getDotsAssignment_0_0()); }
(rule__Index__DotsAssignment_0_0)
{ after(grammarAccess.getIndexAccess().getDotsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getEndAssignment_0_1()); }
(rule__Index__EndAssignment_0_1)
{ after(grammarAccess.getIndexAccess().getEndAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Index__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group_1__0__Impl
	rule__Index__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getGroup_1_0()); }
(rule__Index__Group_1_0__0)
{ after(grammarAccess.getIndexAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getEndAssignment_1_1()); }
(rule__Index__EndAssignment_1_1)?
{ after(grammarAccess.getIndexAccess().getEndAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Index__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getGroup_1_0_0()); }
(rule__Index__Group_1_0_0__0)
{ after(grammarAccess.getIndexAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Index__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group_1_0_0__0__Impl
	rule__Index__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getStartAssignment_1_0_0_0()); }
(rule__Index__StartAssignment_1_0_0_0)
{ after(grammarAccess.getIndexAccess().getStartAssignment_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getDotsAssignment_1_0_0_1()); }
(rule__Index__DotsAssignment_1_0_0_1)
{ after(grammarAccess.getIndexAccess().getDotsAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_8__0__Impl
	rule__PrimaryExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getThisAloneAction_8_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getThisAloneAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTHISTerminalRuleCall_8_1()); }
	RULE_THIS
{ after(grammarAccess.getPrimaryExpressionAccess().getTHISTerminalRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_9__0__Impl
	rule__PrimaryExpression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getForAction_9_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getForAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_9_1()); }
(rule__PrimaryExpression__Group_9_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_9_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_9_1__0__Impl
	rule__PrimaryExpression__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_9_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFORTerminalRuleCall_9_1_0()); }
	RULE_FOR
{ after(grammarAccess.getPrimaryExpressionAccess().getFORTerminalRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_9_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_9_1__1__Impl
	rule__PrimaryExpression__Group_9_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_9_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLoopAssignment_9_1_1()); }
(rule__PrimaryExpression__LoopAssignment_9_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getLoopAssignment_9_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_9_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_9_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_9_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_9_1_2()); }
(rule__PrimaryExpression__BodyAssignment_9_1_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_9_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_10__0__Impl
	rule__PrimaryExpression__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getWhileAction_10_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getWhileAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_10_1()); }
(rule__PrimaryExpression__Group_10_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_10_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_10_1__0__Impl
	rule__PrimaryExpression__Group_10_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_10_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getWHILETerminalRuleCall_10_1_0()); }
	RULE_WHILE
{ after(grammarAccess.getPrimaryExpressionAccess().getWHILETerminalRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_10_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_10_1__1__Impl
	rule__PrimaryExpression__Group_10_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_10_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLoopAssignment_10_1_1()); }
(rule__PrimaryExpression__LoopAssignment_10_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getLoopAssignment_10_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_10_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_10_1__2__Impl
	rule__PrimaryExpression__Group_10_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_10_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_10_1_2()); }
(rule__PrimaryExpression__Group_10_1_2__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_10_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_10_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_10_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_10_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_10_1_3()); }
(rule__PrimaryExpression__BodyAssignment_10_1_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_10_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_10_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_10_1_2__0__Impl
	rule__PrimaryExpression__Group_10_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_10_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getWHENTerminalRuleCall_10_1_2_0()); }
	RULE_WHEN
{ after(grammarAccess.getPrimaryExpressionAccess().getWHENTerminalRuleCall_10_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_10_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_10_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_10_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getWhenAssignment_10_1_2_1()); }
(rule__PrimaryExpression__WhenAssignment_10_1_2_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getWhenAssignment_10_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_11__0__Impl
	rule__PrimaryExpression__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getUntilAction_11_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getUntilAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_11_1()); }
(rule__PrimaryExpression__Group_11_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_11_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_11_1__0__Impl
	rule__PrimaryExpression__Group_11_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_11_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getUNTILTerminalRuleCall_11_1_0()); }
	RULE_UNTIL
{ after(grammarAccess.getPrimaryExpressionAccess().getUNTILTerminalRuleCall_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_11_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_11_1__1__Impl
	rule__PrimaryExpression__Group_11_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_11_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLoopAssignment_11_1_1()); }
(rule__PrimaryExpression__LoopAssignment_11_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getLoopAssignment_11_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_11_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_11_1__2__Impl
	rule__PrimaryExpression__Group_11_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_11_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_11_1_2()); }
(rule__PrimaryExpression__Group_11_1_2__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_11_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_11_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_11_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_11_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_11_1_3()); }
(rule__PrimaryExpression__BodyAssignment_11_1_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_11_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_11_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_11_1_2__0__Impl
	rule__PrimaryExpression__Group_11_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_11_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getWHENTerminalRuleCall_11_1_2_0()); }
	RULE_WHEN
{ after(grammarAccess.getPrimaryExpressionAccess().getWHENTerminalRuleCall_11_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_11_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_11_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_11_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getWhenAssignment_11_1_2_1()); }
(rule__PrimaryExpression__WhenAssignment_11_1_2_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getWhenAssignment_11_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_12__0__Impl
	rule__PrimaryExpression__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLoopAction_12_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getLoopAction_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_12_1()); }
(rule__PrimaryExpression__Group_12_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_12_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_12_1__0__Impl
	rule__PrimaryExpression__Group_12_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_12_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLOOPTerminalRuleCall_12_1_0()); }
	RULE_LOOP
{ after(grammarAccess.getPrimaryExpressionAccess().getLOOPTerminalRuleCall_12_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_12_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_12_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_12_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_12_1_1()); }
(rule__PrimaryExpression__BodyAssignment_12_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_12_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13__0__Impl
	rule__PrimaryExpression__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTryCatchAction_13_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getTryCatchAction_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1()); }
(rule__PrimaryExpression__Group_13_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_13_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1__0__Impl
	rule__PrimaryExpression__Group_13_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTRYTerminalRuleCall_13_1_0()); }
	RULE_TRY
{ after(grammarAccess.getPrimaryExpressionAccess().getTRYTerminalRuleCall_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_13_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1__1__Impl
	rule__PrimaryExpression__Group_13_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_13_1_1()); }
(rule__PrimaryExpression__BodyAssignment_13_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getBodyAssignment_13_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_13_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_13_1_2()); }
(rule__PrimaryExpression__Alternatives_13_1_2)?
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_13_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_13_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1_2_0__0__Impl
	rule__PrimaryExpression__Group_13_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCATCHTerminalRuleCall_13_1_2_0_0()); }
	RULE_CATCH
{ after(grammarAccess.getPrimaryExpressionAccess().getCATCHTerminalRuleCall_13_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_13_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1_2_0__1__Impl
	rule__PrimaryExpression__Group_13_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExceptionAssignment_13_1_2_0_1()); }
(rule__PrimaryExpression__ExceptionAssignment_13_1_2_0_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getExceptionAssignment_13_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_13_1_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1_2_0__2__Impl
	rule__PrimaryExpression__Group_13_1_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCatchBlockAssignment_13_1_2_0_2()); }
(rule__PrimaryExpression__CatchBlockAssignment_13_1_2_0_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getCatchBlockAssignment_13_1_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_13_1_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1_2_0_3()); }
(rule__PrimaryExpression__Group_13_1_2_0_3__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_13_1_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_13_1_2_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1_2_0_3__0__Impl
	rule__PrimaryExpression__Group_13_1_2_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1_2_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFINALLYTerminalRuleCall_13_1_2_0_3_0()); }
	RULE_FINALLY
{ after(grammarAccess.getPrimaryExpressionAccess().getFINALLYTerminalRuleCall_13_1_2_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_13_1_2_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1_2_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1_2_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockAssignment_13_1_2_0_3_1()); }
(rule__PrimaryExpression__FinallyBlockAssignment_13_1_2_0_3_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockAssignment_13_1_2_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_13_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1_2_1__0__Impl
	rule__PrimaryExpression__Group_13_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFINALLYTerminalRuleCall_13_1_2_1_0()); }
	RULE_FINALLY
{ after(grammarAccess.getPrimaryExpressionAccess().getFINALLYTerminalRuleCall_13_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_13_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_13_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_13_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockAssignment_13_1_2_1_1()); }
(rule__PrimaryExpression__FinallyBlockAssignment_13_1_2_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockAssignment_13_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_14__0__Impl
	rule__PrimaryExpression__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSwitchAction_14_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getSwitchAction_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_14_1()); }
(rule__PrimaryExpression__Group_14_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_14_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_14_1__0__Impl
	rule__PrimaryExpression__Group_14_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_14_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSWITCHTerminalRuleCall_14_1_0()); }
	RULE_SWITCH
{ after(grammarAccess.getPrimaryExpressionAccess().getSWITCHTerminalRuleCall_14_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_14_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_14_1__1__Impl
	rule__PrimaryExpression__Group_14_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_14_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpAssignment_14_1_1()); }
(rule__PrimaryExpression__ExpAssignment_14_1_1)?
{ after(grammarAccess.getPrimaryExpressionAccess().getExpAssignment_14_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_14_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_14_1__2__Impl
	rule__PrimaryExpression__Group_14_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_14_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getINDENTTerminalRuleCall_14_1_2()); }
	RULE_INDENT
{ after(grammarAccess.getPrimaryExpressionAccess().getINDENTTerminalRuleCall_14_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_14_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_14_1__3__Impl
	rule__PrimaryExpression__Group_14_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_14_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_14_1_3()); }
(rule__PrimaryExpression__CasesAssignment_14_1_3)*
{ after(grammarAccess.getPrimaryExpressionAccess().getCasesAssignment_14_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_14_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_14_1__4__Impl
	rule__PrimaryExpression__Group_14_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_14_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_14_1_4()); }
(rule__PrimaryExpression__Group_14_1_4__0)?
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_14_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_14_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_14_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_14_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOUTDENTTerminalRuleCall_14_1_5()); }
	RULE_OUTDENT
{ after(grammarAccess.getPrimaryExpressionAccess().getOUTDENTTerminalRuleCall_14_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PrimaryExpression__Group_14_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_14_1_4__0__Impl
	rule__PrimaryExpression__Group_14_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_14_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getELSETerminalRuleCall_14_1_4_0()); }
	RULE_ELSE
{ after(grammarAccess.getPrimaryExpressionAccess().getELSETerminalRuleCall_14_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_14_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_14_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_14_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getElseBlockAssignment_14_1_4_1()); }
(rule__PrimaryExpression__ElseBlockAssignment_14_1_4_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getElseBlockAssignment_14_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getINDENTTerminalRuleCall_1()); }
	RULE_INDENT
{ after(grammarAccess.getBlockAccess().getINDENTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBodyParserRuleCall_2()); }
(	ruleBody)?
{ after(grammarAccess.getBlockAccess().getBodyParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getOUTDENTTerminalRuleCall_3()); }
	RULE_OUTDENT
{ after(grammarAccess.getBlockAccess().getOUTDENTTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Case__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__0__Impl
	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getLEADING_WHENTerminalRuleCall_0()); }
	RULE_LEADING_WHEN
{ after(grammarAccess.getCaseAccess().getLEADING_WHENTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__1__Impl
	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWhensAssignment_1()); }
(rule__Case__WhensAssignment_1)
{ after(grammarAccess.getCaseAccess().getWhensAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__2__Impl
	rule__Case__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getGroup_2()); }
(rule__Case__Group_2__0)*
{ after(grammarAccess.getCaseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__3__Impl
	rule__Case__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getThenAssignment_3()); }
(rule__Case__ThenAssignment_3)
{ after(grammarAccess.getCaseAccess().getThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getTERMINATORTerminalRuleCall_4()); }
(	RULE_TERMINATOR)?
{ after(grammarAccess.getCaseAccess().getTERMINATORTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Case__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_2__0__Impl
	rule__Case__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getCOMMATerminalRuleCall_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getCaseAccess().getCOMMATerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWhensAssignment_2_1()); }
(rule__Case__WhensAssignment_2_1)
{ after(grammarAccess.getCaseAccess().getWhensAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExp__Group__0__Impl
	rule__IfExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpAccess().getBlocksAssignment_0()); }
(rule__IfExp__BlocksAssignment_0)
{ after(grammarAccess.getIfExpAccess().getBlocksAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExp__Group__1__Impl
	rule__IfExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpAccess().getGroup_1()); }
(rule__IfExp__Group_1__0)*
{ after(grammarAccess.getIfExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpAccess().getGroup_2()); }
(rule__IfExp__Group_2__0)?
{ after(grammarAccess.getIfExpAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExp__Group_1__0__Impl
	rule__IfExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpAccess().getELSETerminalRuleCall_1_0()); }
	RULE_ELSE
{ after(grammarAccess.getIfExpAccess().getELSETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpAccess().getBlocksAssignment_1_1()); }
(rule__IfExp__BlocksAssignment_1_1)
{ after(grammarAccess.getIfExpAccess().getBlocksAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfExp__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExp__Group_2__0__Impl
	rule__IfExp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpAccess().getELSETerminalRuleCall_2_0()); }
	RULE_ELSE
{ after(grammarAccess.getIfExpAccess().getELSETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExp__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExp__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpAccess().getDefaultBlockAssignment_2_1()); }
(rule__IfExp__DefaultBlockAssignment_2_1)
{ after(grammarAccess.getIfExpAccess().getDefaultBlockAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CondBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondBlock__Group__0__Impl
	rule__CondBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondBlockAccess().getOperatorAssignment_0()); }
(rule__CondBlock__OperatorAssignment_0)
{ after(grammarAccess.getCondBlockAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CondBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondBlock__Group__1__Impl
	rule__CondBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondBlockAccess().getConditionAssignment_1()); }
(rule__CondBlock__ConditionAssignment_1)
{ after(grammarAccess.getCondBlockAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CondBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CondBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondBlockAccess().getActionAssignment_2()); }
(rule__CondBlock__ActionAssignment_2)
{ after(grammarAccess.getCondBlockAccess().getActionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Property__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_0__0__Impl
	rule__Property__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_0_0()); }
(rule__Property__Group_0_0__0)
{ after(grammarAccess.getPropertyAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPropAssignment_0_1()); }
(rule__Property__PropAssignment_0_1)
{ after(grammarAccess.getPropertyAccess().getPropAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_0_0_0()); }
(rule__Property__Group_0_0_0__0)
{ after(grammarAccess.getPropertyAccess().getGroup_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Property__Group_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_0_0_0__0__Impl
	rule__Property__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getIdRefParserRuleCall_0_0_0_0()); }
	ruleIdRef
{ after(grammarAccess.getPropertyAccess().getIdRefParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAccessorAssignment_0_0_0_1()); }
(rule__Property__AccessorAssignment_0_0_0_1)
{ after(grammarAccess.getPropertyAccess().getAccessorAssignment_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1__0__Impl
	rule__Property__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_1_0()); }
(rule__Property__Group_1_0__0)
{ after(grammarAccess.getPropertyAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1__1__Impl
	rule__Property__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getIndexAssignment_1_1()); }
(rule__Property__IndexAssignment_1_1)
{ after(grammarAccess.getPropertyAccess().getIndexAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getINDEX_ENDTerminalRuleCall_1_2()); }
	RULE_INDEX_END
{ after(grammarAccess.getPropertyAccess().getINDEX_ENDTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Property__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_1_0_0()); }
(rule__Property__Group_1_0_0__0)
{ after(grammarAccess.getPropertyAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Property__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1_0_0__0__Impl
	rule__Property__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getIdRefParserRuleCall_1_0_0_0()); }
	ruleIdRef
{ after(grammarAccess.getPropertyAccess().getIdRefParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getINDEX_STARTTerminalRuleCall_1_0_0_1()); }
	RULE_INDEX_START
{ after(grammarAccess.getPropertyAccess().getINDEX_STARTTerminalRuleCall_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__0__Impl
	rule__Variable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getAlternatives_1_0()); }
(rule__Variable__Alternatives_1_0)
{ after(grammarAccess.getVariableAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__1__Impl
	rule__Variable__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getIdParserRuleCall_1_1()); }
	ruleId
{ after(grammarAccess.getVariableAccess().getIdParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_1_2()); }
(rule__Variable__Group_1_2__0)*
{ after(grammarAccess.getVariableAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1_0_1__0__Impl
	rule__Variable__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTHISTerminalRuleCall_1_0_1_0()); }
	RULE_THIS
{ after(grammarAccess.getVariableAccess().getTHISTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getDOTTerminalRuleCall_1_0_1_1()); }
	RULE_DOT
{ after(grammarAccess.getVariableAccess().getDOTTerminalRuleCall_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1_2__0__Impl
	rule__Variable__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getDOTTerminalRuleCall_1_2_0()); }
	RULE_DOT
{ after(grammarAccess.getVariableAccess().getDOTTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getPropsAssignment_1_2_1()); }
(rule__Variable__PropsAssignment_1_2_1)
{ after(grammarAccess.getVariableAccess().getPropsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignableArray__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignableArray__Group__0__Impl
	rule__AssignableArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArray__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArrayAccess().getLBRACKETTerminalRuleCall_0()); }
(	RULE_LBRACKET)
{ after(grammarAccess.getAssignableArrayAccess().getLBRACKETTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignableArray__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignableArray__Group__1__Impl
	rule__AssignableArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArray__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArrayAccess().getAssignableArgListParserRuleCall_1()); }
	ruleAssignableArgList
{ after(grammarAccess.getAssignableArrayAccess().getAssignableArgListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignableArray__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignableArray__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArray__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArrayAccess().getRBRACKETTerminalRuleCall_2()); }
	RULE_RBRACKET
{ after(grammarAccess.getAssignableArrayAccess().getRBRACKETTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssignableArgList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignableArgList__Group__0__Impl
	rule__AssignableArgList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArgList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArgListAccess().getArgsAssignment_0()); }
(rule__AssignableArgList__ArgsAssignment_0)
{ after(grammarAccess.getAssignableArgListAccess().getArgsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignableArgList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignableArgList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArgList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArgListAccess().getGroup_1()); }
(rule__AssignableArgList__Group_1__0)*
{ after(grammarAccess.getAssignableArgListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignableArgList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignableArgList__Group_1__0__Impl
	rule__AssignableArgList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArgList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArgListAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getAssignableArgListAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignableArgList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignableArgList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArgList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArgListAccess().getArgsAssignment_1_1()); }
(rule__AssignableArgList__ArgsAssignment_1_1)
{ after(grammarAccess.getAssignableArgListAccess().getArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignableArg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignableArg__Group__0__Impl
	rule__AssignableArg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArgAccess().getArgAssignment_0()); }
(rule__AssignableArg__ArgAssignment_0)
{ after(grammarAccess.getAssignableArgAccess().getArgAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignableArg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignableArg__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArgAccess().getSplatAssignment_1()); }
(rule__AssignableArg__SplatAssignment_1)?
{ after(grammarAccess.getAssignableArgAccess().getSplatAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__0__Impl
	rule__Arg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getExpAssignment_0()); }
(rule__Arg__ExpAssignment_0)
{ after(grammarAccess.getArgAccess().getExpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getSplatAssignment_1()); }
(rule__Arg__SplatAssignment_1)?
{ after(grammarAccess.getArgAccess().getSplatAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgLine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgLine__Group__0__Impl
	rule__ArgLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgLine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgLineAccess().getHeadAssignment_0()); }
(rule__ArgLine__HeadAssignment_0)
{ after(grammarAccess.getArgLineAccess().getHeadAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgLine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgLine__Group__1__Impl
	rule__ArgLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgLine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgLineAccess().getGroup_1()); }
(rule__ArgLine__Group_1__0)*
{ after(grammarAccess.getArgLineAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgLine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgLine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgLine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgLineAccess().getCOMMATerminalRuleCall_2()); }
(	RULE_COMMA)?
{ after(grammarAccess.getArgLineAccess().getCOMMATerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgLine__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgLine__Group_1__0__Impl
	rule__ArgLine__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgLine__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgLineAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getArgLineAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgLine__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgLine__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgLine__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgLineAccess().getTailAssignment_1_1()); }
(rule__ArgLine__TailAssignment_1_1)
{ after(grammarAccess.getArgLineAccess().getTailAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExplicitArgList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitArgList__Group__0__Impl
	rule__ExplicitArgList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getLinesAssignment_0()); }
(rule__ExplicitArgList__LinesAssignment_0)
{ after(grammarAccess.getExplicitArgListAccess().getLinesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitArgList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitArgList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getAlternatives_1()); }
(rule__ExplicitArgList__Alternatives_1)*
{ after(grammarAccess.getExplicitArgListAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExplicitArgList__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitArgList__Group_1_0__0__Impl
	rule__ExplicitArgList__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getTERMINATORTerminalRuleCall_1_0_0()); }
	RULE_TERMINATOR
{ after(grammarAccess.getExplicitArgListAccess().getTERMINATORTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitArgList__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitArgList__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getLinesAssignment_1_0_1()); }
(rule__ExplicitArgList__LinesAssignment_1_0_1)
{ after(grammarAccess.getExplicitArgListAccess().getLinesAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExplicitArgList__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitArgList__Group_1_1__0__Impl
	rule__ExplicitArgList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getINDENTTerminalRuleCall_1_1_0()); }
	RULE_INDENT
{ after(grammarAccess.getExplicitArgListAccess().getINDENTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitArgList__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitArgList__Group_1_1__1__Impl
	rule__ExplicitArgList__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getLinesAssignment_1_1_1()); }
(rule__ExplicitArgList__LinesAssignment_1_1_1)
{ after(grammarAccess.getExplicitArgListAccess().getLinesAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitArgList__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitArgList__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getOUTDENTTerminalRuleCall_1_1_2()); }
	RULE_OUTDENT
{ after(grammarAccess.getExplicitArgListAccess().getOUTDENTTerminalRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group__0__Impl
	rule__ArgList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getArgListAction_0()); }
(

)
{ after(grammarAccess.getArgListAccess().getArgListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getAlternatives_1()); }
(rule__ArgList__Alternatives_1)?
{ after(grammarAccess.getArgListAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgList__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group_1_1__0__Impl
	rule__ArgList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getINDENTTerminalRuleCall_1_1_0()); }
	RULE_INDENT
{ after(grammarAccess.getArgListAccess().getINDENTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgList__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group_1_1__1__Impl
	rule__ArgList__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getDummyAssignment_1_1_1()); }
(rule__ArgList__DummyAssignment_1_1_1)
{ after(grammarAccess.getArgListAccess().getDummyAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgList__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getOUTDENTTerminalRuleCall_1_1_2()); }
	RULE_OUTDENT
{ after(grammarAccess.getArgListAccess().getOUTDENTTerminalRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLBRACKETTerminalRuleCall_0()); }
(	RULE_LBRACKET)
{ after(grammarAccess.getArrayAccess().getLBRACKETTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getArgListParserRuleCall_1()); }
	ruleArgList
{ after(grammarAccess.getArrayAccess().getArgListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRBRACKETTerminalRuleCall_2()); }
	RULE_RBRACKET
{ after(grammarAccess.getArrayAccess().getRBRACKETTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Dictionary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dictionary__Group__0__Impl
	rule__Dictionary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dictionary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictionaryAccess().getLCURLYTerminalRuleCall_0()); }
(	RULE_LCURLY)
{ after(grammarAccess.getDictionaryAccess().getLCURLYTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dictionary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dictionary__Group__1__Impl
	rule__Dictionary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dictionary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictionaryAccess().getDictItemsParserRuleCall_1()); }
	ruleDictItems
{ after(grammarAccess.getDictionaryAccess().getDictItemsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dictionary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dictionary__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dictionary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictionaryAccess().getRCURLYTerminalRuleCall_2()); }
	RULE_RCURLY
{ after(grammarAccess.getDictionaryAccess().getRCURLYTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DictItems__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItems__Group__0__Impl
	rule__DictItems__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItems__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemsAccess().getDictItemsAction_0()); }
(

)
{ after(grammarAccess.getDictItemsAccess().getDictItemsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictItems__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItems__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItems__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemsAccess().getAlternatives_1()); }
(rule__DictItems__Alternatives_1)?
{ after(grammarAccess.getDictItemsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DictItems__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItems__Group_1_1__0__Impl
	rule__DictItems__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItems__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemsAccess().getINDENTTerminalRuleCall_1_1_0()); }
	RULE_INDENT
{ after(grammarAccess.getDictItemsAccess().getINDENTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictItems__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItems__Group_1_1__1__Impl
	rule__DictItems__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItems__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemsAccess().getDummyAssignment_1_1_1()); }
(rule__DictItems__DummyAssignment_1_1_1)
{ after(grammarAccess.getDictItemsAccess().getDummyAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictItems__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItems__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItems__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemsAccess().getOUTDENTTerminalRuleCall_1_1_2()); }
	RULE_OUTDENT
{ after(grammarAccess.getDictItemsAccess().getOUTDENTTerminalRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExplicitDictItems__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitDictItems__Group__0__Impl
	rule__ExplicitDictItems__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getLinesAssignment_0()); }
(rule__ExplicitDictItems__LinesAssignment_0)
{ after(grammarAccess.getExplicitDictItemsAccess().getLinesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitDictItems__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitDictItems__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getAlternatives_1()); }
(rule__ExplicitDictItems__Alternatives_1)*
{ after(grammarAccess.getExplicitDictItemsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExplicitDictItems__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitDictItems__Group_1_0__0__Impl
	rule__ExplicitDictItems__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getTERMINATORTerminalRuleCall_1_0_0()); }
	RULE_TERMINATOR
{ after(grammarAccess.getExplicitDictItemsAccess().getTERMINATORTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitDictItems__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitDictItems__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getLinesAssignment_1_0_1()); }
(rule__ExplicitDictItems__LinesAssignment_1_0_1)
{ after(grammarAccess.getExplicitDictItemsAccess().getLinesAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExplicitDictItems__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitDictItems__Group_1_1__0__Impl
	rule__ExplicitDictItems__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getINDENTTerminalRuleCall_1_1_0()); }
	RULE_INDENT
{ after(grammarAccess.getExplicitDictItemsAccess().getINDENTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitDictItems__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitDictItems__Group_1_1__1__Impl
	rule__ExplicitDictItems__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getLinesAssignment_1_1_1()); }
(rule__ExplicitDictItems__LinesAssignment_1_1_1)
{ after(grammarAccess.getExplicitDictItemsAccess().getLinesAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitDictItems__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExplicitDictItems__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getOUTDENTTerminalRuleCall_1_1_2()); }
	RULE_OUTDENT
{ after(grammarAccess.getExplicitDictItemsAccess().getOUTDENTTerminalRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DictLine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictLine__Group__0__Impl
	rule__DictLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictLine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictLineAccess().getHeadAssignment_0()); }
(rule__DictLine__HeadAssignment_0)
{ after(grammarAccess.getDictLineAccess().getHeadAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictLine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictLine__Group__1__Impl
	rule__DictLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DictLine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictLineAccess().getGroup_1()); }
(rule__DictLine__Group_1__0)*
{ after(grammarAccess.getDictLineAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictLine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictLine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictLine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictLineAccess().getCOMMATerminalRuleCall_2()); }
(	RULE_COMMA)?
{ after(grammarAccess.getDictLineAccess().getCOMMATerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DictLine__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictLine__Group_1__0__Impl
	rule__DictLine__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictLine__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictLineAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getDictLineAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictLine__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictLine__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictLine__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictLineAccess().getTailAssignment_1_1()); }
(rule__DictLine__TailAssignment_1_1)
{ after(grammarAccess.getDictLineAccess().getTailAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DictItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItem__Group__0__Impl
	rule__DictItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getDictItemAction_0()); }
(

)
{ after(grammarAccess.getDictItemAccess().getDictItemAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItem__Group__1__Impl
	rule__DictItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getKeyAssignment_1()); }
(rule__DictItem__KeyAssignment_1)
{ after(grammarAccess.getDictItemAccess().getKeyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getGroup_2()); }
(rule__DictItem__Group_2__0)?
{ after(grammarAccess.getDictItemAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DictItem__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItem__Group_2__0__Impl
	rule__DictItem__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getCOLONTerminalRuleCall_2_0()); }
	RULE_COLON
{ after(grammarAccess.getDictItemAccess().getCOLONTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictItem__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItem__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getAlternatives_2_1()); }
(rule__DictItem__Alternatives_2_1)
{ after(grammarAccess.getDictItemAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DictItem__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItem__Group_2_1_1__0__Impl
	rule__DictItem__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getINDENTTerminalRuleCall_2_1_1_0()); }
	RULE_INDENT
{ after(grammarAccess.getDictItemAccess().getINDENTTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictItem__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItem__Group_2_1_1__1__Impl
	rule__DictItem__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getValueAssignment_2_1_1_1()); }
(rule__DictItem__ValueAssignment_2_1_1_1)
{ after(grammarAccess.getDictItemAccess().getValueAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DictItem__Group_2_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DictItem__Group_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__Group_2_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getOUTDENTTerminalRuleCall_2_1_1_2()); }
	RULE_OUTDENT
{ after(grammarAccess.getDictItemAccess().getOUTDENTTerminalRuleCall_2_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Lambda__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lambda__Group__0__Impl
	rule__Lambda__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getGroup_0()); }
(rule__Lambda__Group_0__0)?
{ after(grammarAccess.getLambdaAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lambda__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lambda__Group__1__Impl
	rule__Lambda__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getAlternatives_1()); }
(rule__Lambda__Alternatives_1)
{ after(grammarAccess.getLambdaAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lambda__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lambda__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getBodyAssignment_2()); }
(rule__Lambda__BodyAssignment_2)
{ after(grammarAccess.getLambdaAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Lambda__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lambda__Group_0__0__Impl
	rule__Lambda__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getPARAM_STARTTerminalRuleCall_0_0()); }
	RULE_PARAM_START
{ after(grammarAccess.getLambdaAccess().getPARAM_STARTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lambda__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lambda__Group_0__1__Impl
	rule__Lambda__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getGroup_0_1()); }
(rule__Lambda__Group_0_1__0)?
{ after(grammarAccess.getLambdaAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lambda__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lambda__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getPARAM_ENDTerminalRuleCall_0_2()); }
	RULE_PARAM_END
{ after(grammarAccess.getLambdaAccess().getPARAM_ENDTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Lambda__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lambda__Group_0_1__0__Impl
	rule__Lambda__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getParamsAssignment_0_1_0()); }
(rule__Lambda__ParamsAssignment_0_1_0)
{ after(grammarAccess.getLambdaAccess().getParamsAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lambda__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lambda__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getGroup_0_1_1()); }
(rule__Lambda__Group_0_1_1__0)*
{ after(grammarAccess.getLambdaAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Lambda__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lambda__Group_0_1_1__0__Impl
	rule__Lambda__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getCOMMATerminalRuleCall_0_1_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getLambdaAccess().getCOMMATerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lambda__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lambda__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getParamsAssignment_0_1_1_1()); }
(rule__Lambda__ParamsAssignment_0_1_1_1)
{ after(grammarAccess.getLambdaAccess().getParamsAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Param__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getAlternatives_0()); }
(rule__Param__Alternatives_0)
{ after(grammarAccess.getParamAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getAlternatives_1()); }
(rule__Param__Alternatives_1)?
{ after(grammarAccess.getParamAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Param__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group_1_1__0__Impl
	rule__Param__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getEQUALTerminalRuleCall_1_1_0()); }
	RULE_EQUAL
{ after(grammarAccess.getParamAccess().getEQUALTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getDefaultValueAssignment_1_1_1()); }
(rule__Param__DefaultValueAssignment_1_1_1)
{ after(grammarAccess.getParamAccess().getDefaultValueAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__0__Impl
	rule__NumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
(

)
{ after(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getNUMBERTerminalRuleCall_1()); }
	RULE_NUMBER
{ after(grammarAccess.getNumberLiteralAccess().getNUMBERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getStringLiteralAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BoolLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolLiteral__Group__0__Impl
	rule__BoolLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0()); }
(

)
{ after(grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolLiteralAccess().getBOOLTerminalRuleCall_1()); }
	RULE_BOOL
{ after(grammarAccess.getBoolLiteralAccess().getBOOLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JSLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JSLiteral__Group__0__Impl
	rule__JSLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJSLiteralAccess().getJSLiteralAction_0()); }
(

)
{ after(grammarAccess.getJSLiteralAccess().getJSLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JSLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JSLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJSLiteralAccess().getJSTerminalRuleCall_1()); }
	RULE_JS
{ after(grammarAccess.getJSLiteralAccess().getJSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegexLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegexLiteral__Group__0__Impl
	rule__RegexLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegexLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegexLiteralAccess().getRegexLiteralAction_0()); }
(

)
{ after(grammarAccess.getRegexLiteralAccess().getRegexLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegexLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegexLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegexLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegexLiteralAccess().getREGEXTerminalRuleCall_1()); }
	RULE_REGEX
{ after(grammarAccess.getRegexLiteralAccess().getREGEXTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parenthetical__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthetical__Group_0__0__Impl
	rule__Parenthetical__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getGroup_0_0()); }
(rule__Parenthetical__Group_0_0__0)
{ after(grammarAccess.getParentheticalAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthetical__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthetical__Group_0__1__Impl
	rule__Parenthetical__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getContentAssignment_0_1()); }
(rule__Parenthetical__ContentAssignment_0_1)
{ after(grammarAccess.getParentheticalAccess().getContentAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthetical__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthetical__Group_0__2__Impl
	rule__Parenthetical__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getOUTDENTTerminalRuleCall_0_2()); }
	RULE_OUTDENT
{ after(grammarAccess.getParentheticalAccess().getOUTDENTTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthetical__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthetical__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getRPARENTerminalRuleCall_0_3()); }
	RULE_RPAREN
{ after(grammarAccess.getParentheticalAccess().getRPARENTerminalRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Parenthetical__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthetical__Group_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getGroup_0_0_0()); }
(rule__Parenthetical__Group_0_0_0__0)
{ after(grammarAccess.getParentheticalAccess().getGroup_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Parenthetical__Group_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthetical__Group_0_0_0__0__Impl
	rule__Parenthetical__Group_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Group_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getLPARENTerminalRuleCall_0_0_0_0()); }
	RULE_LPAREN
{ after(grammarAccess.getParentheticalAccess().getLPARENTerminalRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthetical__Group_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthetical__Group_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Group_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getINDENTTerminalRuleCall_0_0_0_1()); }
	RULE_INDENT
{ after(grammarAccess.getParentheticalAccess().getINDENTTerminalRuleCall_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parenthetical__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthetical__Group_1__0__Impl
	rule__Parenthetical__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getLPARENTerminalRuleCall_1_0()); }
(	RULE_LPAREN)
{ after(grammarAccess.getParentheticalAccess().getLPARENTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthetical__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthetical__Group_1__1__Impl
	rule__Parenthetical__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getContentAssignment_1_1()); }
(rule__Parenthetical__ContentAssignment_1_1)
{ after(grammarAccess.getParentheticalAccess().getContentAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthetical__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthetical__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getRPARENTerminalRuleCall_1_2()); }
	RULE_RPAREN
{ after(grammarAccess.getParentheticalAccess().getRPARENTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Cakefile__TasksAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCakefileAccess().getTasksTaskDeclarationParserRuleCall_0()); }
	ruleTaskDeclaration{ after(grammarAccess.getCakefileAccess().getTasksTaskDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getNameStringLiteralParserRuleCall_2_0()); }
	ruleStringLiteral{ after(grammarAccess.getTaskDeclarationAccess().getNameStringLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__DescriptionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getDescriptionStringLiteralParserRuleCall_4_0()); }
	ruleStringLiteral{ after(grammarAccess.getTaskDeclarationAccess().getDescriptionStringLiteralParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__OptionsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getOptionsIdParserRuleCall_6_1_0()); }
	ruleId{ after(grammarAccess.getTaskDeclarationAccess().getOptionsIdParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDeclaration__BodyAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclarationAccess().getBodyBlockParserRuleCall_8_0()); }
	ruleBlock{ after(grammarAccess.getTaskDeclarationAccess().getBodyBlockParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__LinesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getLinesLineParserRuleCall_0_0()); }
	ruleLine{ after(grammarAccess.getBodyAccess().getLinesLineParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__LinesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getLinesLineParserRuleCall_1_1_0()); }
	ruleLine{ after(grammarAccess.getBodyAccess().getLinesLineParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__StatementAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStatementSTATEMENTTerminalRuleCall_5_0()); }
	RULE_STATEMENT{ after(grammarAccess.getStmtAccess().getStatementSTATEMENTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__CommentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getCommentHERECOMMENTTerminalRuleCall_0()); }
	RULE_HERECOMMENT{ after(grammarAccess.getCommentAccess().getCommentHERECOMMENTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequireStmt__ImportedNamespaceAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireStmtAccess().getImportedNamespaceIdParserRuleCall_0_0_0_0()); }
	ruleId{ after(grammarAccess.getRequireStmtAccess().getImportedNamespaceIdParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequireStmt__UriAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequireStmtAccess().getUriSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getRequireStmtAccess().getUriSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getReturnStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__ConditionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getConditionExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getReturnStmtAccess().getConditionExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowStmt__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowStmtAccess().getExpExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getThrowStmtAccess().getExpExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__BodyAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getBodyBlockParserRuleCall_2_0_0()); }
	ruleBlock{ after(grammarAccess.getClassDeclarationAccess().getBodyBlockParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ExtendAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_1_1_0()); }
	ruleSuperClass{ after(grammarAccess.getClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__BodyAssignment_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getBodyBlockParserRuleCall_2_1_2_0()); }
	ruleBlock{ after(grammarAccess.getClassDeclarationAccess().getBodyBlockParserRuleCall_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__NameAssignment_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getNameAlternatives_2_2_0_0()); }
(rule__ClassDeclaration__NameAlternatives_2_2_0_0)
{ after(grammarAccess.getClassDeclarationAccess().getNameAlternatives_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ExtendAssignment_2_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_2_1_1_0()); }
	ruleSuperClass{ after(grammarAccess.getClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__BodyAssignment_2_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getBodyBlockParserRuleCall_2_2_2_0()); }
	ruleBlock{ after(grammarAccess.getClassDeclarationAccess().getBodyBlockParserRuleCall_2_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__ExtendAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_0_1_0()); }
	ruleSuperClass{ after(grammarAccess.getAssignedClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__BodyAssignment_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getBodyBlockParserRuleCall_2_0_2_0()); }
	ruleBlock{ after(grammarAccess.getAssignedClassDeclarationAccess().getBodyBlockParserRuleCall_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__NameAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getNameAlternatives_2_1_0_0()); }
(rule__AssignedClassDeclaration__NameAlternatives_2_1_0_0)
{ after(grammarAccess.getAssignedClassDeclarationAccess().getNameAlternatives_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__ExtendAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_1_1_1_0()); }
	ruleSuperClass{ after(grammarAccess.getAssignedClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignedClassDeclaration__BodyAssignment_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignedClassDeclarationAccess().getBodyBlockParserRuleCall_2_1_2_0()); }
	ruleBlock{ after(grammarAccess.getAssignedClassDeclarationAccess().getBodyBlockParserRuleCall_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__ConditionAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getConditionExpressionParserRuleCall_1_0_2_0()); }
	ruleExpression{ after(grammarAccess.getPostfixAccess().getConditionExpressionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__BodyAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getBodyForBodyParserRuleCall_1_1_2_0()); }
	ruleForBody{ after(grammarAccess.getPostfixAccess().getBodyForBodyParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__BodyAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getBodyExpressionParserRuleCall_1_2_2_0()); }
	ruleExpression{ after(grammarAccess.getPostfixAccess().getBodyExpressionParserRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__WhenAssignment_1_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getWhenExpressionParserRuleCall_1_2_3_1_0()); }
	ruleExpression{ after(grammarAccess.getPostfixAccess().getWhenExpressionParserRuleCall_1_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__BodyAssignment_1_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getBodyExpressionParserRuleCall_1_3_2_0()); }
	ruleExpression{ after(grammarAccess.getPostfixAccess().getBodyExpressionParserRuleCall_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Postfix__WhenAssignment_1_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixAccess().getWhenExpressionParserRuleCall_1_3_3_1_0()); }
	ruleExpression{ after(grammarAccess.getPostfixAccess().getWhenExpressionParserRuleCall_1_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForBody__IndexesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForBodyAccess().getIndexesForValueParserRuleCall_1_0()); }
	ruleForValue{ after(grammarAccess.getForBodyAccess().getIndexesForValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForBody__IndexesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForBodyAccess().getIndexesForValueParserRuleCall_2_1_0()); }
	ruleForValue{ after(grammarAccess.getForBodyAccess().getIndexesForValueParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForBody__SourceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForBodyAccess().getSourceForSourceParserRuleCall_3_0()); }
	ruleForSource{ after(grammarAccess.getForBodyAccess().getSourceForSourceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__SourceAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getSourceExpressionParserRuleCall_1_0_1_0()); }
	ruleExpression{ after(grammarAccess.getForSourceAccess().getSourceExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__WhenAssignment_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getWhenExpressionParserRuleCall_1_0_2_1_0()); }
	ruleExpression{ after(grammarAccess.getForSourceAccess().getWhenExpressionParserRuleCall_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__SourceAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getSourceExpressionParserRuleCall_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getForSourceAccess().getSourceExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__WhenAssignment_1_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getWhenExpressionParserRuleCall_1_1_2_0_1_0()); }
	ruleExpression{ after(grammarAccess.getForSourceAccess().getWhenExpressionParserRuleCall_1_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__ByAssignment_1_1_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getByExpressionParserRuleCall_1_1_2_0_2_1_0()); }
	ruleExpression{ after(grammarAccess.getForSourceAccess().getByExpressionParserRuleCall_1_1_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__ByAssignment_1_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getByExpressionParserRuleCall_1_1_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getForSourceAccess().getByExpressionParserRuleCall_1_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForSource__WhenAssignment_1_1_2_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForSourceAccess().getWhenExpressionParserRuleCall_1_1_2_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getForSourceAccess().getWhenExpressionParserRuleCall_1_1_2_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__StartAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getStartExpressionParserRuleCall_0_0_1_0()); }
	ruleExpression{ after(grammarAccess.getRangeAccess().getStartExpressionParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__EndAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getEndExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getRangeAccess().getEndExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LeftAssignment_0_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftAssignableParserRuleCall_0_0_0_0_0()); }
	ruleAssignable{ after(grammarAccess.getAssignmentAccess().getLeftAssignableParserRuleCall_0_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__OperatorAssignment_0_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOperatorAlternatives_0_0_0_1_0()); }
(rule__Assignment__OperatorAlternatives_0_0_0_1_0)
{ after(grammarAccess.getAssignmentAccess().getOperatorAlternatives_0_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RightAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightAssignedParserRuleCall_0_1_0()); }
	ruleAssigned{ after(grammarAccess.getAssignmentAccess().getRightAssignedParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOp__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getOperatorLOGICTerminalRuleCall_1_0_0_1_0()); }
	RULE_LOGIC{ after(grammarAccess.getLogicOpAccess().getOperatorLOGICTerminalRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOp__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOpAccess().getRightCompareOpParserRuleCall_1_1_0()); }
	ruleCompareOp{ after(grammarAccess.getLogicOpAccess().getRightCompareOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getOperatorCOMPARETerminalRuleCall_1_0_0_1_0()); }
	RULE_COMPARE{ after(grammarAccess.getCompareOpAccess().getOperatorCOMPARETerminalRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getRightRelationOpParserRuleCall_1_1_0()); }
	ruleRelationOp{ after(grammarAccess.getCompareOpAccess().getRightRelationOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOp__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationOpAccess().getOperatorRELATIONTerminalRuleCall_1_0_0_1_0()); }
	RULE_RELATION{ after(grammarAccess.getRelationOpAccess().getOperatorRELATIONTerminalRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationOp__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationOpAccess().getRightShiftOpParserRuleCall_1_1_0()); }
	ruleShiftOp{ after(grammarAccess.getRelationOpAccess().getRightShiftOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOp__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOpAccess().getOperatorSHIFTTerminalRuleCall_1_0_0_1_0()); }
	RULE_SHIFT{ after(grammarAccess.getShiftOpAccess().getOperatorSHIFTTerminalRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOp__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOpAccess().getRightAdditiveOpParserRuleCall_1_1_0()); }
	ruleAdditiveOp{ after(grammarAccess.getShiftOpAccess().getRightAdditiveOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOpAccess().getOperatorAlternatives_1_0_0_1_0()); }
(rule__AdditiveOp__OperatorAlternatives_1_0_0_1_0)
{ after(grammarAccess.getAdditiveOpAccess().getOperatorAlternatives_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOpAccess().getRightMathOpParserRuleCall_1_1_0()); }
	ruleMathOp{ after(grammarAccess.getAdditiveOpAccess().getRightMathOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOpAccess().getOperatorMATHTerminalRuleCall_1_0_0_1_0()); }
	RULE_MATH{ after(grammarAccess.getMathOpAccess().getOperatorMATHTerminalRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MathOp__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMathOpAccess().getRightUnaryOpParserRuleCall_1_1_0()); }
	ruleUnaryOp{ after(grammarAccess.getMathOpAccess().getRightUnaryOpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Application__ArgsAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getArgsArgListParserRuleCall_0_1_1_1_0()); }
	ruleArgList{ after(grammarAccess.getApplicationAccess().getArgsArgListParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Application__ValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getValuePrimaryExpressionParserRuleCall_1_0_0()); }
	rulePrimaryExpression{ after(grammarAccess.getApplicationAccess().getValuePrimaryExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Application__FeaturesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getApplicationAccess().getFeaturesFeatureCallParserRuleCall_1_1_0()); }
	ruleFeatureCall{ after(grammarAccess.getApplicationAccess().getFeaturesFeatureCallParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getArgsArgListParserRuleCall_3_0()); }
	ruleArgList{ after(grammarAccess.getFunctionCallAccess().getArgsArgListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyAccess__AccessorAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getAccessorAlternatives_0_0_0()); }
(rule__NamedPropertyAccess__AccessorAlternatives_0_0_0)
{ after(grammarAccess.getNamedPropertyAccessAccess().getAccessorAlternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyAccess__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getNameIdParserRuleCall_0_1_0()); }
	ruleId{ after(grammarAccess.getNamedPropertyAccessAccess().getNameIdParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyAccess__AccessorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getAccessorDOUBLE_COLONTerminalRuleCall_1_0_0()); }
	RULE_DOUBLE_COLON{ after(grammarAccess.getNamedPropertyAccessAccess().getAccessorDOUBLE_COLONTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedPropertyAccess__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedPropertyAccessAccess().getNameIdParserRuleCall_1_1_0()); }
	ruleId{ after(grammarAccess.getNamedPropertyAccessAccess().getNameIdParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedPropertyAccess__IndexAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedPropertyAccessAccess().getIndexIndexParserRuleCall_1_0()); }
	ruleIndex{ after(grammarAccess.getIndexedPropertyAccessAccess().getIndexIndexParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__DotsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getDotsAlternatives_0_0_0()); }
(rule__Index__DotsAlternatives_0_0_0)
{ after(grammarAccess.getIndexAccess().getDotsAlternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__EndAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getEndExpressionParserRuleCall_0_1_0()); }
	ruleExpression{ after(grammarAccess.getIndexAccess().getEndExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__StartAssignment_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getStartExpressionParserRuleCall_1_0_0_0_0()); }
	ruleExpression{ after(grammarAccess.getIndexAccess().getStartExpressionParserRuleCall_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__DotsAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getDotsAlternatives_1_0_0_1_0()); }
(rule__Index__DotsAlternatives_1_0_0_1_0)
{ after(grammarAccess.getIndexAccess().getDotsAlternatives_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__EndAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getEndExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getIndexAccess().getEndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Index__ExpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getExpExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIndexAccess().getExpExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LoopAssignment_9_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLoopForBodyParserRuleCall_9_1_1_0()); }
	ruleForBody{ after(grammarAccess.getPrimaryExpressionAccess().getLoopForBodyParserRuleCall_9_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__BodyAssignment_9_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_9_1_2_0()); }
	ruleBlock{ after(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_9_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LoopAssignment_10_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLoopExpressionParserRuleCall_10_1_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getLoopExpressionParserRuleCall_10_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__WhenAssignment_10_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getWhenExpressionParserRuleCall_10_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getWhenExpressionParserRuleCall_10_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__BodyAssignment_10_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_10_1_3_0()); }
	ruleBlock{ after(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_10_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__LoopAssignment_11_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLoopExpressionParserRuleCall_11_1_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getLoopExpressionParserRuleCall_11_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__WhenAssignment_11_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getWhenExpressionParserRuleCall_11_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getWhenExpressionParserRuleCall_11_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__BodyAssignment_11_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_11_1_3_0()); }
	ruleBlock{ after(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_11_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__BodyAssignment_12_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_12_1_1_0()); }
	ruleBlock{ after(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_12_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__BodyAssignment_13_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_13_1_1_0()); }
	ruleBlock{ after(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_13_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExceptionAssignment_13_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExceptionIdParserRuleCall_13_1_2_0_1_0()); }
	ruleId{ after(grammarAccess.getPrimaryExpressionAccess().getExceptionIdParserRuleCall_13_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CatchBlockAssignment_13_1_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCatchBlockBlockParserRuleCall_13_1_2_0_2_0()); }
	ruleBlock{ after(grammarAccess.getPrimaryExpressionAccess().getCatchBlockBlockParserRuleCall_13_1_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__FinallyBlockAssignment_13_1_2_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockBlockParserRuleCall_13_1_2_0_3_1_0()); }
	ruleBlock{ after(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockBlockParserRuleCall_13_1_2_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__FinallyBlockAssignment_13_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockBlockParserRuleCall_13_1_2_1_1_0()); }
	ruleBlock{ after(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockBlockParserRuleCall_13_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExpAssignment_14_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpExpressionParserRuleCall_14_1_1_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExpExpressionParserRuleCall_14_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__CasesAssignment_14_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getCasesCaseParserRuleCall_14_1_3_0()); }
	ruleCase{ after(grammarAccess.getPrimaryExpressionAccess().getCasesCaseParserRuleCall_14_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ElseBlockAssignment_14_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getElseBlockBlockParserRuleCall_14_1_4_1_0()); }
	ruleBlock{ after(grammarAccess.getPrimaryExpressionAccess().getElseBlockBlockParserRuleCall_14_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__WhensAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWhensExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getCaseAccess().getWhensExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__WhensAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getWhensExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getCaseAccess().getWhensExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getThenBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getCaseAccess().getThenBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__BlocksAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpAccess().getBlocksCondBlockParserRuleCall_0_0()); }
	ruleCondBlock{ after(grammarAccess.getIfExpAccess().getBlocksCondBlockParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__BlocksAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpAccess().getBlocksCondBlockParserRuleCall_1_1_0()); }
	ruleCondBlock{ after(grammarAccess.getIfExpAccess().getBlocksCondBlockParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExp__DefaultBlockAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpAccess().getDefaultBlockBlockParserRuleCall_2_1_0()); }
	ruleBlock{ after(grammarAccess.getIfExpAccess().getDefaultBlockBlockParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CondBlock__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondBlockAccess().getOperatorIFTerminalRuleCall_0_0()); }
	RULE_IF{ after(grammarAccess.getCondBlockAccess().getOperatorIFTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CondBlock__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondBlockAccess().getConditionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getCondBlockAccess().getConditionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CondBlock__ActionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCondBlockAccess().getActionBlockParserRuleCall_2_0()); }
	ruleBlock{ after(grammarAccess.getCondBlockAccess().getActionBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdRef__ValAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdRefAccess().getValIdCrossReference_0()); }
(
{ before(grammarAccess.getIdRefAccess().getValIdIDENTIFIERTerminalRuleCall_0_1()); }
	RULE_IDENTIFIER{ after(grammarAccess.getIdRefAccess().getValIdIDENTIFIERTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getIdRefAccess().getValIdCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Id__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdAccess().getNameIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getIdAccess().getNameIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__AccessorAssignment_0_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAccessorAlternatives_0_0_0_1_0()); }
(rule__Property__AccessorAlternatives_0_0_0_1_0)
{ after(grammarAccess.getPropertyAccess().getAccessorAlternatives_0_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__PropAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getPropIdParserRuleCall_0_1_0()); }
	ruleId{ after(grammarAccess.getPropertyAccess().getPropIdParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__IndexAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getIndexIndexParserRuleCall_1_1_0()); }
	ruleIndex{ after(grammarAccess.getPropertyAccess().getIndexIndexParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__PropsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getPropsIdParserRuleCall_1_2_1_0()); }
	ruleId{ after(grammarAccess.getVariableAccess().getPropsIdParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArgList__ArgsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArgListAccess().getArgsAssignableArgParserRuleCall_0_0()); }
	ruleAssignableArg{ after(grammarAccess.getAssignableArgListAccess().getArgsAssignableArgParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArgList__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArgListAccess().getArgsAssignableArgParserRuleCall_1_1_0()); }
	ruleAssignableArg{ after(grammarAccess.getAssignableArgListAccess().getArgsAssignableArgParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArg__ArgAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArgAccess().getArgAssignableParserRuleCall_0_0()); }
	ruleAssignable{ after(grammarAccess.getAssignableArgAccess().getArgAssignableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignableArg__SplatAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignableArgAccess().getSplatELLIPSISTerminalRuleCall_1_0()); }
	RULE_ELLIPSIS{ after(grammarAccess.getAssignableArgAccess().getSplatELLIPSISTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__ExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getExpExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getArgAccess().getExpExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__SplatAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getSplatELLIPSISTerminalRuleCall_1_0()); }
	RULE_ELLIPSIS{ after(grammarAccess.getArgAccess().getSplatELLIPSISTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgLine__HeadAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgLineAccess().getHeadArgParserRuleCall_0_0()); }
	ruleArg{ after(grammarAccess.getArgLineAccess().getHeadArgParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgLine__TailAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgLineAccess().getTailArgParserRuleCall_1_1_0()); }
	ruleArg{ after(grammarAccess.getArgLineAccess().getTailArgParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__LinesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getLinesArgLineParserRuleCall_0_0()); }
	ruleArgLine{ after(grammarAccess.getExplicitArgListAccess().getLinesArgLineParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__LinesAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getLinesArgLineParserRuleCall_1_0_1_0()); }
	ruleArgLine{ after(grammarAccess.getExplicitArgListAccess().getLinesArgLineParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitArgList__LinesAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitArgListAccess().getLinesArgLineParserRuleCall_1_1_1_0()); }
	ruleArgLine{ after(grammarAccess.getExplicitArgListAccess().getLinesArgLineParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__DummyAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getDummyExplicitArgListParserRuleCall_1_0_0()); }
	ruleExplicitArgList{ after(grammarAccess.getArgListAccess().getDummyExplicitArgListParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__DummyAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getDummyExplicitArgListParserRuleCall_1_1_1_0()); }
	ruleExplicitArgList{ after(grammarAccess.getArgListAccess().getDummyExplicitArgListParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DictItems__DummyAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemsAccess().getDummyExplicitDictItemsParserRuleCall_1_0_0()); }
	ruleExplicitDictItems{ after(grammarAccess.getDictItemsAccess().getDummyExplicitDictItemsParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DictItems__DummyAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemsAccess().getDummyExplicitDictItemsParserRuleCall_1_1_1_0()); }
	ruleExplicitDictItems{ after(grammarAccess.getDictItemsAccess().getDummyExplicitDictItemsParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__LinesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getLinesDictLineParserRuleCall_0_0()); }
	ruleDictLine{ after(grammarAccess.getExplicitDictItemsAccess().getLinesDictLineParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__LinesAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getLinesDictLineParserRuleCall_1_0_1_0()); }
	ruleDictLine{ after(grammarAccess.getExplicitDictItemsAccess().getLinesDictLineParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitDictItems__LinesAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExplicitDictItemsAccess().getLinesDictLineParserRuleCall_1_1_1_0()); }
	ruleDictLine{ after(grammarAccess.getExplicitDictItemsAccess().getLinesDictLineParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DictLine__HeadAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictLineAccess().getHeadDictItemParserRuleCall_0_0()); }
	ruleDictItem{ after(grammarAccess.getDictLineAccess().getHeadDictItemParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DictLine__TailAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictLineAccess().getTailDictItemParserRuleCall_1_1_0()); }
	ruleDictItem{ after(grammarAccess.getDictLineAccess().getTailDictItemParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__KeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getKeyDictKeyParserRuleCall_1_0()); }
	ruleDictKey{ after(grammarAccess.getDictItemAccess().getKeyDictKeyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__ValueAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getValueExpressionParserRuleCall_2_1_0_0()); }
	ruleExpression{ after(grammarAccess.getDictItemAccess().getValueExpressionParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DictItem__ValueAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDictItemAccess().getValueExpressionParserRuleCall_2_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getDictItemAccess().getValueExpressionParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__ParamsAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getParamsParamParserRuleCall_0_1_0_0()); }
	ruleParam{ after(grammarAccess.getLambdaAccess().getParamsParamParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__ParamsAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getParamsParamParserRuleCall_0_1_1_1_0()); }
	ruleParam{ after(grammarAccess.getLambdaAccess().getParamsParamParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lambda__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLambdaAccess().getBodyBlockParserRuleCall_2_0()); }
	ruleBlock{ after(grammarAccess.getLambdaAccess().getBodyBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__SplatAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getSplatELLIPSISTerminalRuleCall_1_0_0()); }
	RULE_ELLIPSIS{ after(grammarAccess.getParamAccess().getSplatELLIPSISTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__DefaultValueAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getDefaultValueExpressionParserRuleCall_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getParamAccess().getDefaultValueExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__ContentAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getContentBodyParserRuleCall_0_1_0()); }
	ruleBody{ after(grammarAccess.getParentheticalAccess().getContentBodyParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthetical__ContentAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentheticalAccess().getContentBodyParserRuleCall_1_1_0()); }
	ruleBody{ after(grammarAccess.getParentheticalAccess().getContentBodyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_TASK : 'task';

RULE_ELLIPSIS : '...';

RULE_DOT_DOT : '..';

RULE_DOUBLE_COLON : '::';

RULE_SHIFT : ('<<'|'>>');

RULE_BOUND_FUNC_ARROW : '=>';

RULE_FUNC_ARROW : '->';

RULE_COMPARE : ('<'|'=='|'>'|'<='|'>='|'!=');

RULE_COMPOUND_ASSIGN : ('+='|'-=');

RULE_PLUS_PLUS : '++';

RULE_MINUS_MINUS : '--';

RULE_PARAM_END : '**)';

RULE_PARAM_START : '(**';

RULE_AT_SIGIL : '@';

RULE_BOOL : ('true'|'false'|'undefined'|'null'|'on'|'no'|'yes'|'off');

RULE_BY : 'by';

RULE_CALL_END : '*)';

RULE_CALL_START : '(*';

RULE_CATCH : 'catch';

RULE_CLASS : 'class';

RULE_COLON : ':';

RULE_COLON_SLASH : 'dummy COLON_SLASH';

RULE_COMMA : ',';

RULE_DOT : '.';

RULE_ELSE : 'else';

RULE_EQUAL : '=';

RULE_EXTENDS : 'extends';

RULE_FINALLY : 'finally';

RULE_FOR : 'for';

RULE_FORIN : 'in';

RULE_FOROF : 'of';

RULE_FUNC_EXIST : 'dummy FUNC_EXIST';

RULE_HERECOMMENT : 'dummy HERECOMMENT';

RULE_IF : ('if'|'unless');

RULE_INDENT : '{*';

RULE_INDEX_END : '*]';

RULE_INDEX_PROTO : 'dummy INDEX_PROTO';

RULE_INDEX_SOAK : 'dummy INDEX_SOAK';

RULE_INDEX_START : '[*';

RULE_JS : 'dummy JS';

RULE_LBRACKET : '[';

RULE_LCURLY : 'dummy LCURLY';

RULE_LEADING_WHEN : 'dummy LEADING_WHEN';

RULE_LOGIC : ('&&'|'||');

RULE_LOOP : 'loop';

RULE_LPAREN : '(';

RULE_MATH : ('*'|'/');

RULE_MINUS : '-';

RULE_NEW : 'new';

RULE_NUMBER : ('0'..'9')+;

RULE_OUTDENT : '*}';

RULE_OWN : 'own';

RULE_PLUS : '+';

RULE_POST_IF : 'dummy POST_IF';

RULE_QUESTION : '?';

RULE_QUESTION_DOT : '?.';

RULE_RBRACKET : ']';

RULE_RCURLY : 'dummy RCURLY';

RULE_REGEX : '///' ( options {greedy=false;} : . )*'///';

RULE_RELATION : ('in'|'of'|'instanceof');

RULE_RETURN : 'return';

RULE_RPAREN : ')';

RULE_STATEMENT : ('break'|'continue'|'debugger');

RULE_STRING : ('\'\'\'' ( options {greedy=false;} : . )*'\'\'\''|'\'' (~('\'') ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))*)? '\''|'"""' ( options {greedy=false;} : . )*'"""'|'"' (~('"') ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))*)? '"');

RULE_SUPER : 'super';

RULE_SWITCH : 'switch';

RULE_TERMINATOR : '\n'+;

RULE_THEN : 'then';

RULE_THIS : 'this';

RULE_THROW : 'throw';

RULE_TRY : 'try';

RULE_UNARY : ('!'|'~');

RULE_UNTIL : 'until';

RULE_WHEN : 'when';

RULE_WHILE : 'while';

RULE_LOGIC_WORD : ('and'|'or');

RULE_COMPARE_WORD : ('isnt'|'is');

RULE_UNARY_WORD : ('new'|'do'|'not');

RULE_ML_COMMENT : '###' ~('#') ( options {greedy=false;} : . )*'###';

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t')+;

RULE_IDENTIFIER : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;


