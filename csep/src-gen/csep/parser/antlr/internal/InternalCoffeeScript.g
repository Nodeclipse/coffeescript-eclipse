/*
* generated by Xtext
*/
grammar InternalCoffeeScript;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package csep.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package csep.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import csep.services.CoffeeScriptGrammarAccess;

}

@parser::members {

 	private CoffeeScriptGrammarAccess grammarAccess;
 	
    public InternalCoffeeScriptParser(TokenStream input, CoffeeScriptGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Root";	
   	}
   	
   	@Override
   	protected CoffeeScriptGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRoot
entryRuleRoot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRootRule()); }
	 iv_ruleRoot=ruleRoot 
	 { $current=$iv_ruleRoot.current; } 
	 EOF 
;

// Rule Root
ruleRoot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRootAccess().getBodyParserRuleCall_0()); 
    }
    this_Body_0=ruleBody
    { 
        $current = $this_Body_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getRootAccess().getBlockParserRuleCall_1_0()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }
this_TERMINATOR_2=RULE_TERMINATOR
    { 
    newLeafNode(this_TERMINATOR_2, grammarAccess.getRootAccess().getTERMINATORTerminalRuleCall_1_1()); 
    }
))?
;





// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	 iv_ruleBody=ruleBody 
	 { $current=$iv_ruleBody.current; } 
	 EOF 
;

// Rule Body
ruleBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBodyAccess().getLinesLineParserRuleCall_0_0()); 
	    }
		lv_lines_0_0=ruleLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyRule());
	        }
       		add(
       			$current, 
       			"lines",
        		lv_lines_0_0, 
        		"Line");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_TERMINATOR_1=RULE_TERMINATOR
    { 
    newLeafNode(this_TERMINATOR_1, grammarAccess.getBodyAccess().getTERMINATORTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBodyAccess().getLinesLineParserRuleCall_1_1_0()); 
	    }
		lv_lines_2_0=ruleLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyRule());
	        }
       		add(
       			$current, 
       			"lines",
        		lv_lines_2_0, 
        		"Line");
	        afterParserOrEnumRuleCall();
	    }

)
)?)*)
;





// Entry rule entryRuleLine
entryRuleLine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLineRule()); }
	 iv_ruleLine=ruleLine 
	 { $current=$iv_ruleLine.current; } 
	 EOF 
;

// Rule Line
ruleLine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLineAccess().getStmtParserRuleCall_0()); 
    }
    this_Stmt_0=ruleStmt
    { 
        $current = $this_Stmt_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLineAccess().getExpressionParserRuleCall_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStmt
entryRuleStmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStmtRule()); }
	 iv_ruleStmt=ruleStmt 
	 { $current=$iv_ruleStmt.current; } 
	 EOF 
;

// Rule Stmt
ruleStmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStmtAccess().getReturnStmtParserRuleCall_0()); 
    }
    this_ReturnStmt_0=ruleReturnStmt
    { 
        $current = $this_ReturnStmt_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStmtAccess().getThrowStmtParserRuleCall_1()); 
    }
    this_ThrowStmt_1=ruleThrowStmt
    { 
        $current = $this_ThrowStmt_1.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
(
ruleId
)
)	RULE_EQUAL	'require' 
))=>
    { 
        newCompositeNode(grammarAccess.getStmtAccess().getRequireStmtParserRuleCall_2()); 
    }
    this_RequireStmt_2=ruleRequireStmt
    { 
        $current = $this_RequireStmt_2.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getStmtAccess().getCommentParserRuleCall_3()); 
    }
    this_Comment_3=ruleComment
    { 
        $current = $this_Comment_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStmtAccess().getClassDeclarationParserRuleCall_4()); 
    }
    this_ClassDeclaration_4=ruleClassDeclaration
    { 
        $current = $this_ClassDeclaration_4.current; 
        afterParserOrEnumRuleCall();
    }

    |(
(
		lv_statement_5_0=RULE_STATEMENT
		{
			newLeafNode(lv_statement_5_0, grammarAccess.getStmtAccess().getStatementSTATEMENTTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStmtRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"statement",
        		lv_statement_5_0, 
        		"STATEMENT");
	    }

)
))
;





// Entry rule entryRuleComment
entryRuleComment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommentRule()); }
	 iv_ruleComment=ruleComment 
	 { $current=$iv_ruleComment.current; } 
	 EOF 
;

// Rule Comment
ruleComment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_comment_0_0=RULE_HERECOMMENT
		{
			newLeafNode(lv_comment_0_0, grammarAccess.getCommentAccess().getCommentHERECOMMENTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_0_0, 
        		"HERECOMMENT");
	    }

)
)
;





// Entry rule entryRuleRequireStmt
entryRuleRequireStmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequireStmtRule()); }
	 iv_ruleRequireStmt=ruleRequireStmt 
	 { $current=$iv_ruleRequireStmt.current; } 
	 EOF 
;

// Rule RequireStmt
ruleRequireStmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
(
ruleId
)
)	RULE_EQUAL	'require' 
))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getRequireStmtAccess().getImportedNamespaceIdParserRuleCall_0_0_0_0()); 
	    }
		lv_importedNamespace_0_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequireStmtRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_0_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EQUAL_1=RULE_EQUAL
    { 
    newLeafNode(this_EQUAL_1, grammarAccess.getRequireStmtAccess().getEQUALTerminalRuleCall_0_0_1()); 
    }
	otherlv_2='require' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRequireStmtAccess().getRequireKeyword_0_0_2());
    }
))this_CALL_START_3=RULE_CALL_START
    { 
    newLeafNode(this_CALL_START_3, grammarAccess.getRequireStmtAccess().getCALL_STARTTerminalRuleCall_1()); 
    }
(
(
		lv_uri_4_0=RULE_STRING
		{
			newLeafNode(lv_uri_4_0, grammarAccess.getRequireStmtAccess().getUriSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequireStmtRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uri",
        		lv_uri_4_0, 
        		"STRING");
	    }

)
)this_CALL_END_5=RULE_CALL_END
    { 
    newLeafNode(this_CALL_END_5, grammarAccess.getRequireStmtAccess().getCALL_ENDTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleReturnStmt
entryRuleReturnStmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReturnStmtRule()); }
	 iv_ruleReturnStmt=ruleReturnStmt 
	 { $current=$iv_ruleReturnStmt.current; } 
	 EOF 
;

// Rule ReturnStmt
ruleReturnStmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getReturnStmtAccess().getReturnStmtAction_0(),
            $current);
    }
)this_RETURN_1=RULE_RETURN
    { 
    newLeafNode(this_RETURN_1, grammarAccess.getReturnStmtAccess().getRETURNTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnStmtRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_POST_IF_3=RULE_POST_IF
    { 
    newLeafNode(this_POST_IF_3, grammarAccess.getReturnStmtAccess().getPOST_IFTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnStmtAccess().getConditionExpressionParserRuleCall_3_1_0()); 
	    }
		lv_condition_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnStmtRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleThrowStmt
entryRuleThrowStmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getThrowStmtRule()); }
	 iv_ruleThrowStmt=ruleThrowStmt 
	 { $current=$iv_ruleThrowStmt.current; } 
	 EOF 
;

// Rule ThrowStmt
ruleThrowStmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_THROW_0=RULE_THROW
    { 
    newLeafNode(this_THROW_0, grammarAccess.getThrowStmtAccess().getTHROWTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getThrowStmtAccess().getExpExpressionParserRuleCall_1_0()); 
	    }
		lv_exp_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getThrowStmtRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSuperClass
entryRuleSuperClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSuperClassRule()); }
	 iv_ruleSuperClass=ruleSuperClass 
	 { $current=$iv_ruleSuperClass.current; } 
	 EOF 
;

// Rule SuperClass
ruleSuperClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSuperClassAccess().getIdRefParserRuleCall_0()); 
    }
    this_IdRef_0=ruleIdRef
    { 
        $current = $this_IdRef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSuperClassAccess().getPropertyParserRuleCall_1()); 
    }
    this_Property_1=ruleProperty
    { 
        $current = $this_Property_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassDeclarationRule()); }
	 iv_ruleClassDeclaration=ruleClassDeclaration 
	 { $current=$iv_ruleClassDeclaration.current; } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0(),
            $current);
    }
)this_CLASS_1=RULE_CLASS
    { 
    newLeafNode(this_CLASS_1, grammarAccess.getClassDeclarationAccess().getCLASSTerminalRuleCall_1()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getBodyBlockParserRuleCall_2_0_0()); 
	    }
		lv_body_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_EXTENDS_3=RULE_EXTENDS
    { 
    newLeafNode(this_EXTENDS_3, grammarAccess.getClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_1_1_0()); 
	    }
		lv_extend_4_0=ruleSuperClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"extend",
        		lv_extend_4_0, 
        		"SuperClass");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getBodyBlockParserRuleCall_2_1_2_0()); 
	    }
		lv_body_5_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameIdParserRuleCall_2_2_0_0_0()); 
	    }
		lv_name_6_1=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_6_1, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getNamePropertyParserRuleCall_2_2_0_0_1()); 
	    }
		lv_name_6_2=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_6_2, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(this_EXTENDS_7=RULE_EXTENDS
    { 
    newLeafNode(this_EXTENDS_7, grammarAccess.getClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_2_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_2_1_1_0()); 
	    }
		lv_extend_8_0=ruleSuperClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"extend",
        		lv_extend_8_0, 
        		"SuperClass");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getBodyBlockParserRuleCall_2_2_2_0()); 
	    }
		lv_body_9_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_9_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleAssignedClassDeclaration
entryRuleAssignedClassDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignedClassDeclarationRule()); }
	 iv_ruleAssignedClassDeclaration=ruleAssignedClassDeclaration 
	 { $current=$iv_ruleAssignedClassDeclaration.current; } 
	 EOF 
;

// Rule AssignedClassDeclaration
ruleAssignedClassDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAssignedClassDeclarationAccess().getClassDeclarationAction_0(),
            $current);
    }
)this_CLASS_1=RULE_CLASS
    { 
    newLeafNode(this_CLASS_1, grammarAccess.getAssignedClassDeclarationAccess().getCLASSTerminalRuleCall_1()); 
    }
((this_EXTENDS_2=RULE_EXTENDS
    { 
    newLeafNode(this_EXTENDS_2, grammarAccess.getAssignedClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignedClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_0_1_0()); 
	    }
		lv_extend_3_0=ruleSuperClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignedClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"extend",
        		lv_extend_3_0, 
        		"SuperClass");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignedClassDeclarationAccess().getBodyBlockParserRuleCall_2_0_2_0()); 
	    }
		lv_body_4_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignedClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_4_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignedClassDeclarationAccess().getNameIdParserRuleCall_2_1_0_0_0()); 
	    }
		lv_name_5_1=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignedClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_1, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAssignedClassDeclarationAccess().getNamePropertyParserRuleCall_2_1_0_0_1()); 
	    }
		lv_name_5_2=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignedClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_2, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(this_EXTENDS_6=RULE_EXTENDS
    { 
    newLeafNode(this_EXTENDS_6, grammarAccess.getAssignedClassDeclarationAccess().getEXTENDSTerminalRuleCall_2_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignedClassDeclarationAccess().getExtendSuperClassParserRuleCall_2_1_1_1_0()); 
	    }
		lv_extend_7_0=ruleSuperClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignedClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"extend",
        		lv_extend_7_0, 
        		"SuperClass");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignedClassDeclarationAccess().getBodyBlockParserRuleCall_2_1_2_0()); 
	    }
		lv_body_8_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignedClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_8_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getPostfixParserRuleCall()); 
    }
    this_Postfix_0=rulePostfix
    { 
        $current = $this_Postfix_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRulePostfix
entryRulePostfix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixRule()); }
	 iv_rulePostfix=rulePostfix 
	 { $current=$iv_rulePostfix.current; } 
	 EOF 
;

// Rule Postfix
rulePostfix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPostfixAccess().getAssignmentParserRuleCall_0()); 
    }
    this_Assignment_0=ruleAssignment
    { 
        $current = $this_Assignment_0.current; 
        afterParserOrEnumRuleCall();
    }
((((	RULE_POST_IF)=>this_POST_IF_1=RULE_POST_IF
    { 
    newLeafNode(this_POST_IF_1, grammarAccess.getPostfixAccess().getPOST_IFTerminalRuleCall_1_0_0()); 
    }
)(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPostfixAccess().getIfDummyAction_1_0_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixAccess().getConditionExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_condition_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((	RULE_FOR)=>this_FOR_4=RULE_FOR
    { 
    newLeafNode(this_FOR_4, grammarAccess.getPostfixAccess().getFORTerminalRuleCall_1_1_0()); 
    }
)(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPostfixAccess().getForDummyAction_1_1_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixAccess().getBodyForBodyParserRuleCall_1_1_2_0()); 
	    }
		lv_body_6_0=ruleForBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_6_0, 
        		"ForBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((	RULE_WHILE)=>this_WHILE_7=RULE_WHILE
    { 
    newLeafNode(this_WHILE_7, grammarAccess.getPostfixAccess().getWHILETerminalRuleCall_1_2_0()); 
    }
)(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPostfixAccess().getWhileDummyAction_1_2_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixAccess().getBodyExpressionParserRuleCall_1_2_2_0()); 
	    }
		lv_body_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_9_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	RULE_WHEN)=>this_WHEN_10=RULE_WHEN
    { 
    newLeafNode(this_WHEN_10, grammarAccess.getPostfixAccess().getWHENTerminalRuleCall_1_2_3_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixAccess().getWhenExpressionParserRuleCall_1_2_3_1_0()); 
	    }
		lv_when_11_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixRule());
	        }
       		set(
       			$current, 
       			"when",
        		lv_when_11_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(((	RULE_UNTIL)=>this_UNTIL_12=RULE_UNTIL
    { 
    newLeafNode(this_UNTIL_12, grammarAccess.getPostfixAccess().getUNTILTerminalRuleCall_1_3_0()); 
    }
)(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPostfixAccess().getUntilDummyAction_1_3_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixAccess().getBodyExpressionParserRuleCall_1_3_2_0()); 
	    }
		lv_body_14_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_14_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	RULE_WHEN)=>this_WHEN_15=RULE_WHEN
    { 
    newLeafNode(this_WHEN_15, grammarAccess.getPostfixAccess().getWHENTerminalRuleCall_1_3_3_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixAccess().getWhenExpressionParserRuleCall_1_3_3_1_0()); 
	    }
		lv_when_16_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixRule());
	        }
       		set(
       			$current, 
       			"when",
        		lv_when_16_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?))?)
;





// Entry rule entryRuleForBody
entryRuleForBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForBodyRule()); }
	 iv_ruleForBody=ruleForBody 
	 { $current=$iv_ruleForBody.current; } 
	 EOF 
;

// Rule ForBody
ruleForBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_OWN_0=RULE_OWN
    { 
    newLeafNode(this_OWN_0, grammarAccess.getForBodyAccess().getOWNTerminalRuleCall_0()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getForBodyAccess().getIndexesForValueParserRuleCall_1_0()); 
	    }
		lv_indexes_1_0=ruleForValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForBodyRule());
	        }
       		add(
       			$current, 
       			"indexes",
        		lv_indexes_1_0, 
        		"ForValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getForBodyAccess().getCOMMATerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForBodyAccess().getIndexesForValueParserRuleCall_2_1_0()); 
	    }
		lv_indexes_3_0=ruleForValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForBodyRule());
	        }
       		add(
       			$current, 
       			"indexes",
        		lv_indexes_3_0, 
        		"ForValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getForBodyAccess().getSourceForSourceParserRuleCall_3_0()); 
	    }
		lv_source_4_0=ruleForSource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForBodyRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_4_0, 
        		"ForSource");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleForValue
entryRuleForValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForValueRule()); }
	 iv_ruleForValue=ruleForValue 
	 { $current=$iv_ruleForValue.current; } 
	 EOF 
;

// Rule ForValue
ruleForValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getForValueAccess().getIdParserRuleCall()); 
    }
    this_Id_0=ruleId
    { 
        $current = $this_Id_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleForSource
entryRuleForSource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForSourceRule()); }
	 iv_ruleForSource=ruleForSource 
	 { $current=$iv_ruleForSource.current; } 
	 EOF 
;

// Rule ForSource
ruleForSource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getForSourceAccess().getForSourceAction_0(),
            $current);
    }
)((((	RULE_FOROF)=>this_FOROF_1=RULE_FOROF
    { 
    newLeafNode(this_FOROF_1, grammarAccess.getForSourceAccess().getFOROFTerminalRuleCall_1_0_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getForSourceAccess().getSourceExpressionParserRuleCall_1_0_1_0()); 
	    }
		lv_source_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForSourceRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	RULE_WHEN)=>this_WHEN_3=RULE_WHEN
    { 
    newLeafNode(this_WHEN_3, grammarAccess.getForSourceAccess().getWHENTerminalRuleCall_1_0_2_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getForSourceAccess().getWhenExpressionParserRuleCall_1_0_2_1_0()); 
	    }
		lv_when_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForSourceRule());
	        }
       		set(
       			$current, 
       			"when",
        		lv_when_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(((	RULE_FORIN)=>this_FORIN_5=RULE_FORIN
    { 
    newLeafNode(this_FORIN_5, grammarAccess.getForSourceAccess().getFORINTerminalRuleCall_1_1_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getForSourceAccess().getSourceExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_source_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForSourceRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((((	RULE_WHEN)=>this_WHEN_7=RULE_WHEN
    { 
    newLeafNode(this_WHEN_7, grammarAccess.getForSourceAccess().getWHENTerminalRuleCall_1_1_2_0_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getForSourceAccess().getWhenExpressionParserRuleCall_1_1_2_0_1_0()); 
	    }
		lv_when_8_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForSourceRule());
	        }
       		set(
       			$current, 
       			"when",
        		lv_when_8_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	RULE_BY)=>this_BY_9=RULE_BY
    { 
    newLeafNode(this_BY_9, grammarAccess.getForSourceAccess().getBYTerminalRuleCall_1_1_2_0_2_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getForSourceAccess().getByExpressionParserRuleCall_1_1_2_0_2_1_0()); 
	    }
		lv_by_10_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForSourceRule());
	        }
       		set(
       			$current, 
       			"by",
        		lv_by_10_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(((	RULE_BY)=>this_BY_11=RULE_BY
    { 
    newLeafNode(this_BY_11, grammarAccess.getForSourceAccess().getBYTerminalRuleCall_1_1_2_1_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getForSourceAccess().getByExpressionParserRuleCall_1_1_2_1_1_0()); 
	    }
		lv_by_12_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForSourceRule());
	        }
       		set(
       			$current, 
       			"by",
        		lv_by_12_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	RULE_WHEN)=>this_WHEN_13=RULE_WHEN
    { 
    newLeafNode(this_WHEN_13, grammarAccess.getForSourceAccess().getWHENTerminalRuleCall_1_1_2_1_2_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getForSourceAccess().getWhenExpressionParserRuleCall_1_1_2_1_2_1_0()); 
	    }
		lv_when_14_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForSourceRule());
	        }
       		set(
       			$current, 
       			"when",
        		lv_when_14_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?))?)))
;





// Entry rule entryRuleRange
entryRuleRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeRule()); }
	 iv_ruleRange=ruleRange 
	 { $current=$iv_ruleRange.current; } 
	 EOF 
;

// Rule Range
ruleRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((	RULE_LBRACKET(
(
ruleExpression
)
)(	RULE_DOT_DOT
    |	RULE_ELLIPSIS)))=>(this_LBRACKET_0=RULE_LBRACKET
    { 
    newLeafNode(this_LBRACKET_0, grammarAccess.getRangeAccess().getLBRACKETTerminalRuleCall_0_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeAccess().getStartExpressionParserRuleCall_0_0_1_0()); 
	    }
		lv_start_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeRule());
	        }
       		set(
       			$current, 
       			"start",
        		lv_start_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_DOT_DOT_2=RULE_DOT_DOT
    { 
    newLeafNode(this_DOT_DOT_2, grammarAccess.getRangeAccess().getDOT_DOTTerminalRuleCall_0_0_2_0()); 
    }

    |this_ELLIPSIS_3=RULE_ELLIPSIS
    { 
    newLeafNode(this_ELLIPSIS_3, grammarAccess.getRangeAccess().getELLIPSISTerminalRuleCall_0_0_2_1()); 
    }
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeAccess().getEndExpressionParserRuleCall_1_0()); 
	    }
		lv_end_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RBRACKET_5=RULE_RBRACKET
    { 
    newLeafNode(this_RBRACKET_5, grammarAccess.getRangeAccess().getRBRACKETTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	 iv_ruleAssignment=ruleAssignment 
	 { $current=$iv_ruleAssignment.current; } 
	 EOF 
;

// Rule Assignment
ruleAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((((
(
ruleAssignable
)
)(
(
(
RULE_EQUAL

    |		RULE_COMPOUND_ASSIGN

)

)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getLeftAssignableParserRuleCall_0_0_0_0_0()); 
	    }
		lv_left_0_0=ruleAssignable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"Assignable");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		lv_operator_1_1=RULE_EQUAL
		{
			newLeafNode(lv_operator_1_1, grammarAccess.getAssignmentAccess().getOperatorEQUALTerminalRuleCall_0_0_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_1_1, 
        		"EQUAL");
	    }

    |		lv_operator_1_2=RULE_COMPOUND_ASSIGN
		{
			newLeafNode(lv_operator_1_2, grammarAccess.getAssignmentAccess().getOperatorCOMPOUND_ASSIGNTerminalRuleCall_0_0_0_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_1_2, 
        		"COMPOUND_ASSIGN");
	    }

)

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getRightAssignedParserRuleCall_0_1_0()); 
	    }
		lv_right_2_0=ruleAssigned		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"Assigned");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getAssignmentAccess().getLogicOpParserRuleCall_1()); 
    }
    this_LogicOp_3=ruleLogicOp
    { 
        $current = $this_LogicOp_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAssigned
entryRuleAssigned returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignedRule()); }
	 iv_ruleAssigned=ruleAssigned 
	 { $current=$iv_ruleAssigned.current; } 
	 EOF 
;

// Rule Assigned
ruleAssigned returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAssignedAccess().getExpressionParserRuleCall_0()); 
    }
    this_Expression_0=ruleExpression
    { 
        $current = $this_Expression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(this_INDENT_1=RULE_INDENT
    { 
    newLeafNode(this_INDENT_1, grammarAccess.getAssignedAccess().getINDENTTerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getAssignedAccess().getExpressionParserRuleCall_1_1()); 
    }
    this_Expression_2=ruleExpression
    { 
        $current = $this_Expression_2.current; 
        afterParserOrEnumRuleCall();
    }
this_OUTDENT_3=RULE_OUTDENT
    { 
    newLeafNode(this_OUTDENT_3, grammarAccess.getAssignedAccess().getOUTDENTTerminalRuleCall_1_2()); 
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getAssignedAccess().getAssignedClassDeclarationParserRuleCall_2()); 
    }
    this_AssignedClassDeclaration_4=ruleAssignedClassDeclaration
    { 
        $current = $this_AssignedClassDeclaration_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLogicOp
entryRuleLogicOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicOpRule()); }
	 iv_ruleLogicOp=ruleLogicOp 
	 { $current=$iv_ruleLogicOp.current; } 
	 EOF 
;

// Rule LogicOp
ruleLogicOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLogicOpAccess().getCompareOpParserRuleCall_0()); 
    }
    this_CompareOp_0=ruleCompareOp
    { 
        $current = $this_CompareOp_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
RULE_LOGIC

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getLogicOpAccess().getBinaryExpLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_operator_2_0=RULE_LOGIC
		{
			newLeafNode(lv_operator_2_0, grammarAccess.getLogicOpAccess().getOperatorLOGICTerminalRuleCall_1_0_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"LOGIC");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicOpAccess().getRightCompareOpParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleCompareOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicOpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"CompareOp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleCompareOp
entryRuleCompareOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompareOpRule()); }
	 iv_ruleCompareOp=ruleCompareOp 
	 { $current=$iv_ruleCompareOp.current; } 
	 EOF 
;

// Rule CompareOp
ruleCompareOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCompareOpAccess().getRelationOpParserRuleCall_0()); 
    }
    this_RelationOp_0=ruleRelationOp
    { 
        $current = $this_RelationOp_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
RULE_COMPARE

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getCompareOpAccess().getBinaryExpLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_operator_2_0=RULE_COMPARE
		{
			newLeafNode(lv_operator_2_0, grammarAccess.getCompareOpAccess().getOperatorCOMPARETerminalRuleCall_1_0_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompareOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"COMPARE");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareOpAccess().getRightRelationOpParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleRelationOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareOpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"RelationOp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleRelationOp
entryRuleRelationOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationOpRule()); }
	 iv_ruleRelationOp=ruleRelationOp 
	 { $current=$iv_ruleRelationOp.current; } 
	 EOF 
;

// Rule RelationOp
ruleRelationOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRelationOpAccess().getShiftOpParserRuleCall_0()); 
    }
    this_ShiftOp_0=ruleShiftOp
    { 
        $current = $this_ShiftOp_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
RULE_RELATION

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getRelationOpAccess().getBinaryExpLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_operator_2_0=RULE_RELATION
		{
			newLeafNode(lv_operator_2_0, grammarAccess.getRelationOpAccess().getOperatorRELATIONTerminalRuleCall_1_0_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"RELATION");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationOpAccess().getRightShiftOpParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleShiftOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationOpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ShiftOp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleShiftOp
entryRuleShiftOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShiftOpRule()); }
	 iv_ruleShiftOp=ruleShiftOp 
	 { $current=$iv_ruleShiftOp.current; } 
	 EOF 
;

// Rule ShiftOp
ruleShiftOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getShiftOpAccess().getAdditiveOpParserRuleCall_0()); 
    }
    this_AdditiveOp_0=ruleAdditiveOp
    { 
        $current = $this_AdditiveOp_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
RULE_SHIFT

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getShiftOpAccess().getBinaryExpLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_operator_2_0=RULE_SHIFT
		{
			newLeafNode(lv_operator_2_0, grammarAccess.getShiftOpAccess().getOperatorSHIFTTerminalRuleCall_1_0_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShiftOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"SHIFT");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getShiftOpAccess().getRightAdditiveOpParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleAdditiveOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShiftOpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AdditiveOp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAdditiveOp
entryRuleAdditiveOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditiveOpRule()); }
	 iv_ruleAdditiveOp=ruleAdditiveOp 
	 { $current=$iv_ruleAdditiveOp.current; } 
	 EOF 
;

// Rule AdditiveOp
ruleAdditiveOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAdditiveOpAccess().getMathOpParserRuleCall_0()); 
    }
    this_MathOp_0=ruleMathOp
    { 
        $current = $this_MathOp_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
(
RULE_PLUS

    |		RULE_MINUS

)

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditiveOpAccess().getBinaryExpLeftAction_1_0_0_0(),
            $current);
    }
)(
(
(
		lv_operator_2_1=RULE_PLUS
		{
			newLeafNode(lv_operator_2_1, grammarAccess.getAdditiveOpAccess().getOperatorPLUSTerminalRuleCall_1_0_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditiveOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_2_1, 
        		"PLUS");
	    }

    |		lv_operator_2_2=RULE_MINUS
		{
			newLeafNode(lv_operator_2_2, grammarAccess.getAdditiveOpAccess().getOperatorMINUSTerminalRuleCall_1_0_0_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAdditiveOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_2_2, 
        		"MINUS");
	    }

)

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveOpAccess().getRightMathOpParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleMathOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveOpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"MathOp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMathOp
entryRuleMathOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMathOpRule()); }
	 iv_ruleMathOp=ruleMathOp 
	 { $current=$iv_ruleMathOp.current; } 
	 EOF 
;

// Rule MathOp
ruleMathOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMathOpAccess().getUnaryOpParserRuleCall_0()); 
    }
    this_UnaryOp_0=ruleUnaryOp
    { 
        $current = $this_UnaryOp_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
RULE_MATH

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMathOpAccess().getBinaryExpLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_operator_2_0=RULE_MATH
		{
			newLeafNode(lv_operator_2_0, grammarAccess.getMathOpAccess().getOperatorMATHTerminalRuleCall_1_0_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMathOpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"MATH");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getMathOpAccess().getRightUnaryOpParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleUnaryOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMathOpRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UnaryOp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUnaryOp
entryRuleUnaryOp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryOpRule()); }
	 iv_ruleUnaryOp=ruleUnaryOp 
	 { $current=$iv_ruleUnaryOp.current; } 
	 EOF 
;

// Rule UnaryOp
ruleUnaryOp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((this_UNARY_0=RULE_UNARY
    { 
    newLeafNode(this_UNARY_0, grammarAccess.getUnaryOpAccess().getUNARYTerminalRuleCall_0_0_0()); 
    }

    |this_PLUS_1=RULE_PLUS
    { 
    newLeafNode(this_PLUS_1, grammarAccess.getUnaryOpAccess().getPLUSTerminalRuleCall_0_0_1()); 
    }

    |this_MINUS_2=RULE_MINUS
    { 
    newLeafNode(this_MINUS_2, grammarAccess.getUnaryOpAccess().getMINUSTerminalRuleCall_0_0_2()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getUnaryOpAccess().getExpressionParserRuleCall_0_1()); 
    }
    this_Expression_3=ruleExpression
    { 
        $current = $this_Expression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
    |((this_PLUS_PLUS_4=RULE_PLUS_PLUS
    { 
    newLeafNode(this_PLUS_PLUS_4, grammarAccess.getUnaryOpAccess().getPLUS_PLUSTerminalRuleCall_1_0_0()); 
    }

    |this_MINUS_MINUS_5=RULE_MINUS_MINUS
    { 
    newLeafNode(this_MINUS_MINUS_5, grammarAccess.getUnaryOpAccess().getMINUS_MINUSTerminalRuleCall_1_0_1()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getUnaryOpAccess().getVariableParserRuleCall_1_1()); 
    }
    this_Variable_6=ruleVariable
    { 
        $current = $this_Variable_6.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getUnaryOpAccess().getApplicationParserRuleCall_2_0()); 
    }
    this_Application_7=ruleApplication
    { 
        $current = $this_Application_7.current; 
        afterParserOrEnumRuleCall();
    }
(this_QUESTION_8=RULE_QUESTION
    { 
    newLeafNode(this_QUESTION_8, grammarAccess.getUnaryOpAccess().getQUESTIONTerminalRuleCall_2_1()); 
    }
)?))
;





// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getApplicationRule()); }
	 iv_ruleApplication=ruleApplication 
	 { $current=$iv_ruleApplication.current; } 
	 EOF 
;

// Rule Application
ruleApplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getApplicationAccess().getSuperCallAction_0_0(),
            $current);
    }
)(this_SUPER_1=RULE_SUPER
    { 
    newLeafNode(this_SUPER_1, grammarAccess.getApplicationAccess().getSUPERTerminalRuleCall_0_1_0()); 
    }
(this_CALL_START_2=RULE_CALL_START
    { 
    newLeafNode(this_CALL_START_2, grammarAccess.getApplicationAccess().getCALL_STARTTerminalRuleCall_0_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getApplicationAccess().getArgsArgListParserRuleCall_0_1_1_1_0()); 
	    }
		lv_args_3_0=ruleArgList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplicationRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"ArgList");
	        afterParserOrEnumRuleCall();
	    }

)
)this_CALL_END_4=RULE_CALL_END
    { 
    newLeafNode(this_CALL_END_4, grammarAccess.getApplicationAccess().getCALL_ENDTerminalRuleCall_0_1_1_2()); 
    }
)?))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getApplicationAccess().getValuePrimaryExpressionParserRuleCall_1_0_0()); 
	    }
		lv_value_5_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplicationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getApplicationAccess().getFeaturesFeatureCallParserRuleCall_1_1_0()); 
	    }
		lv_features_6_0=ruleFeatureCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getApplicationRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_6_0, 
        		"FeatureCall");
	        afterParserOrEnumRuleCall();
	    }

)
)*))
;





// Entry rule entryRuleFeatureCall
entryRuleFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureCallRule()); }
	 iv_ruleFeatureCall=ruleFeatureCall 
	 { $current=$iv_ruleFeatureCall.current; } 
	 EOF 
;

// Rule FeatureCall
ruleFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeatureCallAccess().getFunctionCallParserRuleCall_0()); 
    }
    this_FunctionCall_0=ruleFunctionCall
    { 
        $current = $this_FunctionCall_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeatureCallAccess().getPropertyAccessParserRuleCall_1()); 
    }
    this_PropertyAccess_1=rulePropertyAccess
    { 
        $current = $this_PropertyAccess_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	 iv_ruleFunctionCall=ruleFunctionCall 
	 { $current=$iv_ruleFunctionCall.current; } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionCallAccess().getFunctionCallAction_0(),
            $current);
    }
)(this_FUNC_EXIST_1=RULE_FUNC_EXIST
    { 
    newLeafNode(this_FUNC_EXIST_1, grammarAccess.getFunctionCallAccess().getFUNC_EXISTTerminalRuleCall_1()); 
    }
)?this_CALL_START_2=RULE_CALL_START
    { 
    newLeafNode(this_CALL_START_2, grammarAccess.getFunctionCallAccess().getCALL_STARTTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionCallAccess().getArgsArgListParserRuleCall_3_0()); 
	    }
		lv_args_3_0=ruleArgList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionCallRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"ArgList");
	        afterParserOrEnumRuleCall();
	    }

)
)this_CALL_END_4=RULE_CALL_END
    { 
    newLeafNode(this_CALL_END_4, grammarAccess.getFunctionCallAccess().getCALL_ENDTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRulePropertyAccess
entryRulePropertyAccess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyAccessRule()); }
	 iv_rulePropertyAccess=rulePropertyAccess 
	 { $current=$iv_rulePropertyAccess.current; } 
	 EOF 
;

// Rule PropertyAccess
rulePropertyAccess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPropertyAccessAccess().getNamedPropertyAccessParserRuleCall_0()); 
    }
    this_NamedPropertyAccess_0=ruleNamedPropertyAccess
    { 
        $current = $this_NamedPropertyAccess_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyAccessAccess().getIndexedPropertyAccessParserRuleCall_1()); 
    }
    this_IndexedPropertyAccess_1=ruleIndexedPropertyAccess
    { 
        $current = $this_IndexedPropertyAccess_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleThisProperty
entryRuleThisProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getThisPropertyRule()); }
	 iv_ruleThisProperty=ruleThisProperty 
	 { $current=$iv_ruleThisProperty.current; } 
	 EOF 
;

// Rule ThisProperty
ruleThisProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_AT_SIGIL_0=RULE_AT_SIGIL
    { 
    newLeafNode(this_AT_SIGIL_0, grammarAccess.getThisPropertyAccess().getAT_SIGILTerminalRuleCall_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getThisPropertyAccess().getIdParserRuleCall_1()); 
    }
    this_Id_1=ruleId
    { 
        $current = $this_Id_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNamedPropertyAccess
entryRuleNamedPropertyAccess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedPropertyAccessRule()); }
	 iv_ruleNamedPropertyAccess=ruleNamedPropertyAccess 
	 { $current=$iv_ruleNamedPropertyAccess.current; } 
	 EOF 
;

// Rule NamedPropertyAccess
ruleNamedPropertyAccess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
(
		lv_accessor_0_1=RULE_DOT
		{
			newLeafNode(lv_accessor_0_1, grammarAccess.getNamedPropertyAccessAccess().getAccessorDOTTerminalRuleCall_0_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedPropertyAccessRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"accessor",
        		lv_accessor_0_1, 
        		"DOT");
	    }

    |		lv_accessor_0_2=RULE_QUESTION_DOT
		{
			newLeafNode(lv_accessor_0_2, grammarAccess.getNamedPropertyAccessAccess().getAccessorQUESTION_DOTTerminalRuleCall_0_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedPropertyAccessRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"accessor",
        		lv_accessor_0_2, 
        		"QUESTION_DOT");
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedPropertyAccessAccess().getNameIdParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedPropertyAccessRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_accessor_2_0=RULE_DOUBLE_COLON
		{
			newLeafNode(lv_accessor_2_0, grammarAccess.getNamedPropertyAccessAccess().getAccessorDOUBLE_COLONTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedPropertyAccessRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"accessor",
        		lv_accessor_2_0, 
        		"DOUBLE_COLON");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedPropertyAccessAccess().getNameIdParserRuleCall_1_1_0()); 
	    }
		lv_name_3_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedPropertyAccessRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
)?))
;





// Entry rule entryRuleIndexedPropertyAccess
entryRuleIndexedPropertyAccess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexedPropertyAccessRule()); }
	 iv_ruleIndexedPropertyAccess=ruleIndexedPropertyAccess 
	 { $current=$iv_ruleIndexedPropertyAccess.current; } 
	 EOF 
;

// Rule IndexedPropertyAccess
ruleIndexedPropertyAccess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_INDEX_START_0=RULE_INDEX_START
    { 
    newLeafNode(this_INDEX_START_0, grammarAccess.getIndexedPropertyAccessAccess().getINDEX_STARTTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexedPropertyAccessAccess().getIndexIndexParserRuleCall_1_0()); 
	    }
		lv_index_1_0=ruleIndex		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexedPropertyAccessRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_1_0, 
        		"Index");
	        afterParserOrEnumRuleCall();
	    }

)
)this_INDEX_END_2=RULE_INDEX_END
    { 
    newLeafNode(this_INDEX_END_2, grammarAccess.getIndexedPropertyAccessAccess().getINDEX_ENDTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleIndex
entryRuleIndex returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	 iv_ruleIndex=ruleIndex 
	 { $current=$iv_ruleIndex.current; } 
	 EOF 
;

// Rule Index
ruleIndex returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
(
RULE_DOT_DOT

    |		RULE_ELLIPSIS

)

)
)=>
(
(
		lv_dots_0_1=RULE_DOT_DOT
		{
			newLeafNode(lv_dots_0_1, grammarAccess.getIndexAccess().getDotsDOT_DOTTerminalRuleCall_0_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dots",
        		lv_dots_0_1, 
        		"DOT_DOT");
	    }

    |		lv_dots_0_2=RULE_ELLIPSIS
		{
			newLeafNode(lv_dots_0_2, grammarAccess.getIndexAccess().getDotsELLIPSISTerminalRuleCall_0_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dots",
        		lv_dots_0_2, 
        		"ELLIPSIS");
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexAccess().getEndExpressionParserRuleCall_0_1_0()); 
	    }
		lv_end_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
(
ruleExpression
)
)(
(
(
RULE_DOT_DOT

    |		RULE_ELLIPSIS

)

)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getIndexAccess().getStartExpressionParserRuleCall_1_0_0_0_0()); 
	    }
		lv_start_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexRule());
	        }
       		set(
       			$current, 
       			"start",
        		lv_start_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		lv_dots_3_1=RULE_DOT_DOT
		{
			newLeafNode(lv_dots_3_1, grammarAccess.getIndexAccess().getDotsDOT_DOTTerminalRuleCall_1_0_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dots",
        		lv_dots_3_1, 
        		"DOT_DOT");
	    }

    |		lv_dots_3_2=RULE_ELLIPSIS
		{
			newLeafNode(lv_dots_3_2, grammarAccess.getIndexAccess().getDotsELLIPSISTerminalRuleCall_1_0_0_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndexRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dots",
        		lv_dots_3_2, 
        		"ELLIPSIS");
	    }

)

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexAccess().getEndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_end_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexAccess().getExpExpressionParserRuleCall_2_0()); 
	    }
		lv_exp_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIfExpParserRuleCall_0()); 
    }
    this_IfExp_0=ruleIfExp
    { 
        $current = $this_IfExp_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParentheticalParserRuleCall_1()); 
    }
    this_Parenthetical_1=ruleParenthetical
    { 
        $current = $this_Parenthetical_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_2()); 
    }
    this_Literal_2=ruleLiteral
    { 
        $current = $this_Literal_2.current; 
        afterParserOrEnumRuleCall();
    }

    |(((	RULE_LBRACKET(
(
ruleExpression
)
)(	RULE_DOT_DOT
    |	RULE_ELLIPSIS)))=>
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getRangeParserRuleCall_3()); 
    }
    this_Range_3=ruleRange
    { 
        $current = $this_Range_3.current; 
        afterParserOrEnumRuleCall();
    }
)
    |((	RULE_LBRACKET)=>
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArrayParserRuleCall_4()); 
    }
    this_Array_4=ruleArray
    { 
        $current = $this_Array_4.current; 
        afterParserOrEnumRuleCall();
    }
)
    |((	RULE_LCURLY)=>
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getDictionaryParserRuleCall_5()); 
    }
    this_Dictionary_5=ruleDictionary
    { 
        $current = $this_Dictionary_5.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLambdaParserRuleCall_6()); 
    }
    this_Lambda_6=ruleLambda
    { 
        $current = $this_Lambda_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getThisPropertyParserRuleCall_7()); 
    }
    this_ThisProperty_7=ruleThisProperty
    { 
        $current = $this_ThisProperty_7.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getThisAloneAction_8_0(),
            $current);
    }
)this_THIS_9=RULE_THIS
    { 
    newLeafNode(this_THIS_9, grammarAccess.getPrimaryExpressionAccess().getTHISTerminalRuleCall_8_1()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getForAction_9_0(),
            $current);
    }
)(this_FOR_11=RULE_FOR
    { 
    newLeafNode(this_FOR_11, grammarAccess.getPrimaryExpressionAccess().getFORTerminalRuleCall_9_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLoopForBodyParserRuleCall_9_1_1_0()); 
	    }
		lv_loop_12_0=ruleForBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"loop",
        		lv_loop_12_0, 
        		"ForBody");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_9_1_2_0()); 
	    }
		lv_body_13_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_13_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getWhileAction_10_0(),
            $current);
    }
)(this_WHILE_15=RULE_WHILE
    { 
    newLeafNode(this_WHILE_15, grammarAccess.getPrimaryExpressionAccess().getWHILETerminalRuleCall_10_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLoopExpressionParserRuleCall_10_1_1_0()); 
	    }
		lv_loop_16_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"loop",
        		lv_loop_16_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WHEN_17=RULE_WHEN
    { 
    newLeafNode(this_WHEN_17, grammarAccess.getPrimaryExpressionAccess().getWHENTerminalRuleCall_10_1_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getWhenExpressionParserRuleCall_10_1_2_1_0()); 
	    }
		lv_when_18_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"when",
        		lv_when_18_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_10_1_3_0()); 
	    }
		lv_body_19_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_19_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getUntilAction_11_0(),
            $current);
    }
)(this_UNTIL_21=RULE_UNTIL
    { 
    newLeafNode(this_UNTIL_21, grammarAccess.getPrimaryExpressionAccess().getUNTILTerminalRuleCall_11_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLoopExpressionParserRuleCall_11_1_1_0()); 
	    }
		lv_loop_22_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"loop",
        		lv_loop_22_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WHEN_23=RULE_WHEN
    { 
    newLeafNode(this_WHEN_23, grammarAccess.getPrimaryExpressionAccess().getWHENTerminalRuleCall_11_1_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getWhenExpressionParserRuleCall_11_1_2_1_0()); 
	    }
		lv_when_24_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"when",
        		lv_when_24_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_11_1_3_0()); 
	    }
		lv_body_25_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_25_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getLoopAction_12_0(),
            $current);
    }
)(this_LOOP_27=RULE_LOOP
    { 
    newLeafNode(this_LOOP_27, grammarAccess.getPrimaryExpressionAccess().getLOOPTerminalRuleCall_12_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_12_1_1_0()); 
	    }
		lv_body_28_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_28_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getTryCatchAction_13_0(),
            $current);
    }
)(this_TRY_30=RULE_TRY
    { 
    newLeafNode(this_TRY_30, grammarAccess.getPrimaryExpressionAccess().getTRYTerminalRuleCall_13_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBodyBlockParserRuleCall_13_1_1_0()); 
	    }
		lv_body_31_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_31_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_CATCH_32=RULE_CATCH
    { 
    newLeafNode(this_CATCH_32, grammarAccess.getPrimaryExpressionAccess().getCATCHTerminalRuleCall_13_1_2_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExceptionIdParserRuleCall_13_1_2_0_1_0()); 
	    }
		lv_exception_33_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"exception",
        		lv_exception_33_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCatchBlockBlockParserRuleCall_13_1_2_0_2_0()); 
	    }
		lv_catchBlock_34_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"catchBlock",
        		lv_catchBlock_34_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_FINALLY_35=RULE_FINALLY
    { 
    newLeafNode(this_FINALLY_35, grammarAccess.getPrimaryExpressionAccess().getFINALLYTerminalRuleCall_13_1_2_0_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockBlockParserRuleCall_13_1_2_0_3_1_0()); 
	    }
		lv_finallyBlock_36_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyBlock",
        		lv_finallyBlock_36_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(this_FINALLY_37=RULE_FINALLY
    { 
    newLeafNode(this_FINALLY_37, grammarAccess.getPrimaryExpressionAccess().getFINALLYTerminalRuleCall_13_1_2_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFinallyBlockBlockParserRuleCall_13_1_2_1_1_0()); 
	    }
		lv_finallyBlock_38_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyBlock",
        		lv_finallyBlock_38_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)))?))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getSwitchAction_14_0(),
            $current);
    }
)(this_SWITCH_40=RULE_SWITCH
    { 
    newLeafNode(this_SWITCH_40, grammarAccess.getPrimaryExpressionAccess().getSWITCHTerminalRuleCall_14_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpExpressionParserRuleCall_14_1_1_0()); 
	    }
		lv_exp_41_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_41_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?this_INDENT_42=RULE_INDENT
    { 
    newLeafNode(this_INDENT_42, grammarAccess.getPrimaryExpressionAccess().getINDENTTerminalRuleCall_14_1_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCasesCaseParserRuleCall_14_1_3_0()); 
	    }
		lv_cases_43_0=ruleCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_43_0, 
        		"Case");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_ELSE_44=RULE_ELSE
    { 
    newLeafNode(this_ELSE_44, grammarAccess.getPrimaryExpressionAccess().getELSETerminalRuleCall_14_1_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getElseBlockBlockParserRuleCall_14_1_4_1_0()); 
	    }
		lv_elseBlock_45_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"elseBlock",
        		lv_elseBlock_45_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))?this_OUTDENT_46=RULE_OUTDENT
    { 
    newLeafNode(this_OUTDENT_46, grammarAccess.getPrimaryExpressionAccess().getOUTDENTTerminalRuleCall_14_1_5()); 
    }
))
    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdRefParserRuleCall_15()); 
    }
    this_IdRef_47=ruleIdRef
    { 
        $current = $this_IdRef_47.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBlockAccess().getBlockAction_0(),
            $current);
    }
)this_INDENT_1=RULE_INDENT
    { 
    newLeafNode(this_INDENT_1, grammarAccess.getBlockAccess().getINDENTTerminalRuleCall_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getBlockAccess().getBodyParserRuleCall_2()); 
    }
    this_Body_2=ruleBody
    { 
        $current = $this_Body_2.current; 
        afterParserOrEnumRuleCall();
    }
)?this_OUTDENT_3=RULE_OUTDENT
    { 
    newLeafNode(this_OUTDENT_3, grammarAccess.getBlockAccess().getOUTDENTTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleCase
entryRuleCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaseRule()); }
	 iv_ruleCase=ruleCase 
	 { $current=$iv_ruleCase.current; } 
	 EOF 
;

// Rule Case
ruleCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_LEADING_WHEN_0=RULE_LEADING_WHEN
    { 
    newLeafNode(this_LEADING_WHEN_0, grammarAccess.getCaseAccess().getLEADING_WHENTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getWhensExpressionParserRuleCall_1_0()); 
	    }
		lv_whens_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"whens",
        		lv_whens_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getCaseAccess().getCOMMATerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getWhensExpressionParserRuleCall_2_1_0()); 
	    }
		lv_whens_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"whens",
        		lv_whens_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getThenBlockParserRuleCall_3_0()); 
	    }
		lv_then_4_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_4_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_TERMINATOR_5=RULE_TERMINATOR
    { 
    newLeafNode(this_TERMINATOR_5, grammarAccess.getCaseAccess().getTERMINATORTerminalRuleCall_4()); 
    }
)?)
;





// Entry rule entryRuleIfExp
entryRuleIfExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfExpRule()); }
	 iv_ruleIfExp=ruleIfExp 
	 { $current=$iv_ruleIfExp.current; } 
	 EOF 
;

// Rule IfExp
ruleIfExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIfExpAccess().getBlocksCondBlockParserRuleCall_0_0()); 
	    }
		lv_blocks_0_0=ruleCondBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfExpRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_0_0, 
        		"CondBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_ELSE_1=RULE_ELSE
    { 
    newLeafNode(this_ELSE_1, grammarAccess.getIfExpAccess().getELSETerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfExpAccess().getBlocksCondBlockParserRuleCall_1_1_0()); 
	    }
		lv_blocks_2_0=ruleCondBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfExpRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_2_0, 
        		"CondBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_ELSE_3=RULE_ELSE
    { 
    newLeafNode(this_ELSE_3, grammarAccess.getIfExpAccess().getELSETerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfExpAccess().getDefaultBlockBlockParserRuleCall_2_1_0()); 
	    }
		lv_defaultBlock_4_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfExpRule());
	        }
       		set(
       			$current, 
       			"defaultBlock",
        		lv_defaultBlock_4_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleCondBlock
entryRuleCondBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCondBlockRule()); }
	 iv_ruleCondBlock=ruleCondBlock 
	 { $current=$iv_ruleCondBlock.current; } 
	 EOF 
;

// Rule CondBlock
ruleCondBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operator_0_0=RULE_IF
		{
			newLeafNode(lv_operator_0_0, grammarAccess.getCondBlockAccess().getOperatorIFTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCondBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"IF");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCondBlockAccess().getConditionExpressionParserRuleCall_1_0()); 
	    }
		lv_condition_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondBlockRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCondBlockAccess().getActionBlockParserRuleCall_2_0()); 
	    }
		lv_action_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCondBlockRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_2_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIdRef
entryRuleIdRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdRefRule()); }
	 iv_ruleIdRef=ruleIdRef 
	 { $current=$iv_ruleIdRef.current; } 
	 EOF 
;

// Rule IdRef
ruleIdRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdRefRule());
	        }
        }
	otherlv_0=RULE_IDENTIFIER
	{
		newLeafNode(otherlv_0, grammarAccess.getIdRefAccess().getValIdCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleId
entryRuleId returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdRule()); }
	 iv_ruleId=ruleId 
	 { $current=$iv_ruleId.current; } 
	 EOF 
;

// Rule Id
ruleId returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_IDENTIFIER
		{
			newLeafNode(lv_name_0_0, grammarAccess.getIdAccess().getNameIDENTIFIERTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENTIFIER");
	    }

)
)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((	ruleIdRef(
(
(
RULE_DOT

    |		RULE_DOUBLE_COLON

    |		RULE_QUESTION_DOT

)

)
)))=>(
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getIdRefParserRuleCall_0_0_0_0()); 
    }
    this_IdRef_0=ruleIdRef
    { 
        $current = $this_IdRef_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
(
		lv_accessor_1_1=RULE_DOT
		{
			newLeafNode(lv_accessor_1_1, grammarAccess.getPropertyAccess().getAccessorDOTTerminalRuleCall_0_0_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"accessor",
        		lv_accessor_1_1, 
        		"DOT");
	    }

    |		lv_accessor_1_2=RULE_DOUBLE_COLON
		{
			newLeafNode(lv_accessor_1_2, grammarAccess.getPropertyAccess().getAccessorDOUBLE_COLONTerminalRuleCall_0_0_0_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"accessor",
        		lv_accessor_1_2, 
        		"DOUBLE_COLON");
	    }

    |		lv_accessor_1_3=RULE_QUESTION_DOT
		{
			newLeafNode(lv_accessor_1_3, grammarAccess.getPropertyAccess().getAccessorQUESTION_DOTTerminalRuleCall_0_0_0_1_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"accessor",
        		lv_accessor_1_3, 
        		"QUESTION_DOT");
	    }

)

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getPropIdParserRuleCall_0_1_0()); 
	    }
		lv_prop_2_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"prop",
        		lv_prop_2_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((((	ruleIdRef	RULE_INDEX_START))=>(
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getIdRefParserRuleCall_1_0_0_0()); 
    }
    this_IdRef_3=ruleIdRef
    { 
        $current = $this_IdRef_3.current; 
        afterParserOrEnumRuleCall();
    }
this_INDEX_START_4=RULE_INDEX_START
    { 
    newLeafNode(this_INDEX_START_4, grammarAccess.getPropertyAccess().getINDEX_STARTTerminalRuleCall_1_0_0_1()); 
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getIndexIndexParserRuleCall_1_1_0()); 
	    }
		lv_index_5_0=ruleIndex		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_5_0, 
        		"Index");
	        afterParserOrEnumRuleCall();
	    }

)
)this_INDEX_END_6=RULE_INDEX_END
    { 
    newLeafNode(this_INDEX_END_6, grammarAccess.getPropertyAccess().getINDEX_ENDTerminalRuleCall_1_2()); 
    }
))
;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVariableAccess().getIdParserRuleCall_0()); 
    }
    this_Id_0=ruleId
    { 
        $current = $this_Id_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((this_AT_SIGIL_1=RULE_AT_SIGIL
    { 
    newLeafNode(this_AT_SIGIL_1, grammarAccess.getVariableAccess().getAT_SIGILTerminalRuleCall_1_0_0()); 
    }

    |(this_THIS_2=RULE_THIS
    { 
    newLeafNode(this_THIS_2, grammarAccess.getVariableAccess().getTHISTerminalRuleCall_1_0_1_0()); 
    }
this_DOT_3=RULE_DOT
    { 
    newLeafNode(this_DOT_3, grammarAccess.getVariableAccess().getDOTTerminalRuleCall_1_0_1_1()); 
    }
))
    { 
        newCompositeNode(grammarAccess.getVariableAccess().getIdParserRuleCall_1_1()); 
    }
    this_Id_4=ruleId
    { 
        $current = $this_Id_4.current; 
        afterParserOrEnumRuleCall();
    }
(this_DOT_5=RULE_DOT
    { 
    newLeafNode(this_DOT_5, grammarAccess.getVariableAccess().getDOTTerminalRuleCall_1_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getPropsIdParserRuleCall_1_2_1_0()); 
	    }
		lv_props_6_0=ruleId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		add(
       			$current, 
       			"props",
        		lv_props_6_0, 
        		"Id");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |
    { 
        newCompositeNode(grammarAccess.getVariableAccess().getPropertyParserRuleCall_2()); 
    }
    this_Property_7=ruleProperty
    { 
        $current = $this_Property_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAssignableArray
entryRuleAssignableArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignableArrayRule()); }
	 iv_ruleAssignableArray=ruleAssignableArray 
	 { $current=$iv_ruleAssignableArray.current; } 
	 EOF 
;

// Rule AssignableArray
ruleAssignableArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	RULE_LBRACKET)=>this_LBRACKET_0=RULE_LBRACKET
    { 
    newLeafNode(this_LBRACKET_0, grammarAccess.getAssignableArrayAccess().getLBRACKETTerminalRuleCall_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getAssignableArrayAccess().getAssignableArgListParserRuleCall_1()); 
    }
    this_AssignableArgList_1=ruleAssignableArgList
    { 
        $current = $this_AssignableArgList_1.current; 
        afterParserOrEnumRuleCall();
    }
this_RBRACKET_2=RULE_RBRACKET
    { 
    newLeafNode(this_RBRACKET_2, grammarAccess.getAssignableArrayAccess().getRBRACKETTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleAssignableArgList
entryRuleAssignableArgList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignableArgListRule()); }
	 iv_ruleAssignableArgList=ruleAssignableArgList 
	 { $current=$iv_ruleAssignableArgList.current; } 
	 EOF 
;

// Rule AssignableArgList
ruleAssignableArgList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignableArgListAccess().getArgsAssignableArgParserRuleCall_0_0()); 
	    }
		lv_args_0_0=ruleAssignableArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignableArgListRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_0_0, 
        		"AssignableArg");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getAssignableArgListAccess().getCOMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignableArgListAccess().getArgsAssignableArgParserRuleCall_1_1_0()); 
	    }
		lv_args_2_0=ruleAssignableArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignableArgListRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_2_0, 
        		"AssignableArg");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAssignableArg
entryRuleAssignableArg returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignableArgRule()); }
	 iv_ruleAssignableArg=ruleAssignableArg 
	 { $current=$iv_ruleAssignableArg.current; } 
	 EOF 
;

// Rule AssignableArg
ruleAssignableArg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignableArgAccess().getArgAssignableParserRuleCall_0_0()); 
	    }
		lv_arg_0_0=ruleAssignable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignableArgRule());
	        }
       		set(
       			$current, 
       			"arg",
        		lv_arg_0_0, 
        		"Assignable");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_splat_1_0=RULE_ELLIPSIS
		{
			newLeafNode(lv_splat_1_0, grammarAccess.getAssignableArgAccess().getSplatELLIPSISTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignableArgRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splat",
        		true, 
        		"ELLIPSIS");
	    }

)
)?)
;





// Entry rule entryRuleAssignable
entryRuleAssignable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignableRule()); }
	 iv_ruleAssignable=ruleAssignable 
	 { $current=$iv_ruleAssignable.current; } 
	 EOF 
;

// Rule Assignable
ruleAssignable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAssignableAccess().getVariableParserRuleCall_0()); 
    }
    this_Variable_0=ruleVariable
    { 
        $current = $this_Variable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((	RULE_LCURLY)=>
    { 
        newCompositeNode(grammarAccess.getAssignableAccess().getDictionaryParserRuleCall_1()); 
    }
    this_Dictionary_1=ruleDictionary
    { 
        $current = $this_Dictionary_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |((	RULE_LBRACKET)=>
    { 
        newCompositeNode(grammarAccess.getAssignableAccess().getAssignableArrayParserRuleCall_2()); 
    }
    this_AssignableArray_2=ruleAssignableArray
    { 
        $current = $this_AssignableArray_2.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleArg
entryRuleArg returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgRule()); }
	 iv_ruleArg=ruleArg 
	 { $current=$iv_ruleArg.current; } 
	 EOF 
;

// Rule Arg
ruleArg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgAccess().getExpExpressionParserRuleCall_0_0()); 
	    }
		lv_exp_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_splat_1_0=RULE_ELLIPSIS
		{
			newLeafNode(lv_splat_1_0, grammarAccess.getArgAccess().getSplatELLIPSISTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splat",
        		true, 
        		"ELLIPSIS");
	    }

)
)?)
;





// Entry rule entryRuleArgLine
entryRuleArgLine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgLineRule()); }
	 iv_ruleArgLine=ruleArgLine 
	 { $current=$iv_ruleArgLine.current; } 
	 EOF 
;

// Rule ArgLine
ruleArgLine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgLineAccess().getHeadArgParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgLineRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getArgLineAccess().getCOMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgLineAccess().getTailArgParserRuleCall_1_1_0()); 
	    }
		lv_tail_2_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgLineRule());
	        }
       		add(
       			$current, 
       			"tail",
        		lv_tail_2_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getArgLineAccess().getCOMMATerminalRuleCall_2()); 
    }
)?)
;





// Entry rule entryRuleExplicitArgList
entryRuleExplicitArgList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExplicitArgListRule()); }
	 iv_ruleExplicitArgList=ruleExplicitArgList 
	 { $current=$iv_ruleExplicitArgList.current; } 
	 EOF 
;

// Rule ExplicitArgList
ruleExplicitArgList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExplicitArgListAccess().getLinesArgLineParserRuleCall_0_0()); 
	    }
		lv_lines_0_0=ruleArgLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplicitArgListRule());
	        }
       		add(
       			$current, 
       			"lines",
        		lv_lines_0_0, 
        		"ArgLine");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_TERMINATOR_1=RULE_TERMINATOR
    { 
    newLeafNode(this_TERMINATOR_1, grammarAccess.getExplicitArgListAccess().getTERMINATORTerminalRuleCall_1_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExplicitArgListAccess().getLinesArgLineParserRuleCall_1_0_1_0()); 
	    }
		lv_lines_2_0=ruleArgLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplicitArgListRule());
	        }
       		add(
       			$current, 
       			"lines",
        		lv_lines_2_0, 
        		"ArgLine");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_INDENT_3=RULE_INDENT
    { 
    newLeafNode(this_INDENT_3, grammarAccess.getExplicitArgListAccess().getINDENTTerminalRuleCall_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExplicitArgListAccess().getLinesArgLineParserRuleCall_1_1_1_0()); 
	    }
		lv_lines_4_0=ruleArgLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplicitArgListRule());
	        }
       		add(
       			$current, 
       			"lines",
        		lv_lines_4_0, 
        		"ArgLine");
	        afterParserOrEnumRuleCall();
	    }

)
)this_OUTDENT_5=RULE_OUTDENT
    { 
    newLeafNode(this_OUTDENT_5, grammarAccess.getExplicitArgListAccess().getOUTDENTTerminalRuleCall_1_1_2()); 
    }
))*)
;





// Entry rule entryRuleArgList
entryRuleArgList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgListRule()); }
	 iv_ruleArgList=ruleArgList 
	 { $current=$iv_ruleArgList.current; } 
	 EOF 
;

// Rule ArgList
ruleArgList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArgListAccess().getArgListAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getArgListAccess().getDummyExplicitArgListParserRuleCall_1_0_0()); 
	    }
		lv_dummy_1_0=ruleExplicitArgList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgListRule());
	        }
       		set(
       			$current, 
       			"dummy",
        		lv_dummy_1_0, 
        		"ExplicitArgList");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_INDENT_2=RULE_INDENT
    { 
    newLeafNode(this_INDENT_2, grammarAccess.getArgListAccess().getINDENTTerminalRuleCall_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgListAccess().getDummyExplicitArgListParserRuleCall_1_1_1_0()); 
	    }
		lv_dummy_3_0=ruleExplicitArgList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgListRule());
	        }
       		set(
       			$current, 
       			"dummy",
        		lv_dummy_3_0, 
        		"ExplicitArgList");
	        afterParserOrEnumRuleCall();
	    }

)
)this_OUTDENT_4=RULE_OUTDENT
    { 
    newLeafNode(this_OUTDENT_4, grammarAccess.getArgListAccess().getOUTDENTTerminalRuleCall_1_1_2()); 
    }
))?)
;





// Entry rule entryRuleArray
entryRuleArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayRule()); }
	 iv_ruleArray=ruleArray 
	 { $current=$iv_ruleArray.current; } 
	 EOF 
;

// Rule Array
ruleArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	RULE_LBRACKET)=>this_LBRACKET_0=RULE_LBRACKET
    { 
    newLeafNode(this_LBRACKET_0, grammarAccess.getArrayAccess().getLBRACKETTerminalRuleCall_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getArrayAccess().getArgListParserRuleCall_1()); 
    }
    this_ArgList_1=ruleArgList
    { 
        $current = $this_ArgList_1.current; 
        afterParserOrEnumRuleCall();
    }
this_RBRACKET_2=RULE_RBRACKET
    { 
    newLeafNode(this_RBRACKET_2, grammarAccess.getArrayAccess().getRBRACKETTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleDictionary
entryRuleDictionary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDictionaryRule()); }
	 iv_ruleDictionary=ruleDictionary 
	 { $current=$iv_ruleDictionary.current; } 
	 EOF 
;

// Rule Dictionary
ruleDictionary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	RULE_LCURLY)=>this_LCURLY_0=RULE_LCURLY
    { 
    newLeafNode(this_LCURLY_0, grammarAccess.getDictionaryAccess().getLCURLYTerminalRuleCall_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getDictionaryAccess().getDictItemsParserRuleCall_1()); 
    }
    this_DictItems_1=ruleDictItems
    { 
        $current = $this_DictItems_1.current; 
        afterParserOrEnumRuleCall();
    }
this_RCURLY_2=RULE_RCURLY
    { 
    newLeafNode(this_RCURLY_2, grammarAccess.getDictionaryAccess().getRCURLYTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleDictItems
entryRuleDictItems returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDictItemsRule()); }
	 iv_ruleDictItems=ruleDictItems 
	 { $current=$iv_ruleDictItems.current; } 
	 EOF 
;

// Rule DictItems
ruleDictItems returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDictItemsAccess().getDictItemsAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getDictItemsAccess().getDummyExplicitDictItemsParserRuleCall_1_0_0()); 
	    }
		lv_dummy_1_0=ruleExplicitDictItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictItemsRule());
	        }
       		set(
       			$current, 
       			"dummy",
        		lv_dummy_1_0, 
        		"ExplicitDictItems");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_INDENT_2=RULE_INDENT
    { 
    newLeafNode(this_INDENT_2, grammarAccess.getDictItemsAccess().getINDENTTerminalRuleCall_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDictItemsAccess().getDummyExplicitDictItemsParserRuleCall_1_1_1_0()); 
	    }
		lv_dummy_3_0=ruleExplicitDictItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictItemsRule());
	        }
       		set(
       			$current, 
       			"dummy",
        		lv_dummy_3_0, 
        		"ExplicitDictItems");
	        afterParserOrEnumRuleCall();
	    }

)
)this_OUTDENT_4=RULE_OUTDENT
    { 
    newLeafNode(this_OUTDENT_4, grammarAccess.getDictItemsAccess().getOUTDENTTerminalRuleCall_1_1_2()); 
    }
))?)
;





// Entry rule entryRuleExplicitDictItems
entryRuleExplicitDictItems returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExplicitDictItemsRule()); }
	 iv_ruleExplicitDictItems=ruleExplicitDictItems 
	 { $current=$iv_ruleExplicitDictItems.current; } 
	 EOF 
;

// Rule ExplicitDictItems
ruleExplicitDictItems returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExplicitDictItemsAccess().getLinesDictLineParserRuleCall_0_0()); 
	    }
		lv_lines_0_0=ruleDictLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplicitDictItemsRule());
	        }
       		add(
       			$current, 
       			"lines",
        		lv_lines_0_0, 
        		"DictLine");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_TERMINATOR_1=RULE_TERMINATOR
    { 
    newLeafNode(this_TERMINATOR_1, grammarAccess.getExplicitDictItemsAccess().getTERMINATORTerminalRuleCall_1_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExplicitDictItemsAccess().getLinesDictLineParserRuleCall_1_0_1_0()); 
	    }
		lv_lines_2_0=ruleDictLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplicitDictItemsRule());
	        }
       		add(
       			$current, 
       			"lines",
        		lv_lines_2_0, 
        		"DictLine");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_INDENT_3=RULE_INDENT
    { 
    newLeafNode(this_INDENT_3, grammarAccess.getExplicitDictItemsAccess().getINDENTTerminalRuleCall_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExplicitDictItemsAccess().getLinesDictLineParserRuleCall_1_1_1_0()); 
	    }
		lv_lines_4_0=ruleDictLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExplicitDictItemsRule());
	        }
       		add(
       			$current, 
       			"lines",
        		lv_lines_4_0, 
        		"DictLine");
	        afterParserOrEnumRuleCall();
	    }

)
)this_OUTDENT_5=RULE_OUTDENT
    { 
    newLeafNode(this_OUTDENT_5, grammarAccess.getExplicitDictItemsAccess().getOUTDENTTerminalRuleCall_1_1_2()); 
    }
))*)
;





// Entry rule entryRuleDictLine
entryRuleDictLine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDictLineRule()); }
	 iv_ruleDictLine=ruleDictLine 
	 { $current=$iv_ruleDictLine.current; } 
	 EOF 
;

// Rule DictLine
ruleDictLine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDictLineAccess().getHeadDictItemParserRuleCall_0_0()); 
	    }
		lv_head_0_0=ruleDictItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictLineRule());
	        }
       		set(
       			$current, 
       			"head",
        		lv_head_0_0, 
        		"DictItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_1=RULE_COMMA
    { 
    newLeafNode(this_COMMA_1, grammarAccess.getDictLineAccess().getCOMMATerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDictLineAccess().getTailDictItemParserRuleCall_1_1_0()); 
	    }
		lv_tail_2_0=ruleDictItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictLineRule());
	        }
       		add(
       			$current, 
       			"tail",
        		lv_tail_2_0, 
        		"DictItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getDictLineAccess().getCOMMATerminalRuleCall_2()); 
    }
)?)
;





// Entry rule entryRuleDictItem
entryRuleDictItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDictItemRule()); }
	 iv_ruleDictItem=ruleDictItem 
	 { $current=$iv_ruleDictItem.current; } 
	 EOF 
;

// Rule DictItem
ruleDictItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDictItemAccess().getDictItemAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDictItemAccess().getKeyDictKeyParserRuleCall_1_0()); 
	    }
		lv_key_1_0=ruleDictKey		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictItemRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_1_0, 
        		"DictKey");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COLON_2=RULE_COLON
    { 
    newLeafNode(this_COLON_2, grammarAccess.getDictItemAccess().getCOLONTerminalRuleCall_2_0()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDictItemAccess().getValueExpressionParserRuleCall_2_1_0_0()); 
	    }
		lv_value_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictItemRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_INDENT_4=RULE_INDENT
    { 
    newLeafNode(this_INDENT_4, grammarAccess.getDictItemAccess().getINDENTTerminalRuleCall_2_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDictItemAccess().getValueExpressionParserRuleCall_2_1_1_1_0()); 
	    }
		lv_value_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDictItemRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)this_OUTDENT_6=RULE_OUTDENT
    { 
    newLeafNode(this_OUTDENT_6, grammarAccess.getDictItemAccess().getOUTDENTTerminalRuleCall_2_1_1_2()); 
    }
)))?)
;





// Entry rule entryRuleDictKey
entryRuleDictKey returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDictKeyRule()); }
	 iv_ruleDictKey=ruleDictKey 
	 { $current=$iv_ruleDictKey.current; } 
	 EOF 
;

// Rule DictKey
ruleDictKey returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDictKeyAccess().getLiteralParserRuleCall_0()); 
    }
    this_Literal_0=ruleLiteral
    { 
        $current = $this_Literal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDictKeyAccess().getIdParserRuleCall_1()); 
    }
    this_Id_1=ruleId
    { 
        $current = $this_Id_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLambda
entryRuleLambda returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLambdaRule()); }
	 iv_ruleLambda=ruleLambda 
	 { $current=$iv_ruleLambda.current; } 
	 EOF 
;

// Rule Lambda
ruleLambda returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_PARAM_START_0=RULE_PARAM_START
    { 
    newLeafNode(this_PARAM_START_0, grammarAccess.getLambdaAccess().getPARAM_STARTTerminalRuleCall_0_0()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getLambdaAccess().getParamsParamParserRuleCall_0_1_0_0()); 
	    }
		lv_params_1_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLambdaRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_1_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_2=RULE_COMMA
    { 
    newLeafNode(this_COMMA_2, grammarAccess.getLambdaAccess().getCOMMATerminalRuleCall_0_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLambdaAccess().getParamsParamParserRuleCall_0_1_1_1_0()); 
	    }
		lv_params_3_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLambdaRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?this_PARAM_END_4=RULE_PARAM_END
    { 
    newLeafNode(this_PARAM_END_4, grammarAccess.getLambdaAccess().getPARAM_ENDTerminalRuleCall_0_2()); 
    }
)?(this_FUNC_ARROW_5=RULE_FUNC_ARROW
    { 
    newLeafNode(this_FUNC_ARROW_5, grammarAccess.getLambdaAccess().getFUNC_ARROWTerminalRuleCall_1_0()); 
    }

    |this_BOUND_FUNC_ARROW_6=RULE_BOUND_FUNC_ARROW
    { 
    newLeafNode(this_BOUND_FUNC_ARROW_6, grammarAccess.getLambdaAccess().getBOUND_FUNC_ARROWTerminalRuleCall_1_1()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLambdaAccess().getBodyBlockParserRuleCall_2_0()); 
	    }
		lv_body_7_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLambdaRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_7_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	 iv_ruleParam=ruleParam 
	 { $current=$iv_ruleParam.current; } 
	 EOF 
;

// Rule Param
ruleParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getParamAccess().getIdParserRuleCall_0_0()); 
    }
    this_Id_0=ruleId
    { 
        $current = $this_Id_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((	RULE_LBRACKET)=>
    { 
        newCompositeNode(grammarAccess.getParamAccess().getArrayParserRuleCall_0_1()); 
    }
    this_Array_1=ruleArray
    { 
        $current = $this_Array_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |((	RULE_LCURLY)=>
    { 
        newCompositeNode(grammarAccess.getParamAccess().getDictionaryParserRuleCall_0_2()); 
    }
    this_Dictionary_2=ruleDictionary
    { 
        $current = $this_Dictionary_2.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getParamAccess().getThisPropertyParserRuleCall_0_3()); 
    }
    this_ThisProperty_3=ruleThisProperty
    { 
        $current = $this_ThisProperty_3.current; 
        afterParserOrEnumRuleCall();
    }
)((
(
		lv_splat_4_0=RULE_ELLIPSIS
		{
			newLeafNode(lv_splat_4_0, grammarAccess.getParamAccess().getSplatELLIPSISTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"splat",
        		true, 
        		"ELLIPSIS");
	    }

)
)
    |(this_EQUAL_5=RULE_EQUAL
    { 
    newLeafNode(this_EQUAL_5, grammarAccess.getParamAccess().getEQUALTerminalRuleCall_1_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParamAccess().getDefaultValueExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_defaultValue_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamRule());
	        }
       		set(
       			$current, 
       			"defaultValue",
        		lv_defaultValue_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	 iv_ruleNumberLiteral=ruleNumberLiteral 
	 { $current=$iv_ruleNumberLiteral.current; } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0(),
            $current);
    }
)this_NUMBER_1=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_1, grammarAccess.getNumberLiteralAccess().getNUMBERTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStringLiteralAccess().getStringLiteralAction_0(),
            $current);
    }
)this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getStringLiteralAccess().getSTRINGTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolLiteralRule()); }
	 iv_ruleBoolLiteral=ruleBoolLiteral 
	 { $current=$iv_ruleBoolLiteral.current; } 
	 EOF 
;

// Rule BoolLiteral
ruleBoolLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0(),
            $current);
    }
)this_BOOL_1=RULE_BOOL
    { 
    newLeafNode(this_BOOL_1, grammarAccess.getBoolLiteralAccess().getBOOLTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleJSLiteral
entryRuleJSLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJSLiteralRule()); }
	 iv_ruleJSLiteral=ruleJSLiteral 
	 { $current=$iv_ruleJSLiteral.current; } 
	 EOF 
;

// Rule JSLiteral
ruleJSLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJSLiteralAccess().getJSLiteralAction_0(),
            $current);
    }
)this_JS_1=RULE_JS
    { 
    newLeafNode(this_JS_1, grammarAccess.getJSLiteralAccess().getJSTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleRegexLiteral
entryRuleRegexLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexLiteralRule()); }
	 iv_ruleRegexLiteral=ruleRegexLiteral 
	 { $current=$iv_ruleRegexLiteral.current; } 
	 EOF 
;

// Rule RegexLiteral
ruleRegexLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRegexLiteralAccess().getRegexLiteralAction_0(),
            $current);
    }
)this_REGEX_1=RULE_REGEX
    { 
    newLeafNode(this_REGEX_1, grammarAccess.getRegexLiteralAccess().getREGEXTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_0()); 
    }
    this_NumberLiteral_0=ruleNumberLiteral
    { 
        $current = $this_NumberLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); 
    }
    this_StringLiteral_1=ruleStringLiteral
    { 
        $current = $this_StringLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_2()); 
    }
    this_BoolLiteral_2=ruleBoolLiteral
    { 
        $current = $this_BoolLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getJSLiteralParserRuleCall_3()); 
    }
    this_JSLiteral_3=ruleJSLiteral
    { 
        $current = $this_JSLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getRegexLiteralParserRuleCall_4()); 
    }
    this_RegexLiteral_4=ruleRegexLiteral
    { 
        $current = $this_RegexLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleParenthetical
entryRuleParenthetical returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParentheticalRule()); }
	 iv_ruleParenthetical=ruleParenthetical 
	 { $current=$iv_ruleParenthetical.current; } 
	 EOF 
;

// Rule Parenthetical
ruleParenthetical returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((	RULE_LPAREN	RULE_INDENT))=>(this_LPAREN_0=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_0, grammarAccess.getParentheticalAccess().getLPARENTerminalRuleCall_0_0_0_0()); 
    }
this_INDENT_1=RULE_INDENT
    { 
    newLeafNode(this_INDENT_1, grammarAccess.getParentheticalAccess().getINDENTTerminalRuleCall_0_0_0_1()); 
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getParentheticalAccess().getContentBodyParserRuleCall_0_1_0()); 
	    }
		lv_content_2_0=ruleBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParentheticalRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_2_0, 
        		"Body");
	        afterParserOrEnumRuleCall();
	    }

)
)this_OUTDENT_3=RULE_OUTDENT
    { 
    newLeafNode(this_OUTDENT_3, grammarAccess.getParentheticalAccess().getOUTDENTTerminalRuleCall_0_2()); 
    }
this_RPAREN_4=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_4, grammarAccess.getParentheticalAccess().getRPARENTerminalRuleCall_0_3()); 
    }
)
    |(((	RULE_LPAREN)=>this_LPAREN_5=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_5, grammarAccess.getParentheticalAccess().getLPARENTerminalRuleCall_1_0()); 
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParentheticalAccess().getContentBodyParserRuleCall_1_1_0()); 
	    }
		lv_content_6_0=ruleBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParentheticalRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_6_0, 
        		"Body");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_7=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_7, grammarAccess.getParentheticalAccess().getRPARENTerminalRuleCall_1_2()); 
    }
))
;





RULE_ELLIPSIS : '...';

RULE_DOT_DOT : '..';

RULE_DOUBLE_COLON : '::';

RULE_SHIFT : ('<<'|'>>');

RULE_BOUND_FUNC_ARROW : '=>';

RULE_FUNC_ARROW : '->';

RULE_COMPARE : ('<'|'=='|'>'|'<='|'>='|'!=');

RULE_COMPOUND_ASSIGN : ('+='|'-=');

RULE_PLUS_PLUS : '++';

RULE_MINUS_MINUS : '--';

RULE_PARAM_END : '**)';

RULE_PARAM_START : '(**';

RULE_AT_SIGIL : '@';

RULE_BOOL : ('true'|'false'|'undefined'|'null'|'on'|'no'|'yes'|'off');

RULE_BY : 'by';

RULE_CALL_END : '*)';

RULE_CALL_START : '(*';

RULE_CATCH : 'catch';

RULE_CLASS : 'class';

RULE_COLON : ':';

RULE_COLON_SLASH : 'dummy COLON_SLASH';

RULE_COMMA : ',';

RULE_DOT : '.';

RULE_ELSE : 'else';

RULE_EQUAL : '=';

RULE_EXTENDS : 'extends';

RULE_FINALLY : 'finally';

RULE_FOR : 'for';

RULE_FORIN : 'in';

RULE_FOROF : 'of';

RULE_FUNC_EXIST : 'dummy FUNC_EXIST';

RULE_HERECOMMENT : 'dummy HERECOMMENT';

RULE_IF : ('if'|'unless');

RULE_INDENT : '{*';

RULE_INDEX_END : '*]';

RULE_INDEX_PROTO : 'dummy INDEX_PROTO';

RULE_INDEX_SOAK : 'dummy INDEX_SOAK';

RULE_INDEX_START : '[*';

RULE_JS : 'dummy JS';

RULE_LBRACKET : '[';

RULE_LCURLY : 'dummy LCURLY';

RULE_LEADING_WHEN : 'dummy LEADING_WHEN';

RULE_LOGIC : ('&&'|'||');

RULE_LOOP : 'loop';

RULE_LPAREN : '(';

RULE_MATH : ('*'|'/');

RULE_MINUS : '-';

RULE_NEW : 'new';

RULE_NUMBER : ('0'..'9')+;

RULE_OUTDENT : '*}';

RULE_OWN : 'own';

RULE_PLUS : '+';

RULE_POST_IF : 'dummy POST_IF';

RULE_QUESTION : '?';

RULE_QUESTION_DOT : '?.';

RULE_RBRACKET : ']';

RULE_RCURLY : 'dummy RCURLY';

RULE_REGEX : '///' ( options {greedy=false;} : . )*'///';

RULE_RELATION : ('in'|'of'|'instanceof');

RULE_RETURN : 'return';

RULE_RPAREN : ')';

RULE_STATEMENT : ('break'|'continue'|'debugger');

RULE_STRING : ('\'\'\'' ( options {greedy=false;} : . )*'\'\'\''|'\'' (~('\'') ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))*)? '\''|'"""' ( options {greedy=false;} : . )*'"""'|'"' (~('"') ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))*)? '"');

RULE_SUPER : 'super';

RULE_SWITCH : 'switch';

RULE_TERMINATOR : '\n'+;

RULE_THEN : 'then';

RULE_THIS : 'this';

RULE_THROW : 'throw';

RULE_TRY : 'try';

RULE_UNARY : ('!'|'~');

RULE_UNTIL : 'until';

RULE_WHEN : 'when';

RULE_WHILE : 'while';

RULE_LOGIC_WORD : ('and'|'or');

RULE_COMPARE_WORD : ('isnt'|'is');

RULE_UNARY_WORD : ('new'|'do'|'not');

RULE_ML_COMMENT : '###' ~('#') ( options {greedy=false;} : . )*'###';

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t')+;

RULE_IDENTIFIER : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;


